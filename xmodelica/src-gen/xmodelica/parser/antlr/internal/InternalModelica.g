/*
 * generated by Xtext 2.9.2
 */
grammar InternalModelica;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package xmodelica.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package xmodelica.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import xmodelica.services.ModelicaGrammarAccess;

}

@parser::members {

 	private ModelicaGrammarAccess grammarAccess;

    public InternalModelicaParser(TokenStream input, ModelicaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "StoredDefinition";
   	}

   	@Override
   	protected ModelicaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleStoredDefinition
entryRuleStoredDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoredDefinitionRule()); }
	iv_ruleStoredDefinition=ruleStoredDefinition
	{ $current=$iv_ruleStoredDefinition.current; }
	EOF;

// Rule StoredDefinition
ruleStoredDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='within'
			{
				newLeafNode(otherlv_0, grammarAccess.getStoredDefinitionAccess().getWithinKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStoredDefinitionAccess().getWithinNameParserRuleCall_0_1_0());
					}
					lv_within_1_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStoredDefinitionRule());
						}
						set(
							$current,
							"within",
							lv_within_1_0,
							"xmodelica.Modelica.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getStoredDefinitionAccess().getSemicolonKeyword_0_2());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStoredDefinitionAccess().getClassesClassDefinitionWithFinalParserRuleCall_1_0_0());
					}
					lv_classes_3_0=ruleClassDefinitionWithFinal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStoredDefinitionRule());
						}
						add(
							$current,
							"classes",
							lv_classes_3_0,
							"xmodelica.Modelica.ClassDefinitionWithFinal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getStoredDefinitionAccess().getSemicolonKeyword_1_1());
			}
		)*
	)
;

// Entry rule entryRuleClassDefinitionWithFinal
entryRuleClassDefinitionWithFinal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassDefinitionWithFinalRule()); }
	iv_ruleClassDefinitionWithFinal=ruleClassDefinitionWithFinal
	{ $current=$iv_ruleClassDefinitionWithFinal.current; }
	EOF;

// Rule ClassDefinitionWithFinal
ruleClassDefinitionWithFinal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_final_0_0='final'
				{
					newLeafNode(lv_final_0_0, grammarAccess.getClassDefinitionWithFinalAccess().getFinalFinalKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassDefinitionWithFinalRule());
					}
					setWithLastConsumed($current, "final", true, "final");
				}
			)
		)?
		(
			(
				lv_encapsulated_1_0='encapsulated'
				{
					newLeafNode(lv_encapsulated_1_0, grammarAccess.getClassDefinitionWithFinalAccess().getEncapsulatedEncapsulatedKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassDefinitionWithFinalRule());
					}
					setWithLastConsumed($current, "encapsulated", true, "encapsulated");
				}
			)
		)?
		{
			newCompositeNode(grammarAccess.getClassDefinitionWithFinalAccess().getClassPrefixesParserRuleCall_2());
		}
		ruleClassPrefixes
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getClassDefinitionWithFinalAccess().getClassSpecifierParserRuleCall_3());
		}
		this_ClassSpecifier_3=ruleClassSpecifier
		{
			$current = $this_ClassSpecifier_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleClassDefinition
entryRuleClassDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassDefinitionRule()); }
	iv_ruleClassDefinition=ruleClassDefinition
	{ $current=$iv_ruleClassDefinition.current; }
	EOF;

// Rule ClassDefinition
ruleClassDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_encapsulated_0_0='encapsulated'
				{
					newLeafNode(lv_encapsulated_0_0, grammarAccess.getClassDefinitionAccess().getEncapsulatedEncapsulatedKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassDefinitionRule());
					}
					setWithLastConsumed($current, "encapsulated", true, "encapsulated");
				}
			)
		)?
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getClassPrefixesParserRuleCall_1());
		}
		ruleClassPrefixes
		{
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getClassDefinitionAccess().getClassSpecifierParserRuleCall_2());
		}
		this_ClassSpecifier_2=ruleClassSpecifier
		{
			$current = $this_ClassSpecifier_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleClassPrefixes
entryRuleClassPrefixes returns [String current=null]:
	{ newCompositeNode(grammarAccess.getClassPrefixesRule()); }
	iv_ruleClassPrefixes=ruleClassPrefixes
	{ $current=$iv_ruleClassPrefixes.current.getText(); }
	EOF;

// Rule ClassPrefixes
ruleClassPrefixes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='partial'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getPartialKeyword_0());
			}
		)?
		(
			kw='class'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getClassKeyword_1_0());
			}
			    |
			kw='model'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getModelKeyword_1_1());
			}
			    |
			(
				(
					kw='operator'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getOperatorKeyword_1_2_0());
					}
				)?
				kw='record'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getRecordKeyword_1_2_1());
				}
			)
			    |
			kw='block'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getBlockKeyword_1_3());
			}
			    |
			(
				(
					kw='expandable'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getExpandableKeyword_1_4_0());
					}
				)?
				kw='connector'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getConnectorKeyword_1_4_1());
				}
			)
			    |
			kw='type'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getTypeKeyword_1_5());
			}
			    |
			kw='package'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getPackageKeyword_1_6());
			}
			    |
			(
				(
					kw='pure'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getPureKeyword_1_7_0_0());
					}
					    |
					kw='impure'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getImpureKeyword_1_7_0_1());
					}
				)?
				(
					kw='operator'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getOperatorKeyword_1_7_1());
					}
				)?
				kw='function'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getFunctionKeyword_1_7_2());
				}
			)
			    |
			kw='operator'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getClassPrefixesAccess().getOperatorKeyword_1_8());
			}
		)
	)
;

// Entry rule entryRuleClassSpecifier
entryRuleClassSpecifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassSpecifierRule()); }
	iv_ruleClassSpecifier=ruleClassSpecifier
	{ $current=$iv_ruleClassSpecifier.current; }
	EOF;

// Rule ClassSpecifier
ruleClassSpecifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_IDENT
				{
					newLeafNode(lv_name_0_0, grammarAccess.getClassSpecifierAccess().getNameIDENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassSpecifierRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"xmodelica.Modelica.IDENT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClassSpecifierAccess().getCommentStringCommentParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleStringComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassSpecifierRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"xmodelica.Modelica.StringComment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClassSpecifierAccess().getCompositionCompositionParserRuleCall_2_0());
				}
				lv_composition_2_0=ruleComposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassSpecifierRule());
					}
					set(
						$current,
						"composition",
						lv_composition_2_0,
						"xmodelica.Modelica.Composition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='end'
		{
			newLeafNode(otherlv_3, grammarAccess.getClassSpecifierAccess().getEndKeyword_3());
		}
		(
			(
				lv_name_end_4_0=RULE_IDENT
				{
					newLeafNode(lv_name_end_4_0, grammarAccess.getClassSpecifierAccess().getName_endIDENTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassSpecifierRule());
					}
					setWithLastConsumed(
						$current,
						"name_end",
						lv_name_end_4_0,
						"xmodelica.Modelica.IDENT");
				}
			)
		)
	)
;

// Entry rule entryRuleBasePrefix
entryRuleBasePrefix returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBasePrefixRule()); }
	iv_ruleBasePrefix=ruleBasePrefix
	{ $current=$iv_ruleBasePrefix.current.getText(); }
	EOF;

// Rule BasePrefix
ruleBasePrefix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getBasePrefixAccess().getTypePrefixParserRuleCall());
	}
	this_TypePrefix_0=ruleTypePrefix
	{
		$current.merge(this_TypePrefix_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleEnumList
entryRuleEnumList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumListRule()); }
	iv_ruleEnumList=ruleEnumList
	{ $current=$iv_ruleEnumList.current; }
	EOF;

// Rule EnumList
ruleEnumList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumListAccess().getEnumsEnumerationLiteralParserRuleCall_0_0());
				}
				lv_enums_0_0=ruleEnumerationLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumListRule());
					}
					add(
						$current,
						"enums",
						lv_enums_0_0,
						"xmodelica.Modelica.EnumerationLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getEnumListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumListAccess().getEnumsEnumerationLiteralParserRuleCall_1_1_0());
					}
					lv_enums_2_0=ruleEnumerationLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumListRule());
						}
						add(
							$current,
							"enums",
							lv_enums_2_0,
							"xmodelica.Modelica.EnumerationLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEnumerationLiteral
entryRuleEnumerationLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationLiteralRule()); }
	iv_ruleEnumerationLiteral=ruleEnumerationLiteral
	{ $current=$iv_ruleEnumerationLiteral.current; }
	EOF;

// Rule EnumerationLiteral
ruleEnumerationLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_IDENT
				{
					newLeafNode(lv_id_0_0, grammarAccess.getEnumerationLiteralAccess().getIdIDENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"xmodelica.Modelica.IDENT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumerationLiteralAccess().getCommentCommentParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumerationLiteralRule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"xmodelica.Modelica.Comment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComposition
entryRuleComposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositionRule()); }
	iv_ruleComposition=ruleComposition
	{ $current=$iv_ruleComposition.current; }
	EOF;

// Rule Composition
ruleComposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositionAccess().getPriv_elistElementListParserRuleCall_0_0());
				}
				lv_priv_elist_0_0=ruleElementList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositionRule());
					}
					set(
						$current,
						"priv_elist",
						lv_priv_elist_0_0,
						"xmodelica.Modelica.ElementList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_1='public'
				{
					newLeafNode(otherlv_1, grammarAccess.getCompositionAccess().getPublicKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCompositionAccess().getPub_elistElementListParserRuleCall_1_0_1_0());
						}
						lv_pub_elist_2_0=ruleElementList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompositionRule());
							}
							add(
								$current,
								"pub_elist",
								lv_pub_elist_2_0,
								"xmodelica.Modelica.ElementList");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_3='protected'
				{
					newLeafNode(otherlv_3, grammarAccess.getCompositionAccess().getProtectedKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCompositionAccess().getProtected_elistElementListParserRuleCall_1_1_1_0());
						}
						lv_protected_elist_4_0=ruleElementList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompositionRule());
							}
							add(
								$current,
								"protected_elist",
								lv_protected_elist_4_0,
								"xmodelica.Modelica.ElementList");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getEq_secsEquationSectionParserRuleCall_1_2_0());
					}
					lv_eq_secs_5_0=ruleEquationSection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						add(
							$current,
							"eq_secs",
							lv_eq_secs_5_0,
							"xmodelica.Modelica.EquationSection");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getAlg_secsAlgorithmSectionParserRuleCall_1_3_0());
					}
					lv_alg_secs_6_0=ruleAlgorithmSection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						add(
							$current,
							"alg_secs",
							lv_alg_secs_6_0,
							"xmodelica.Modelica.AlgorithmSection");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_7='external'
			{
				newLeafNode(otherlv_7, grammarAccess.getCompositionAccess().getExternalKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getExt_lang_specLanguageSpecificationParserRuleCall_2_1_0());
					}
					lv_ext_lang_spec_8_0=ruleLanguageSpecification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"ext_lang_spec",
							lv_ext_lang_spec_8_0,
							"xmodelica.Modelica.LanguageSpecification");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getExt_func_callExternalFunctionCallParserRuleCall_2_2_0());
					}
					lv_ext_func_call_9_0=ruleExternalFunctionCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"ext_func_call",
							lv_ext_func_call_9_0,
							"xmodelica.Modelica.ExternalFunctionCall");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getExt_annoAnnotationParserRuleCall_2_3_0());
					}
					lv_ext_anno_10_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"ext_anno",
							lv_ext_anno_10_0,
							"xmodelica.Modelica.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_11=';'
			{
				newLeafNode(otherlv_11, grammarAccess.getCompositionAccess().getSemicolonKeyword_2_4());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositionAccess().getAnnoAnnotationParserRuleCall_3_0_0());
					}
					lv_anno_12_0=ruleAnnotation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositionRule());
						}
						set(
							$current,
							"anno",
							lv_anno_12_0,
							"xmodelica.Modelica.Annotation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13=';'
			{
				newLeafNode(otherlv_13, grammarAccess.getCompositionAccess().getSemicolonKeyword_3_1());
			}
		)?
	)
;

// Entry rule entryRuleLanguageSpecification
entryRuleLanguageSpecification returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLanguageSpecificationRule()); }
	iv_ruleLanguageSpecification=ruleLanguageSpecification
	{ $current=$iv_ruleLanguageSpecification.current.getText(); }
	EOF;

// Rule LanguageSpecification
ruleLanguageSpecification returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getLanguageSpecificationAccess().getSTRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleExternalFunctionCall
entryRuleExternalFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExternalFunctionCallRule()); }
	iv_ruleExternalFunctionCall=ruleExternalFunctionCall
	{ $current=$iv_ruleExternalFunctionCall.current; }
	EOF;

// Rule ExternalFunctionCall
ruleExternalFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExternalFunctionCallAccess().getLhsComponentReferenceParserRuleCall_0_0_0());
					}
					lv_lhs_0_0=ruleComponentReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExternalFunctionCallRule());
						}
						set(
							$current,
							"lhs",
							lv_lhs_0_0,
							"xmodelica.Modelica.ComponentReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getExternalFunctionCallAccess().getEqualsSignKeyword_0_1());
			}
		)?
		(
			(
				lv_name_2_0=RULE_IDENT
				{
					newLeafNode(lv_name_2_0, grammarAccess.getExternalFunctionCallAccess().getNameIDENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternalFunctionCallRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"xmodelica.Modelica.IDENT");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getExternalFunctionCallAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExternalFunctionCallAccess().getArgsExpressionListParserRuleCall_3_0());
				}
				lv_args_4_0=ruleExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExternalFunctionCallRule());
					}
					set(
						$current,
						"args",
						lv_args_4_0,
						"xmodelica.Modelica.ExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getExternalFunctionCallAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleElementList
entryRuleElementList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementListRule()); }
	iv_ruleElementList=ruleElementList
	{ $current=$iv_ruleElementList.current; }
	EOF;

// Rule ElementList
ruleElementList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getElementListAccess().getElementListAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getElementListAccess().getElemElementParserRuleCall_1_0_0());
					}
					lv_elem_1_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementListRule());
						}
						add(
							$current,
							"elem",
							lv_elem_1_0,
							"xmodelica.Modelica.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getElementListAccess().getSemicolonKeyword_1_1());
			}
		)*
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getImportClauseParserRuleCall_0());
		}
		this_ImportClause_0=ruleImportClause
		{
			$current = $this_ImportClause_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getExtendsClauseParserRuleCall_1());
		}
		this_ExtendsClause_1=ruleExtendsClause
		{
			$current = $this_ExtendsClause_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				otherlv_2='redeclare'
				{
					newLeafNode(otherlv_2, grammarAccess.getElementAccess().getRedeclareKeyword_2_0());
				}
			)?
			(
				otherlv_3='final'
				{
					newLeafNode(otherlv_3, grammarAccess.getElementAccess().getFinalKeyword_2_1());
				}
			)?
			(
				otherlv_4='inner'
				{
					newLeafNode(otherlv_4, grammarAccess.getElementAccess().getInnerKeyword_2_2());
				}
			)?
			(
				otherlv_5='outer'
				{
					newLeafNode(otherlv_5, grammarAccess.getElementAccess().getOuterKeyword_2_3());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getElementAccess().getClassDefinitionParserRuleCall_2_4_0_0());
					}
					this_ClassDefinition_6=ruleClassDefinition
					{
						$current = $this_ClassDefinition_6.current;
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getElementAccess().getComponentClauseParserRuleCall_2_4_0_1());
					}
					this_ComponentClause_7=ruleComponentClause
					{
						$current = $this_ComponentClause_7.current;
						afterParserOrEnumRuleCall();
					}
				)
				    |
				(
					otherlv_8='replaceable'
					{
						newLeafNode(otherlv_8, grammarAccess.getElementAccess().getReplaceableKeyword_2_4_1_0());
					}
					(
						{
							newCompositeNode(grammarAccess.getElementAccess().getClassDefinitionParserRuleCall_2_4_1_1_0());
						}
						this_ClassDefinition_9=ruleClassDefinition
						{
							$current = $this_ClassDefinition_9.current;
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getElementAccess().getComponentClauseParserRuleCall_2_4_1_1_1());
						}
						this_ComponentClause_10=ruleComponentClause
						{
							$current = $this_ComponentClause_10.current;
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleImportClause
entryRuleImportClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportClauseRule()); }
	iv_ruleImportClause=ruleImportClause
	{ $current=$iv_ruleImportClause.current; }
	EOF;

// Rule ImportClause
ruleImportClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportClauseAccess().getImportKeyword_0());
		}
		(
			(
				(
					(
						lv_id_1_0=RULE_IDENT
						{
							newLeafNode(lv_id_1_0, grammarAccess.getImportClauseAccess().getIdIDENTTerminalRuleCall_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getImportClauseRule());
							}
							setWithLastConsumed(
								$current,
								"id",
								lv_id_1_0,
								"xmodelica.Modelica.IDENT");
						}
					)
				)
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getImportClauseAccess().getEqualsSignKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getImportClauseAccess().getNameNameParserRuleCall_1_0_2_0());
						}
						lv_name_3_0=ruleName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportClauseRule());
							}
							set(
								$current,
								"name",
								lv_name_3_0,
								"xmodelica.Modelica.Name");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				{
					newCompositeNode(grammarAccess.getImportClauseAccess().getNameParserRuleCall_1_1_0());
				}
				ruleName
				{
					afterParserOrEnumRuleCall();
				}
				(
					(
						otherlv_5=','
						{
							newLeafNode(otherlv_5, grammarAccess.getImportClauseAccess().getCommaKeyword_1_1_1_0());
						}
					)?
					(
						otherlv_6='*'
						{
							newLeafNode(otherlv_6, grammarAccess.getImportClauseAccess().getAsteriskKeyword_1_1_1_1_0());
						}
						    |
						(
							otherlv_7='('
							{
								newLeafNode(otherlv_7, grammarAccess.getImportClauseAccess().getLeftParenthesisKeyword_1_1_1_1_1_0());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getImportClauseAccess().getListImportListParserRuleCall_1_1_1_1_1_1_0());
									}
									lv_list_8_0=ruleImportList
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getImportClauseRule());
										}
										set(
											$current,
											"list",
											lv_list_8_0,
											"xmodelica.Modelica.ImportList");
										afterParserOrEnumRuleCall();
									}
								)
							)
							otherlv_9=')'
							{
								newLeafNode(otherlv_9, grammarAccess.getImportClauseAccess().getRightParenthesisKeyword_1_1_1_1_1_2());
							}
						)
					)
				)?
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImportClauseAccess().getCommentCommentParserRuleCall_2_0());
				}
				lv_comment_10_0=ruleComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportClauseRule());
					}
					set(
						$current,
						"comment",
						lv_comment_10_0,
						"xmodelica.Modelica.Comment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImportList
entryRuleImportList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportListRule()); }
	iv_ruleImportList=ruleImportList
	{ $current=$iv_ruleImportList.current; }
	EOF;

// Rule ImportList
ruleImportList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_IDENT
				{
					newLeafNode(lv_id_0_0, grammarAccess.getImportListAccess().getIdIDENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportListRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"xmodelica.Modelica.IDENT");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getImportListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImportListAccess().getListImportListParserRuleCall_1_1_0());
					}
					lv_list_2_0=ruleImportList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportListRule());
						}
						set(
							$current,
							"list",
							lv_list_2_0,
							"xmodelica.Modelica.ImportList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExtendsClause
entryRuleExtendsClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtendsClauseRule()); }
	iv_ruleExtendsClause=ruleExtendsClause
	{ $current=$iv_ruleExtendsClause.current; }
	EOF;

// Rule ExtendsClause
ruleExtendsClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extends'
		{
			newLeafNode(otherlv_0, grammarAccess.getExtendsClauseAccess().getExtendsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendsClauseAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendsClauseRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"xmodelica.Modelica.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendsClauseAccess().getModClassModificationParserRuleCall_2_0());
				}
				lv_mod_2_0=ruleClassModification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendsClauseRule());
					}
					set(
						$current,
						"mod",
						lv_mod_2_0,
						"xmodelica.Modelica.ClassModification");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendsClauseAccess().getAnnoAnnotationParserRuleCall_3_0());
				}
				lv_anno_3_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendsClauseRule());
					}
					set(
						$current,
						"anno",
						lv_anno_3_0,
						"xmodelica.Modelica.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleConstrainingClause
entryRuleConstrainingClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstrainingClauseRule()); }
	iv_ruleConstrainingClause=ruleConstrainingClause
	{ $current=$iv_ruleConstrainingClause.current; }
	EOF;

// Rule ConstrainingClause
ruleConstrainingClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='constrainedby'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstrainingClauseAccess().getConstrainedbyKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstrainingClauseAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstrainingClauseRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"xmodelica.Modelica.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConstrainingClauseAccess().getModClassModificationParserRuleCall_2_0());
				}
				lv_mod_2_0=ruleClassModification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstrainingClauseRule());
					}
					set(
						$current,
						"mod",
						lv_mod_2_0,
						"xmodelica.Modelica.ClassModification");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleComponentClause
entryRuleComponentClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentClauseRule()); }
	iv_ruleComponentClause=ruleComponentClause
	{ $current=$iv_ruleComponentClause.current; }
	EOF;

// Rule ComponentClause
ruleComponentClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClauseAccess().getPrefixTypePrefixParserRuleCall_0_0());
				}
				lv_prefix_0_0=ruleTypePrefix
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClauseRule());
					}
					set(
						$current,
						"prefix",
						lv_prefix_0_0,
						"xmodelica.Modelica.TypePrefix");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClauseAccess().getTypeTypeSpecifierParserRuleCall_1_0());
				}
				lv_type_1_0=ruleTypeSpecifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClauseRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"xmodelica.Modelica.TypeSpecifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClauseAccess().getSubsArraySubscriptsParserRuleCall_2_0());
				}
				lv_subs_2_0=ruleArraySubscripts
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClauseRule());
					}
					set(
						$current,
						"subs",
						lv_subs_2_0,
						"xmodelica.Modelica.ArraySubscripts");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClauseAccess().getCompsComponentListParserRuleCall_3_0());
				}
				lv_comps_3_0=ruleComponentList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClauseRule());
					}
					set(
						$current,
						"comps",
						lv_comps_3_0,
						"xmodelica.Modelica.ComponentList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypePrefix
entryRuleTypePrefix returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypePrefixRule()); }
	iv_ruleTypePrefix=ruleTypePrefix
	{ $current=$iv_ruleTypePrefix.current.getText(); }
	EOF;

// Rule TypePrefix
ruleTypePrefix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='flow'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypePrefixAccess().getFlowKeyword_0_0());
			}
			    |
			kw='stream'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypePrefixAccess().getStreamKeyword_0_1());
			}
		)?
		(
			kw='discrete'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypePrefixAccess().getDiscreteKeyword_1_0());
			}
			    |
			kw='parameter'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypePrefixAccess().getParameterKeyword_1_1());
			}
			    |
			kw='constant'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypePrefixAccess().getConstantKeyword_1_2());
			}
		)?
		(
			kw='input'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypePrefixAccess().getInputKeyword_2_0());
			}
			    |
			kw='output'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTypePrefixAccess().getOutputKeyword_2_1());
			}
		)?
	)
;

// Entry rule entryRuleTypeSpecifier
entryRuleTypeSpecifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSpecifierRule()); }
	iv_ruleTypeSpecifier=ruleTypeSpecifier
	{ $current=$iv_ruleTypeSpecifier.current; }
	EOF;

// Rule TypeSpecifier
ruleTypeSpecifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTypeSpecifierRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getTypeSpecifierAccess().getNameClassDefinitionCrossReference_0());
			}
			ruleName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleComponentList
entryRuleComponentList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentListRule()); }
	iv_ruleComponentList=ruleComponentList
	{ $current=$iv_ruleComponentList.current; }
	EOF;

// Rule ComponentList
ruleComponentList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentListAccess().getCompsComponentDeclarationParserRuleCall_0_0());
				}
				lv_comps_0_0=ruleComponentDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentListRule());
					}
					add(
						$current,
						"comps",
						lv_comps_0_0,
						"xmodelica.Modelica.ComponentDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getComponentListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentListAccess().getCompsComponentDeclarationParserRuleCall_1_1_0());
					}
					lv_comps_2_0=ruleComponentDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentListRule());
						}
						add(
							$current,
							"comps",
							lv_comps_2_0,
							"xmodelica.Modelica.ComponentDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComponentDeclaration
entryRuleComponentDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentDeclarationRule()); }
	iv_ruleComponentDeclaration=ruleComponentDeclaration
	{ $current=$iv_ruleComponentDeclaration.current; }
	EOF;

// Rule ComponentDeclaration
ruleComponentDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentDeclarationAccess().getDeclDeclarationParserRuleCall_0_0());
				}
				lv_decl_0_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentDeclarationRule());
					}
					set(
						$current,
						"decl",
						lv_decl_0_0,
						"xmodelica.Modelica.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentDeclarationAccess().getCondConditionAttributeParserRuleCall_1_0());
				}
				lv_cond_1_0=ruleConditionAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentDeclarationRule());
					}
					set(
						$current,
						"cond",
						lv_cond_1_0,
						"xmodelica.Modelica.ConditionAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentDeclarationAccess().getCommentCommentParserRuleCall_2_0());
				}
				lv_comment_2_0=ruleComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentDeclarationRule());
					}
					set(
						$current,
						"comment",
						lv_comment_2_0,
						"xmodelica.Modelica.Comment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConditionAttribute
entryRuleConditionAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionAttributeRule()); }
	iv_ruleConditionAttribute=ruleConditionAttribute
	{ $current=$iv_ruleConditionAttribute.current; }
	EOF;

// Rule ConditionAttribute
ruleConditionAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionAttributeAccess().getIfKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getConditionAttributeAccess().getExpressionParserRuleCall_1());
		}
		this_Expression_1=ruleExpression
		{
			$current = $this_Expression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_IDENT
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDeclarationAccess().getNameIDENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"xmodelica.Modelica.IDENT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getSubscriptsArraySubscriptsParserRuleCall_1_0());
				}
				lv_subscripts_1_0=ruleArraySubscripts
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"subscripts",
						lv_subscripts_1_0,
						"xmodelica.Modelica.ArraySubscripts");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getModModificationParserRuleCall_2_0());
				}
				lv_mod_2_0=ruleModification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"mod",
						lv_mod_2_0,
						"xmodelica.Modelica.Modification");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleModification
entryRuleModification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModificationRule()); }
	iv_ruleModification=ruleModification
	{ $current=$iv_ruleModification.current; }
	EOF;

// Rule Modification
ruleModification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModificationAccess().getModClassModificationParserRuleCall_0_0_0());
					}
					lv_mod_0_0=ruleClassModification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModificationRule());
						}
						set(
							$current,
							"mod",
							lv_mod_0_0,
							"xmodelica.Modelica.ClassModification");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1='='
				{
					newLeafNode(otherlv_1, grammarAccess.getModificationAccess().getEqualsSignKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_0_1_1_0());
						}
						lv_expr_2_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModificationRule());
							}
							set(
								$current,
								"expr",
								lv_expr_2_0,
								"xmodelica.Modelica.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getModificationAccess().getEqualsSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_1_1_0());
					}
					lv_expr_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModificationRule());
						}
						set(
							$current,
							"expr",
							lv_expr_4_0,
							"xmodelica.Modelica.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_5=':='
			{
				newLeafNode(otherlv_5, grammarAccess.getModificationAccess().getColonEqualsSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_2_1_0());
					}
					lv_expr_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModificationRule());
						}
						set(
							$current,
							"expr",
							lv_expr_6_0,
							"xmodelica.Modelica.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleClassModification
entryRuleClassModification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassModificationRule()); }
	iv_ruleClassModification=ruleClassModification
	{ $current=$iv_ruleClassModification.current; }
	EOF;

// Rule ClassModification
ruleClassModification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getClassModificationAccess().getClassModificationAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getClassModificationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClassModificationAccess().getArgsArgumentListParserRuleCall_2_0());
				}
				lv_args_2_0=ruleArgumentList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassModificationRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"xmodelica.Modelica.ArgumentList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getClassModificationAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleArgumentList
entryRuleArgumentList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentListRule()); }
	iv_ruleArgumentList=ruleArgumentList
	{ $current=$iv_ruleArgumentList.current; }
	EOF;

// Rule ArgumentList
ruleArgumentList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentListAccess().getArgsArgumentParserRuleCall_0_0());
				}
				lv_args_0_0=ruleArgument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentListRule());
					}
					add(
						$current,
						"args",
						lv_args_0_0,
						"xmodelica.Modelica.Argument");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getArgumentListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArgumentListAccess().getArgsArgumentParserRuleCall_1_1_0());
					}
					lv_args_2_0=ruleArgument
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgumentListRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"xmodelica.Modelica.Argument");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	iv_ruleArgument=ruleArgument
	{ $current=$iv_ruleArgument.current; }
	EOF;

// Rule Argument
ruleArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArgumentAccess().getElementModicationOrReplaceableParserRuleCall_0());
		}
		this_ElementModicationOrReplaceable_0=ruleElementModicationOrReplaceable
		{
			$current = $this_ElementModicationOrReplaceable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArgumentAccess().getElementRedeclarationParserRuleCall_1());
		}
		this_ElementRedeclaration_1=ruleElementRedeclaration
		{
			$current = $this_ElementRedeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleElementModicationOrReplaceable
entryRuleElementModicationOrReplaceable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementModicationOrReplaceableRule()); }
	iv_ruleElementModicationOrReplaceable=ruleElementModicationOrReplaceable
	{ $current=$iv_ruleElementModicationOrReplaceable.current; }
	EOF;

// Rule ElementModicationOrReplaceable
ruleElementModicationOrReplaceable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='each'
			{
				newLeafNode(otherlv_0, grammarAccess.getElementModicationOrReplaceableAccess().getEachKeyword_0());
			}
		)?
		(
			otherlv_1='final'
			{
				newLeafNode(otherlv_1, grammarAccess.getElementModicationOrReplaceableAccess().getFinalKeyword_1());
			}
		)?
		(
			{
				newCompositeNode(grammarAccess.getElementModicationOrReplaceableAccess().getElementModificationParserRuleCall_2_0());
			}
			this_ElementModification_2=ruleElementModification
			{
				$current = $this_ElementModification_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getElementModicationOrReplaceableAccess().getElementReplaceableParserRuleCall_2_1());
			}
			this_ElementReplaceable_3=ruleElementReplaceable
			{
				$current = $this_ElementReplaceable_3.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleElementModification
entryRuleElementModification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementModificationRule()); }
	iv_ruleElementModification=ruleElementModification
	{ $current=$iv_ruleElementModification.current; }
	EOF;

// Rule ElementModification
ruleElementModification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementModificationAccess().getNameNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementModificationRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"xmodelica.Modelica.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getElementModificationAccess().getModModificationParserRuleCall_1_0());
				}
				lv_mod_1_0=ruleModification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementModificationRule());
					}
					set(
						$current,
						"mod",
						lv_mod_1_0,
						"xmodelica.Modelica.Modification");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getElementModificationAccess().getCommentStringCommentParserRuleCall_2_0());
				}
				lv_comment_2_0=ruleStringComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementModificationRule());
					}
					set(
						$current,
						"comment",
						lv_comment_2_0,
						"xmodelica.Modelica.StringComment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleElementRedeclaration
entryRuleElementRedeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRedeclarationRule()); }
	iv_ruleElementRedeclaration=ruleElementRedeclaration
	{ $current=$iv_ruleElementRedeclaration.current; }
	EOF;

// Rule ElementRedeclaration
ruleElementRedeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='redeclare'
		{
			newLeafNode(otherlv_0, grammarAccess.getElementRedeclarationAccess().getRedeclareKeyword_0());
		}
		(
			otherlv_1='each'
			{
				newLeafNode(otherlv_1, grammarAccess.getElementRedeclarationAccess().getEachKeyword_1());
			}
		)?
		(
			otherlv_2='final'
			{
				newLeafNode(otherlv_2, grammarAccess.getElementRedeclarationAccess().getFinalKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getElementRedeclarationAccess().getShortClassDefinitionParserRuleCall_3_0_0());
				}
				this_ShortClassDefinition_3=ruleShortClassDefinition
				{
					$current = $this_ShortClassDefinition_3.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getElementRedeclarationAccess().getComponentClause1ParserRuleCall_3_0_1());
				}
				this_ComponentClause1_4=ruleComponentClause1
				{
					$current = $this_ComponentClause1_4.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			{
				newCompositeNode(grammarAccess.getElementRedeclarationAccess().getElementReplaceableParserRuleCall_3_1());
			}
			this_ElementReplaceable_5=ruleElementReplaceable
			{
				$current = $this_ElementReplaceable_5.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleElementReplaceable
entryRuleElementReplaceable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementReplaceableRule()); }
	iv_ruleElementReplaceable=ruleElementReplaceable
	{ $current=$iv_ruleElementReplaceable.current; }
	EOF;

// Rule ElementReplaceable
ruleElementReplaceable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='replaceable'
		{
			newLeafNode(otherlv_0, grammarAccess.getElementReplaceableAccess().getReplaceableKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getElementReplaceableAccess().getShortClassDefinitionParserRuleCall_1_0());
			}
			this_ShortClassDefinition_1=ruleShortClassDefinition
			{
				$current = $this_ShortClassDefinition_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getElementReplaceableAccess().getComponentClause1ParserRuleCall_1_1());
			}
			this_ComponentClause1_2=ruleComponentClause1
			{
				$current = $this_ComponentClause1_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getElementReplaceableAccess().getConstConstrainingClauseParserRuleCall_2_0());
				}
				lv_const_3_0=ruleConstrainingClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementReplaceableRule());
					}
					set(
						$current,
						"const",
						lv_const_3_0,
						"xmodelica.Modelica.ConstrainingClause");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleComponentClause1
entryRuleComponentClause1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentClause1Rule()); }
	iv_ruleComponentClause1=ruleComponentClause1
	{ $current=$iv_ruleComponentClause1.current; }
	EOF;

// Rule ComponentClause1
ruleComponentClause1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClause1Access().getPrefixTypePrefixParserRuleCall_0_0());
				}
				lv_prefix_0_0=ruleTypePrefix
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClause1Rule());
					}
					set(
						$current,
						"prefix",
						lv_prefix_0_0,
						"xmodelica.Modelica.TypePrefix");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClause1Access().getTypeTypeSpecifierParserRuleCall_1_0());
				}
				lv_type_1_0=ruleTypeSpecifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClause1Rule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"xmodelica.Modelica.TypeSpecifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClause1Access().getCompComponentDeclaration1ParserRuleCall_2_0());
				}
				lv_comp_2_0=ruleComponentDeclaration1
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClause1Rule());
					}
					set(
						$current,
						"comp",
						lv_comp_2_0,
						"xmodelica.Modelica.ComponentDeclaration1");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComponentDeclaration1
entryRuleComponentDeclaration1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentDeclaration1Rule()); }
	iv_ruleComponentDeclaration1=ruleComponentDeclaration1
	{ $current=$iv_ruleComponentDeclaration1.current; }
	EOF;

// Rule ComponentDeclaration1
ruleComponentDeclaration1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComponentDeclaration1Access().getDeclarationParserRuleCall_0());
		}
		this_Declaration_0=ruleDeclaration
		{
			$current = $this_Declaration_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentDeclaration1Access().getCommentCommentParserRuleCall_1_0());
				}
				lv_comment_1_0=ruleComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentDeclaration1Rule());
					}
					set(
						$current,
						"comment",
						lv_comment_1_0,
						"xmodelica.Modelica.Comment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleShortClassDefinition
entryRuleShortClassDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShortClassDefinitionRule()); }
	iv_ruleShortClassDefinition=ruleShortClassDefinition
	{ $current=$iv_ruleShortClassDefinition.current; }
	EOF;

// Rule ShortClassDefinition
ruleShortClassDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getShortClassDefinitionAccess().getClassPrefixesParserRuleCall_0());
		}
		ruleClassPrefixes
		{
			afterParserOrEnumRuleCall();
		}
		this_IDENT_1=RULE_IDENT
		{
			newLeafNode(this_IDENT_1, grammarAccess.getShortClassDefinitionAccess().getIDENTTerminalRuleCall_1());
		}
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getShortClassDefinitionAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getShortClassDefinitionAccess().getBasePrefixParserRuleCall_3_0_0());
				}
				ruleBasePrefix
				{
					afterParserOrEnumRuleCall();
				}
				{
					newCompositeNode(grammarAccess.getShortClassDefinitionAccess().getNameParserRuleCall_3_0_1());
				}
				ruleName
				{
					afterParserOrEnumRuleCall();
				}
				(
					{
						newCompositeNode(grammarAccess.getShortClassDefinitionAccess().getArraySubscriptsParserRuleCall_3_0_2());
					}
					this_ArraySubscripts_5=ruleArraySubscripts
					{
						$current = $this_ArraySubscripts_5.current;
						afterParserOrEnumRuleCall();
					}
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getShortClassDefinitionAccess().getModeClassModificationParserRuleCall_3_0_3_0());
						}
						lv_mode_6_0=ruleClassModification
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShortClassDefinitionRule());
							}
							set(
								$current,
								"mode",
								lv_mode_6_0,
								"xmodelica.Modelica.ClassModification");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getShortClassDefinitionAccess().getCommentCommentParserRuleCall_3_0_4_0());
						}
						lv_comment_7_0=ruleComment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShortClassDefinitionRule());
							}
							set(
								$current,
								"comment",
								lv_comment_7_0,
								"xmodelica.Modelica.Comment");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_8='enumeration'
				{
					newLeafNode(otherlv_8, grammarAccess.getShortClassDefinitionAccess().getEnumerationKeyword_3_1_0());
				}
				otherlv_9='('
				{
					newLeafNode(otherlv_9, grammarAccess.getShortClassDefinitionAccess().getLeftParenthesisKeyword_3_1_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getShortClassDefinitionAccess().getListEnumListParserRuleCall_3_1_2_0_0());
							}
							lv_list_10_0=ruleEnumList
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getShortClassDefinitionRule());
								}
								set(
									$current,
									"list",
									lv_list_10_0,
									"xmodelica.Modelica.EnumList");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					    |
					otherlv_11=':'
					{
						newLeafNode(otherlv_11, grammarAccess.getShortClassDefinitionAccess().getColonKeyword_3_1_2_1());
					}
				)
				otherlv_12=')'
				{
					newLeafNode(otherlv_12, grammarAccess.getShortClassDefinitionAccess().getRightParenthesisKeyword_3_1_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getShortClassDefinitionAccess().getCommentCommentParserRuleCall_3_1_4_0());
						}
						lv_comment_13_0=ruleComment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getShortClassDefinitionRule());
							}
							set(
								$current,
								"comment",
								lv_comment_13_0,
								"xmodelica.Modelica.Comment");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleEquationSection
entryRuleEquationSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquationSectionRule()); }
	iv_ruleEquationSection=ruleEquationSection
	{ $current=$iv_ruleEquationSection.current; }
	EOF;

// Rule EquationSection
ruleEquationSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_initial_0_0='initial'
				{
					newLeafNode(lv_initial_0_0, grammarAccess.getEquationSectionAccess().getInitialInitialKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEquationSectionRule());
					}
					setWithLastConsumed($current, "initial", true, "initial");
				}
			)
		)?
		otherlv_1='equation'
		{
			newLeafNode(otherlv_1, grammarAccess.getEquationSectionAccess().getEquationKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationSectionAccess().getEquationsEquationParserRuleCall_2_0_0());
					}
					lv_equations_2_0=ruleEquation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationSectionRule());
						}
						add(
							$current,
							"equations",
							lv_equations_2_0,
							"xmodelica.Modelica.Equation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getEquationSectionAccess().getSemicolonKeyword_2_1());
			}
		)+
	)
;

// Entry rule entryRuleAlgorithmSection
entryRuleAlgorithmSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlgorithmSectionRule()); }
	iv_ruleAlgorithmSection=ruleAlgorithmSection
	{ $current=$iv_ruleAlgorithmSection.current; }
	EOF;

// Rule AlgorithmSection
ruleAlgorithmSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_initial_0_0='initial'
				{
					newLeafNode(lv_initial_0_0, grammarAccess.getAlgorithmSectionAccess().getInitialInitialKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlgorithmSectionRule());
					}
					setWithLastConsumed($current, "initial", true, "initial");
				}
			)
		)?
		otherlv_1='algorithm'
		{
			newLeafNode(otherlv_1, grammarAccess.getAlgorithmSectionAccess().getAlgorithmKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAlgorithmSectionAccess().getStatementsStatementParserRuleCall_2_0_0());
					}
					lv_statements_2_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlgorithmSectionRule());
						}
						add(
							$current,
							"statements",
							lv_statements_2_0,
							"xmodelica.Modelica.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getAlgorithmSectionAccess().getSemicolonKeyword_2_1());
			}
		)+
	)
;

// Entry rule entryRuleEquation
entryRuleEquation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEquationRule()); }
	iv_ruleEquation=ruleEquation
	{ $current=$iv_ruleEquation.current; }
	EOF;

// Rule Equation
ruleEquation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEquationAccess().getLeftSimpleExpressionParserRuleCall_0_0_0_0());
						}
						lv_left_0_0=ruleSimpleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEquationRule());
							}
							set(
								$current,
								"left",
								lv_left_0_0,
								"xmodelica.Modelica.SimpleExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_1='='
				{
					newLeafNode(otherlv_1, grammarAccess.getEquationAccess().getEqualsSignKeyword_0_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEquationAccess().getRightExpressionParserRuleCall_0_0_2_0());
						}
						lv_right_2_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEquationRule());
							}
							set(
								$current,
								"right",
								lv_right_2_0,
								"xmodelica.Modelica.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			{
				newCompositeNode(grammarAccess.getEquationAccess().getIfEquationParserRuleCall_0_1());
			}
			this_IfEquation_3=ruleIfEquation
			{
				$current = $this_IfEquation_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getEquationAccess().getForEquationParserRuleCall_0_2());
			}
			this_ForEquation_4=ruleForEquation
			{
				$current = $this_ForEquation_4.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getEquationAccess().getConnectClauseParserRuleCall_0_3());
			}
			this_ConnectClause_5=ruleConnectClause
			{
				$current = $this_ConnectClause_5.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getEquationAccess().getWhenEquationParserRuleCall_0_4());
			}
			this_WhenEquation_6=ruleWhenEquation
			{
				$current = $this_WhenEquation_6.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEquationAccess().getCommmentCommentParserRuleCall_1_0());
				}
				lv_commment_7_0=ruleComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEquationRule());
					}
					set(
						$current,
						"commment",
						lv_commment_7_0,
						"xmodelica.Modelica.Comment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementAccess().getLeftComponentReferenceParserRuleCall_0_0_0_0());
						}
						lv_left_0_0=ruleComponentReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementRule());
							}
							set(
								$current,
								"left",
								lv_left_0_0,
								"xmodelica.Modelica.ComponentReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_1=':='
					{
						newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getColonEqualsSignKeyword_0_0_1_0());
					}
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getStatementAccess().getRightExpressionParserRuleCall_0_0_1_1_0_0());
								}
								lv_right_2_1=ruleExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getStatementRule());
									}
									set(
										$current,
										"right",
										lv_right_2_1,
										"xmodelica.Modelica.Expression");
									afterParserOrEnumRuleCall();
								}
								    |
								{
									newCompositeNode(grammarAccess.getStatementAccess().getRightFunctionCallArgsParserRuleCall_0_0_1_1_0_1());
								}
								lv_right_2_2=ruleFunctionCallArgs
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getStatementRule());
									}
									set(
										$current,
										"right",
										lv_right_2_2,
										"xmodelica.Modelica.FunctionCallArgs");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
			)
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementAccess().getLeftOutputExpressionListParserRuleCall_0_1_1_0());
						}
						lv_left_4_0=ruleOutputExpressionList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementRule());
							}
							set(
								$current,
								"left",
								lv_left_4_0,
								"xmodelica.Modelica.OutputExpressionList");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=')'
				{
					newLeafNode(otherlv_5, grammarAccess.getStatementAccess().getRightParenthesisKeyword_0_1_2());
				}
				otherlv_6=':='
				{
					newLeafNode(otherlv_6, grammarAccess.getStatementAccess().getColonEqualsSignKeyword_0_1_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementAccess().getRefComponentReferenceParserRuleCall_0_1_4_0());
						}
						lv_ref_7_0=ruleComponentReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementRule());
							}
							set(
								$current,
								"ref",
								lv_ref_7_0,
								"xmodelica.Modelica.ComponentReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getStatementAccess().getRef_callFunctionCallArgsParserRuleCall_0_1_5_0());
						}
						lv_ref_call_8_0=ruleFunctionCallArgs
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatementRule());
							}
							set(
								$current,
								"ref_call",
								lv_ref_call_8_0,
								"xmodelica.Modelica.FunctionCallArgs");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			otherlv_9='break'
			{
				newLeafNode(otherlv_9, grammarAccess.getStatementAccess().getBreakKeyword_0_2());
			}
			    |
			otherlv_10='return'
			{
				newLeafNode(otherlv_10, grammarAccess.getStatementAccess().getReturnKeyword_0_3());
			}
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0_4());
			}
			this_IfStatement_11=ruleIfStatement
			{
				$current = $this_IfStatement_11.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getForStatementParserRuleCall_0_5());
			}
			this_ForStatement_12=ruleForStatement
			{
				$current = $this_ForStatement_12.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_0_6());
			}
			this_WhileStatement_13=ruleWhileStatement
			{
				$current = $this_WhileStatement_13.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStatementAccess().getWhenStatementParserRuleCall_0_7());
			}
			this_WhenStatement_14=ruleWhenStatement
			{
				$current = $this_WhenStatement_14.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getCommentCommentParserRuleCall_1_0());
				}
				lv_comment_15_0=ruleComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"comment",
						lv_comment_15_0,
						"xmodelica.Modelica.Comment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIfEquation
entryRuleIfEquation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfEquationRule()); }
	iv_ruleIfEquation=ruleIfEquation
	{ $current=$iv_ruleIfEquation.current; }
	EOF;

// Rule IfEquation
ruleIfEquation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfEquationAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfEquationAccess().getIf_exprExpressionParserRuleCall_1_0());
				}
				lv_if_expr_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfEquationRule());
					}
					set(
						$current,
						"if_expr",
						lv_if_expr_1_0,
						"xmodelica.Modelica.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getIfEquationAccess().getThenKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIfEquationAccess().getIf_eqsEquationParserRuleCall_3_0_0());
					}
					lv_if_eqs_3_0=ruleEquation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfEquationRule());
						}
						add(
							$current,
							"if_eqs",
							lv_if_eqs_3_0,
							"xmodelica.Modelica.Equation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getIfEquationAccess().getSemicolonKeyword_3_1());
			}
		)*
		(
			otherlv_5='elseif'
			{
				newLeafNode(otherlv_5, grammarAccess.getIfEquationAccess().getElseifKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfEquationAccess().getElsif_exprsExpressionParserRuleCall_4_1_0());
					}
					lv_elsif_exprs_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfEquationRule());
						}
						add(
							$current,
							"elsif_exprs",
							lv_elsif_exprs_6_0,
							"xmodelica.Modelica.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='then'
			{
				newLeafNode(otherlv_7, grammarAccess.getIfEquationAccess().getThenKeyword_4_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getIfEquationAccess().getElseif_eqsEquationParserRuleCall_4_3_0_0());
						}
						lv_elseif_eqs_8_0=ruleEquation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfEquationRule());
							}
							add(
								$current,
								"elseif_eqs",
								lv_elseif_eqs_8_0,
								"xmodelica.Modelica.Equation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9=';'
				{
					newLeafNode(otherlv_9, grammarAccess.getIfEquationAccess().getSemicolonKeyword_4_3_1());
				}
			)*
		)*
		(
			otherlv_10='else'
			{
				newLeafNode(otherlv_10, grammarAccess.getIfEquationAccess().getElseKeyword_5_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getIfEquationAccess().getElse_eqsEquationParserRuleCall_5_1_0_0());
						}
						lv_else_eqs_11_0=ruleEquation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfEquationRule());
							}
							add(
								$current,
								"else_eqs",
								lv_else_eqs_11_0,
								"xmodelica.Modelica.Equation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_12=';'
				{
					newLeafNode(otherlv_12, grammarAccess.getIfEquationAccess().getSemicolonKeyword_5_1_1());
				}
			)*
		)?
		otherlv_13='end'
		{
			newLeafNode(otherlv_13, grammarAccess.getIfEquationAccess().getEndKeyword_6());
		}
		otherlv_14='if'
		{
			newLeafNode(otherlv_14, grammarAccess.getIfEquationAccess().getIfKeyword_7());
		}
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getIf_exprExpressionParserRuleCall_1_0());
				}
				lv_if_expr_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"if_expr",
						lv_if_expr_1_0,
						"xmodelica.Modelica.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getIfStatementAccess().getThenKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getIf_stmtsStatementParserRuleCall_3_0_0());
					}
					lv_if_stmts_3_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						add(
							$current,
							"if_stmts",
							lv_if_stmts_3_0,
							"xmodelica.Modelica.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getIfStatementAccess().getSemicolonKeyword_3_1());
			}
		)*
		(
			otherlv_5='elseif'
			{
				newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseifKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getElseif_exprsExpressionParserRuleCall_4_1_0());
					}
					lv_elseif_exprs_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						add(
							$current,
							"elseif_exprs",
							lv_elseif_exprs_6_0,
							"xmodelica.Modelica.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='then'
			{
				newLeafNode(otherlv_7, grammarAccess.getIfStatementAccess().getThenKeyword_4_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getIfStatementAccess().getElseif_stmtsStatementParserRuleCall_4_3_0_0());
						}
						lv_elseif_stmts_8_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfStatementRule());
							}
							add(
								$current,
								"elseif_stmts",
								lv_elseif_stmts_8_0,
								"xmodelica.Modelica.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9=';'
				{
					newLeafNode(otherlv_9, grammarAccess.getIfStatementAccess().getSemicolonKeyword_4_3_1());
				}
			)*
		)*
		(
			otherlv_10='else'
			{
				newLeafNode(otherlv_10, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getIfStatementAccess().getElse_stmtsStatementParserRuleCall_5_1_0_0());
						}
						lv_else_stmts_11_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfStatementRule());
							}
							add(
								$current,
								"else_stmts",
								lv_else_stmts_11_0,
								"xmodelica.Modelica.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_12=';'
				{
					newLeafNode(otherlv_12, grammarAccess.getIfStatementAccess().getSemicolonKeyword_5_1_1());
				}
			)*
		)?
		otherlv_13='end'
		{
			newLeafNode(otherlv_13, grammarAccess.getIfStatementAccess().getEndKeyword_6());
		}
		otherlv_14='if'
		{
			newLeafNode(otherlv_14, grammarAccess.getIfStatementAccess().getIfKeyword_7());
		}
	)
;

// Entry rule entryRuleForEquation
entryRuleForEquation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForEquationRule()); }
	iv_ruleForEquation=ruleForEquation
	{ $current=$iv_ruleForEquation.current; }
	EOF;

// Rule ForEquation
ruleForEquation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForEquationAccess().getForKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEquationAccess().getIndicesForIndicesParserRuleCall_1_0());
				}
				lv_indices_1_0=ruleForIndices
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEquationRule());
					}
					set(
						$current,
						"indices",
						lv_indices_1_0,
						"xmodelica.Modelica.ForIndices");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='loop'
		{
			newLeafNode(otherlv_2, grammarAccess.getForEquationAccess().getLoopKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getForEquationAccess().getEqsEquationParserRuleCall_3_0_0());
					}
					lv_eqs_3_0=ruleEquation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForEquationRule());
						}
						add(
							$current,
							"eqs",
							lv_eqs_3_0,
							"xmodelica.Modelica.Equation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getForEquationAccess().getSemicolonKeyword_3_1());
			}
		)*
		otherlv_5='end'
		{
			newLeafNode(otherlv_5, grammarAccess.getForEquationAccess().getEndKeyword_4());
		}
		otherlv_6='for'
		{
			newLeafNode(otherlv_6, grammarAccess.getForEquationAccess().getForKeyword_5());
		}
	)
;

// Entry rule entryRuleForStatement
entryRuleForStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStatementRule()); }
	iv_ruleForStatement=ruleForStatement
	{ $current=$iv_ruleForStatement.current; }
	EOF;

// Rule ForStatement
ruleForStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForStatementAccess().getForKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getIndicesForIndicesParserRuleCall_1_0());
				}
				lv_indices_1_0=ruleForIndices
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"indices",
						lv_indices_1_0,
						"xmodelica.Modelica.ForIndices");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='loop'
		{
			newLeafNode(otherlv_2, grammarAccess.getForStatementAccess().getLoopKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getForStatementAccess().getStmtsStatementParserRuleCall_3_0_0());
					}
					lv_stmts_3_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForStatementRule());
						}
						add(
							$current,
							"stmts",
							lv_stmts_3_0,
							"xmodelica.Modelica.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1());
			}
		)*
		otherlv_5='end'
		{
			newLeafNode(otherlv_5, grammarAccess.getForStatementAccess().getEndKeyword_4());
		}
		otherlv_6='for'
		{
			newLeafNode(otherlv_6, grammarAccess.getForStatementAccess().getForKeyword_5());
		}
	)
;

// Entry rule entryRuleForIndices
entryRuleForIndices returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForIndicesRule()); }
	iv_ruleForIndices=ruleForIndices
	{ $current=$iv_ruleForIndices.current; }
	EOF;

// Rule ForIndices
ruleForIndices returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getForIndicesAccess().getIndicesForIndexParserRuleCall_0_0());
				}
				lv_indices_0_0=ruleForIndex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForIndicesRule());
					}
					add(
						$current,
						"indices",
						lv_indices_0_0,
						"xmodelica.Modelica.ForIndex");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getForIndicesAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForIndicesAccess().getIndicesForIndexParserRuleCall_1_1_0());
					}
					lv_indices_2_0=ruleForIndex
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForIndicesRule());
						}
						add(
							$current,
							"indices",
							lv_indices_2_0,
							"xmodelica.Modelica.ForIndex");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleForIndex
entryRuleForIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForIndexRule()); }
	iv_ruleForIndex=ruleForIndex
	{ $current=$iv_ruleForIndex.current; }
	EOF;

// Rule ForIndex
ruleForIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_IDENT
				{
					newLeafNode(lv_id_0_0, grammarAccess.getForIndexAccess().getIdIDENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForIndexRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"xmodelica.Modelica.IDENT");
				}
			)
		)
		(
			otherlv_1='in'
			{
				newLeafNode(otherlv_1, grammarAccess.getForIndexAccess().getInKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForIndexAccess().getExprExpressionParserRuleCall_1_1_0());
					}
					lv_expr_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForIndexRule());
						}
						set(
							$current,
							"expr",
							lv_expr_2_0,
							"xmodelica.Modelica.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileStatementRule()); }
	iv_ruleWhileStatement=ruleWhileStatement
	{ $current=$iv_ruleWhileStatement.current; }
	EOF;

// Rule WhileStatement
ruleWhileStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileStatementAccess().getWhileKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getCondExpressionParserRuleCall_1_0());
				}
				lv_cond_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"cond",
						lv_cond_1_0,
						"xmodelica.Modelica.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='loop'
		{
			newLeafNode(otherlv_2, grammarAccess.getWhileStatementAccess().getLoopKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getWhileStatementAccess().getStmtsStatementParserRuleCall_3_0_0());
					}
					lv_stmts_3_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
						}
						add(
							$current,
							"stmts",
							lv_stmts_3_0,
							"xmodelica.Modelica.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getWhileStatementAccess().getSemicolonKeyword_3_1());
			}
		)*
		otherlv_5='end'
		{
			newLeafNode(otherlv_5, grammarAccess.getWhileStatementAccess().getEndKeyword_4());
		}
		otherlv_6='while'
		{
			newLeafNode(otherlv_6, grammarAccess.getWhileStatementAccess().getWhileKeyword_5());
		}
	)
;

// Entry rule entryRuleWhenEquation
entryRuleWhenEquation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhenEquationRule()); }
	iv_ruleWhenEquation=ruleWhenEquation
	{ $current=$iv_ruleWhenEquation.current; }
	EOF;

// Rule WhenEquation
ruleWhenEquation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='when'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhenEquationAccess().getWhenKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhenEquationAccess().getWhenExpressionParserRuleCall_1_0());
				}
				lv_when_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhenEquationRule());
					}
					set(
						$current,
						"when",
						lv_when_1_0,
						"xmodelica.Modelica.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getWhenEquationAccess().getThenKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getWhenEquationAccess().getWhen_eqsEquationParserRuleCall_3_0_0());
					}
					lv_when_eqs_3_0=ruleEquation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWhenEquationRule());
						}
						add(
							$current,
							"when_eqs",
							lv_when_eqs_3_0,
							"xmodelica.Modelica.Equation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getWhenEquationAccess().getSemicolonKeyword_3_1());
			}
		)*
		(
			otherlv_5='elsewhen'
			{
				newLeafNode(otherlv_5, grammarAccess.getWhenEquationAccess().getElsewhenKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWhenEquationAccess().getElsehwhenExpressionParserRuleCall_4_1_0());
					}
					lv_elsehwhen_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWhenEquationRule());
						}
						set(
							$current,
							"elsehwhen",
							lv_elsehwhen_6_0,
							"xmodelica.Modelica.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='then'
			{
				newLeafNode(otherlv_7, grammarAccess.getWhenEquationAccess().getThenKeyword_4_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getWhenEquationAccess().getElsewhen_eqsEquationParserRuleCall_4_3_0_0());
						}
						lv_elsewhen_eqs_8_0=ruleEquation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getWhenEquationRule());
							}
							add(
								$current,
								"elsewhen_eqs",
								lv_elsewhen_eqs_8_0,
								"xmodelica.Modelica.Equation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9=';'
				{
					newLeafNode(otherlv_9, grammarAccess.getWhenEquationAccess().getSemicolonKeyword_4_3_1());
				}
			)
		)
	)
;

// Entry rule entryRuleWhenStatement
entryRuleWhenStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhenStatementRule()); }
	iv_ruleWhenStatement=ruleWhenStatement
	{ $current=$iv_ruleWhenStatement.current; }
	EOF;

// Rule WhenStatement
ruleWhenStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='when'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhenStatementAccess().getWhenKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhenStatementAccess().getWhenExpressionParserRuleCall_1_0());
				}
				lv_when_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhenStatementRule());
					}
					set(
						$current,
						"when",
						lv_when_1_0,
						"xmodelica.Modelica.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getWhenStatementAccess().getThenKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getWhenStatementAccess().getWhen_stmtsStatementParserRuleCall_3_0_0());
					}
					lv_when_stmts_3_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWhenStatementRule());
						}
						add(
							$current,
							"when_stmts",
							lv_when_stmts_3_0,
							"xmodelica.Modelica.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getWhenStatementAccess().getSemicolonKeyword_3_1());
			}
		)*
		(
			otherlv_5='elsewhen'
			{
				newLeafNode(otherlv_5, grammarAccess.getWhenStatementAccess().getElsewhenKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWhenStatementAccess().getElsehwhenExpressionParserRuleCall_4_1_0());
					}
					lv_elsehwhen_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWhenStatementRule());
						}
						set(
							$current,
							"elsehwhen",
							lv_elsehwhen_6_0,
							"xmodelica.Modelica.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='then'
			{
				newLeafNode(otherlv_7, grammarAccess.getWhenStatementAccess().getThenKeyword_4_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getWhenStatementAccess().getElsewhen_stmtsStatementParserRuleCall_4_3_0_0());
						}
						lv_elsewhen_stmts_8_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getWhenStatementRule());
							}
							add(
								$current,
								"elsewhen_stmts",
								lv_elsewhen_stmts_8_0,
								"xmodelica.Modelica.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9=';'
				{
					newLeafNode(otherlv_9, grammarAccess.getWhenStatementAccess().getSemicolonKeyword_4_3_1());
				}
			)
		)
	)
;

// Entry rule entryRuleConnectClause
entryRuleConnectClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectClauseRule()); }
	iv_ruleConnectClause=ruleConnectClause
	{ $current=$iv_ruleConnectClause.current; }
	EOF;

// Rule ConnectClause
ruleConnectClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='connect'
		{
			newLeafNode(otherlv_0, grammarAccess.getConnectClauseAccess().getConnectKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getConnectClauseAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectClauseAccess().getLeftComponentReferenceParserRuleCall_2_0());
				}
				lv_left_2_0=ruleComponentReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectClauseRule());
					}
					set(
						$current,
						"left",
						lv_left_2_0,
						"xmodelica.Modelica.ComponentReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getConnectClauseAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectClauseAccess().getRightComponentReferenceParserRuleCall_4_0());
				}
				lv_right_4_0=ruleComponentReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectClauseRule());
					}
					set(
						$current,
						"right",
						lv_right_4_0,
						"xmodelica.Modelica.ComponentReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getConnectClauseAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getSimpleExpressionParserRuleCall_0());
		}
		this_SimpleExpression_0=ruleSimpleExpression
		{
			$current = $this_SimpleExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='if'
			{
				newLeafNode(otherlv_1, grammarAccess.getExpressionAccess().getIfKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_1_1_0());
					}
					lv_if_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						set(
							$current,
							"if",
							lv_if_2_0,
							"xmodelica.Modelica.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='then'
			{
				newLeafNode(otherlv_3, grammarAccess.getExpressionAccess().getThenKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getThenExpressionParserRuleCall_1_3_0());
					}
					lv_then_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						set(
							$current,
							"then",
							lv_then_4_0,
							"xmodelica.Modelica.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5='elseif'
				{
					newLeafNode(otherlv_5, grammarAccess.getExpressionAccess().getElseifKeyword_1_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionAccess().getElseifExpressionParserRuleCall_1_4_1_0());
						}
						lv_elseif_6_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionRule());
							}
							add(
								$current,
								"elseif",
								lv_elseif_6_0,
								"xmodelica.Modelica.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7='then'
				{
					newLeafNode(otherlv_7, grammarAccess.getExpressionAccess().getThenKeyword_1_4_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExpressionAccess().getElseifthenExpressionParserRuleCall_1_4_3_0());
						}
						lv_elseifthen_8_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExpressionRule());
							}
							add(
								$current,
								"elseifthen",
								lv_elseifthen_8_0,
								"xmodelica.Modelica.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='else'
			{
				newLeafNode(otherlv_9, grammarAccess.getExpressionAccess().getElseKeyword_1_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionAccess().getElseExpressionParserRuleCall_1_6_0());
					}
					lv_else_10_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionRule());
						}
						add(
							$current,
							"else",
							lv_else_10_0,
							"xmodelica.Modelica.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSimpleExpression
entryRuleSimpleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleExpressionRule()); }
	iv_ruleSimpleExpression=ruleSimpleExpression
	{ $current=$iv_ruleSimpleExpression.current; }
	EOF;

// Rule SimpleExpression
ruleSimpleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimpleExpressionAccess().getLogicalExpressionParserRuleCall_0());
		}
		this_LogicalExpression_0=ruleLogicalExpression
		{
			$current = $this_LogicalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimpleExpressionAccess().getColonKeyword_1_0());
			}
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getSimpleExpressionAccess().getSimpleExpressionExprsAction_1_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSimpleExpressionAccess().getExprsLogicalExpressionParserRuleCall_1_2_0());
					}
					lv_exprs_3_0=ruleLogicalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimpleExpressionRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_3_0,
							"xmodelica.Modelica.LogicalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=':'
				{
					newLeafNode(otherlv_4, grammarAccess.getSimpleExpressionAccess().getColonKeyword_1_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSimpleExpressionAccess().getExprsLogicalExpressionParserRuleCall_1_3_1_0());
						}
						lv_exprs_5_0=ruleLogicalExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimpleExpressionRule());
							}
							add(
								$current,
								"exprs",
								lv_exprs_5_0,
								"xmodelica.Modelica.LogicalExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)?
	)
;

// Entry rule entryRuleLogicalExpression
entryRuleLogicalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalExpressionRule()); }
	iv_ruleLogicalExpression=ruleLogicalExpression
	{ $current=$iv_ruleLogicalExpression.current; }
	EOF;

// Rule LogicalExpression
ruleLogicalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicalExpressionAccess().getLogicalTermParserRuleCall_0());
		}
		this_LogicalTerm_0=ruleLogicalTerm
		{
			$current = $this_LogicalTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getLogicalExpressionAccess().getLogicalExpressionTermsAction_1_0(),
						$current);
				}
			)
			otherlv_2='or'
			{
				newLeafNode(otherlv_2, grammarAccess.getLogicalExpressionAccess().getOrKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalExpressionAccess().getTermsLogicalTermParserRuleCall_1_2_0());
					}
					lv_terms_3_0=ruleLogicalTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalExpressionRule());
						}
						add(
							$current,
							"terms",
							lv_terms_3_0,
							"xmodelica.Modelica.LogicalTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLogicalTerm
entryRuleLogicalTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalTermRule()); }
	iv_ruleLogicalTerm=ruleLogicalTerm
	{ $current=$iv_ruleLogicalTerm.current; }
	EOF;

// Rule LogicalTerm
ruleLogicalTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLogicalTermAccess().getLogicalFactorParserRuleCall_0());
		}
		this_LogicalFactor_0=ruleLogicalFactor
		{
			$current = $this_LogicalFactor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getLogicalTermAccess().getLogicalFactorFactorsAction_1_0(),
						$current);
				}
			)
			otherlv_2='and'
			{
				newLeafNode(otherlv_2, grammarAccess.getLogicalTermAccess().getAndKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalTermAccess().getFactorsLogicalFactorParserRuleCall_1_2_0());
					}
					lv_factors_3_0=ruleLogicalFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalTermRule());
						}
						add(
							$current,
							"factors",
							lv_factors_3_0,
							"xmodelica.Modelica.LogicalFactor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLogicalFactor
entryRuleLogicalFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalFactorRule()); }
	iv_ruleLogicalFactor=ruleLogicalFactor
	{ $current=$iv_ruleLogicalFactor.current; }
	EOF;

// Rule LogicalFactor
ruleLogicalFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getLogicalFactorAccess().getRelationParserRuleCall());
	}
	this_Relation_0=ruleRelation
	{
		$current = $this_Relation_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	iv_ruleRelation=ruleRelation
	{ $current=$iv_ruleRelation.current; }
	EOF;

// Rule Relation
ruleRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationAccess().getArithmeticExpressionParserRuleCall_0());
		}
		this_ArithmeticExpression_0=ruleArithmeticExpression
		{
			$current = $this_ArithmeticExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getRelationAccess().getRelationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationAccess().getOpRelOpParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleRelOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"xmodelica.Modelica.RelOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationAccess().getRightArithmeticExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleArithmeticExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"xmodelica.Modelica.ArithmeticExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRelOp
entryRuleRelOp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRelOpRule()); }
	iv_ruleRelOp=ruleRelOp
	{ $current=$iv_ruleRelOp.current.getText(); }
	EOF;

// Rule RelOp
ruleRelOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelOpAccess().getLessThanSignKeyword_0());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelOpAccess().getLessThanSignEqualsSignKeyword_1());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelOpAccess().getGreaterThanSignKeyword_2());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelOpAccess().getGreaterThanSignEqualsSignKeyword_3());
		}
		    |
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelOpAccess().getEqualsSignEqualsSignKeyword_4());
		}
		    |
		kw='<>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelOpAccess().getLessThanSignGreaterThanSignKeyword_5());
		}
	)
;

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticExpressionRule()); }
	iv_ruleArithmeticExpression=ruleArithmeticExpression
	{ $current=$iv_ruleArithmeticExpression.current; }
	EOF;

// Rule ArithmeticExpression
ruleArithmeticExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getTermParserRuleCall_0());
		}
		this_Term_0=ruleTerm
		{
			$current = $this_Term_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getArithmeticExpressionAccess().getArithmeticExpressionTermsAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getOpsAddOpParserRuleCall_1_1_0());
					}
					lv_ops_2_0=ruleAddOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithmeticExpressionRule());
						}
						add(
							$current,
							"ops",
							lv_ops_2_0,
							"xmodelica.Modelica.AddOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getTermsTermParserRuleCall_1_2_0());
					}
					lv_terms_3_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithmeticExpressionRule());
						}
						add(
							$current,
							"terms",
							lv_terms_3_0,
							"xmodelica.Modelica.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAddOp
entryRuleAddOp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAddOpRule()); }
	iv_ruleAddOp=ruleAddOp
	{ $current=$iv_ruleAddOp.current.getText(); }
	EOF;

// Rule AddOp
ruleAddOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAddOpAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='.+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAddOpAccess().getFullStopPlusSignKeyword_2());
		}
		    |
		kw='.-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAddOpAccess().getFullStopHyphenMinusKeyword_3());
		}
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
		}
		this_Factor_0=ruleFactor
		{
			$current = $this_Factor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndAdd(
						grammarAccess.getTermAccess().getTermFactorsAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTermAccess().getOpsMulOpParserRuleCall_1_1_0());
					}
					lv_ops_2_0=ruleMulOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTermRule());
						}
						add(
							$current,
							"ops",
							lv_ops_2_0,
							"xmodelica.Modelica.MulOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTermAccess().getFactorsFactorParserRuleCall_1_2_0());
					}
					lv_factors_3_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTermRule());
						}
						add(
							$current,
							"factors",
							lv_factors_3_0,
							"xmodelica.Modelica.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMulOp
entryRuleMulOp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMulOpRule()); }
	iv_ruleMulOp=ruleMulOp
	{ $current=$iv_ruleMulOp.current.getText(); }
	EOF;

// Rule MulOp
ruleMulOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMulOpAccess().getAsteriskKeyword_0());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMulOpAccess().getSolidusKeyword_1());
		}
		    |
		kw='.*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMulOpAccess().getFullStopAsteriskKeyword_2());
		}
		    |
		kw='./'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMulOpAccess().getFullStopSolidusKeyword_3());
		}
	)
;

// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	iv_ruleFactor=ruleFactor
	{ $current=$iv_ruleFactor.current; }
	EOF;

// Rule Factor
ruleFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getFactorAccess().getFactorBaseAction_1_0(),
						$current);
				}
			)
			(
				otherlv_2='^'
				{
					newLeafNode(otherlv_2, grammarAccess.getFactorAccess().getCircumflexAccentKeyword_1_1_0());
				}
				    |
				otherlv_3='.^'
				{
					newLeafNode(otherlv_3, grammarAccess.getFactorAccess().getFullStopCircumflexAccentKeyword_1_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFactorAccess().getExpPrimaryParserRuleCall_1_2_0());
					}
					lv_exp_4_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactorRule());
						}
						set(
							$current,
							"exp",
							lv_exp_4_0,
							"xmodelica.Modelica.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleFloatPrimary
entryRuleFloatPrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloatPrimaryRule()); }
	iv_ruleFloatPrimary=ruleFloatPrimary
	{ $current=$iv_ruleFloatPrimary.current; }
	EOF;

// Rule FloatPrimary
ruleFloatPrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_val_0_0=RULE_UNSIGNED_NUMBER
			{
				newLeafNode(lv_val_0_0, grammarAccess.getFloatPrimaryAccess().getValUNSIGNED_NUMBERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFloatPrimaryRule());
				}
				setWithLastConsumed(
					$current,
					"val",
					lv_val_0_0,
					"xmodelica.Modelica.UNSIGNED_NUMBER");
			}
		)
	)
;

// Entry rule entryRuleStringPrimary
entryRuleStringPrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringPrimaryRule()); }
	iv_ruleStringPrimary=ruleStringPrimary
	{ $current=$iv_ruleStringPrimary.current; }
	EOF;

// Rule StringPrimary
ruleStringPrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_val_0_0=RULE_STRING
			{
				newLeafNode(lv_val_0_0, grammarAccess.getStringPrimaryAccess().getValSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringPrimaryRule());
				}
				setWithLastConsumed(
					$current,
					"val",
					lv_val_0_0,
					"xmodelica.Modelica.STRING");
			}
		)
	)
;

// Entry rule entryRuleLogicalPrimary
entryRuleLogicalPrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalPrimaryRule()); }
	iv_ruleLogicalPrimary=ruleLogicalPrimary
	{ $current=$iv_ruleLogicalPrimary.current; }
	EOF;

// Rule LogicalPrimary
ruleLogicalPrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_val_0_0=RULE_TRUE_FALSE
			{
				newLeafNode(lv_val_0_0, grammarAccess.getLogicalPrimaryAccess().getValTRUE_FALSETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLogicalPrimaryRule());
				}
				setWithLastConsumed(
					$current,
					"val",
					lv_val_0_0,
					"xmodelica.Modelica.TRUE_FALSE");
			}
		)
	)
;

// Entry rule entryRuleEnd
entryRuleEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEndRule()); }
	iv_ruleEnd=ruleEnd
	{ $current=$iv_ruleEnd.current; }
	EOF;

// Rule End
ruleEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_val_0_0='end'
			{
				newLeafNode(lv_val_0_0, grammarAccess.getEndAccess().getValEndKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEndRule());
				}
				setWithLastConsumed($current, "val", lv_val_0_0, "end");
			}
		)
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getFloatPrimaryParserRuleCall_0());
		}
		this_FloatPrimary_0=ruleFloatPrimary
		{
			$current = $this_FloatPrimary_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getStringPrimaryParserRuleCall_1());
		}
		this_StringPrimary_1=ruleStringPrimary
		{
			$current = $this_StringPrimary_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getLogicalPrimaryParserRuleCall_2());
		}
		this_LogicalPrimary_2=ruleLogicalPrimary
		{
			$current = $this_LogicalPrimary_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getFunctionCallParserRuleCall_3());
		}
		this_FunctionCall_3=ruleFunctionCall
		{
			$current = $this_FunctionCall_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getComponentReferenceParserRuleCall_4());
		}
		this_ComponentReference_4=ruleComponentReference
		{
			$current = $this_ComponentReference_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getResExpressionListParserRuleCall_5_1_0());
					}
					lv_res_6_0=ruleExpressionList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						add(
							$current,
							"res",
							lv_res_6_0,
							"xmodelica.Modelica.ExpressionList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=';'
				{
					newLeafNode(otherlv_7, grammarAccess.getPrimaryAccess().getSemicolonKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryAccess().getResExpressionListParserRuleCall_5_2_1_0());
						}
						lv_res_8_0=ruleExpressionList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryRule());
							}
							add(
								$current,
								"res",
								lv_res_8_0,
								"xmodelica.Modelica.ExpressionList");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=']'
			{
				newLeafNode(otherlv_9, grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_5_3());
			}
		)
		    |
		(
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_6_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getFunctionArgumentsParserRuleCall_6_1());
			}
			this_FunctionArguments_11=ruleFunctionArguments
			{
				$current = $this_FunctionArguments_11.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_6_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getEndParserRuleCall_7());
		}
		this_End_13=ruleEnd
		{
			$current = $this_End_13.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	iv_ruleFunctionCall=ruleFunctionCall
	{ $current=$iv_ruleFunctionCall.current; }
	EOF;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFunctionCallRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFunctionCallAccess().getComp_refClassDefinitionCrossReference_0_0_0());
					}
					ruleName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_1='der'
			{
				newLeafNode(otherlv_1, grammarAccess.getFunctionCallAccess().getDerKeyword_0_1());
			}
			    |
			otherlv_2='initial'
			{
				newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getInitialKeyword_0_2());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionCallAccess().getArgsFunctionCallArgsParserRuleCall_1_0());
				}
				lv_args_3_0=ruleFunctionCallArgs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
					}
					set(
						$current,
						"args",
						lv_args_3_0,
						"xmodelica.Modelica.FunctionCallArgs");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleName
entryRuleName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	iv_ruleName=ruleName
	{ $current=$iv_ruleName.current.getText(); }
	EOF;

// Rule Name
ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getNameAccess().getFullStopKeyword_0());
			}
		)?
		this_IDENT_1=RULE_IDENT
		{
			$current.merge(this_IDENT_1);
		}
		{
			newLeafNode(this_IDENT_1, grammarAccess.getNameAccess().getIDENTTerminalRuleCall_1());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getNameAccess().getFullStopKeyword_2_0());
			}
			this_IDENT_3=RULE_IDENT
			{
				$current.merge(this_IDENT_3);
			}
			{
				newLeafNode(this_IDENT_3, grammarAccess.getNameAccess().getIDENTTerminalRuleCall_2_1());
			}
		)*
	)
;

// Entry rule entryRuleComponentReference
entryRuleComponentReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentReferenceRule()); }
	iv_ruleComponentReference=ruleComponentReference
	{ $current=$iv_ruleComponentReference.current; }
	EOF;

// Rule ComponentReference
ruleComponentReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='.'
			{
				newLeafNode(otherlv_0, grammarAccess.getComponentReferenceAccess().getFullStopKeyword_0());
			}
		)?
		(
			(
				lv_idents_1_0=RULE_IDENT
				{
					newLeafNode(lv_idents_1_0, grammarAccess.getComponentReferenceAccess().getIdentsIDENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentReferenceRule());
					}
					addWithLastConsumed(
						$current,
						"idents",
						lv_idents_1_0,
						"xmodelica.Modelica.IDENT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentReferenceAccess().getSubscriptsArraySubscriptsParserRuleCall_2_0());
				}
				lv_subscripts_2_0=ruleArraySubscripts
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentReferenceRule());
					}
					add(
						$current,
						"subscripts",
						lv_subscripts_2_0,
						"xmodelica.Modelica.ArraySubscripts");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)+
;

// Entry rule entryRuleFunctionCallArgs
entryRuleFunctionCallArgs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallArgsRule()); }
	iv_ruleFunctionCallArgs=ruleFunctionCallArgs
	{ $current=$iv_ruleFunctionCallArgs.current; }
	EOF;

// Rule FunctionCallArgs
ruleFunctionCallArgs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionCallArgsAccess().getFunctionCallArgsAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionCallArgsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionCallArgsAccess().getResFunctionArgumentsParserRuleCall_2_0());
				}
				lv_res_2_0=ruleFunctionArguments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionCallArgsRule());
					}
					set(
						$current,
						"res",
						lv_res_2_0,
						"xmodelica.Modelica.FunctionArguments");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getFunctionCallArgsAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleFunctionArguments
entryRuleFunctionArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionArgumentsRule()); }
	iv_ruleFunctionArguments=ruleFunctionArguments
	{ $current=$iv_ruleFunctionArguments.current; }
	EOF;

// Rule FunctionArguments
ruleFunctionArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionArgumentsAccess().getArgsFunctionArgumentParserRuleCall_0_0_0());
					}
					lv_args_0_0=ruleFunctionArgument
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionArgumentsRule());
						}
						add(
							$current,
							"args",
							lv_args_0_0,
							"xmodelica.Modelica.FunctionArgument");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_1=','
					{
						newLeafNode(otherlv_1, grammarAccess.getFunctionArgumentsAccess().getCommaKeyword_0_1_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionArgumentsAccess().getArgsFunctionArgumentsParserRuleCall_0_1_0_1_0());
							}
							lv_args_2_0=ruleFunctionArguments
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionArgumentsRule());
								}
								add(
									$current,
									"args",
									lv_args_2_0,
									"xmodelica.Modelica.FunctionArguments");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					otherlv_3='for'
					{
						newLeafNode(otherlv_3, grammarAccess.getFunctionArgumentsAccess().getForKeyword_0_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionArgumentsAccess().getIndicesForIndicesParserRuleCall_0_1_1_1_0());
							}
							lv_indices_4_0=ruleForIndices
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionArgumentsRule());
								}
								set(
									$current,
									"indices",
									lv_indices_4_0,
									"xmodelica.Modelica.ForIndices");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)?
		)
		    |
		{
			newCompositeNode(grammarAccess.getFunctionArgumentsAccess().getNamedArgumentParserRuleCall_1());
		}
		this_NamedArgument_5=ruleNamedArgument
		{
			$current = $this_NamedArgument_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNamedArguments
entryRuleNamedArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamedArgumentsRule()); }
	iv_ruleNamedArguments=ruleNamedArguments
	{ $current=$iv_ruleNamedArguments.current; }
	EOF;

// Rule NamedArguments
ruleNamedArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedArgumentsAccess().getArgsNamedArgumentParserRuleCall_0_0());
				}
				lv_args_0_0=ruleNamedArgument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedArgumentsRule());
					}
					add(
						$current,
						"args",
						lv_args_0_0,
						"xmodelica.Modelica.NamedArgument");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getNamedArgumentsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNamedArgumentsAccess().getArgsNamedArgumentsParserRuleCall_1_1_0());
					}
					lv_args_2_0=ruleNamedArguments
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNamedArgumentsRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"xmodelica.Modelica.NamedArguments");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleNamedArgument
entryRuleNamedArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamedArgumentRule()); }
	iv_ruleNamedArgument=ruleNamedArgument
	{ $current=$iv_ruleNamedArgument.current; }
	EOF;

// Rule NamedArgument
ruleNamedArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_IDENT
				{
					newLeafNode(lv_id_0_0, grammarAccess.getNamedArgumentAccess().getIdIDENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNamedArgumentRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"xmodelica.Modelica.IDENT");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getNamedArgumentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedArgumentAccess().getFuncFunctionArgumentParserRuleCall_2_0());
				}
				lv_func_2_0=ruleFunctionArgument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedArgumentRule());
					}
					set(
						$current,
						"func",
						lv_func_2_0,
						"xmodelica.Modelica.FunctionArgument");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionArgument
entryRuleFunctionArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionArgumentRule()); }
	iv_ruleFunctionArgument=ruleFunctionArgument
	{ $current=$iv_ruleFunctionArgument.current; }
	EOF;

// Rule FunctionArgument
ruleFunctionArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getFunctionArgumentAccess().getExpressionParserRuleCall());
	}
	this_Expression_0=ruleExpression
	{
		$current = $this_Expression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOutputExpressionList
entryRuleOutputExpressionList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputExpressionListRule()); }
	iv_ruleOutputExpressionList=ruleOutputExpressionList
	{ $current=$iv_ruleOutputExpressionList.current; }
	EOF;

// Rule OutputExpressionList
ruleOutputExpressionList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOutputExpressionListAccess().getOuputExpressionListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputExpressionListAccess().getExprsExpressionParserRuleCall_1_0());
				}
				lv_exprs_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputExpressionListRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_1_0,
						"xmodelica.Modelica.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getOutputExpressionListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputExpressionListAccess().getExprsExpressionParserRuleCall_2_1_0());
					}
					lv_exprs_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputExpressionListRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_3_0,
							"xmodelica.Modelica.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
	)
;

// Entry rule entryRuleExpressionList
entryRuleExpressionList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionListRule()); }
	iv_ruleExpressionList=ruleExpressionList
	{ $current=$iv_ruleExpressionList.current; }
	EOF;

// Rule ExpressionList
ruleExpressionList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_0_0());
				}
				lv_exprs_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionListRule());
					}
					add(
						$current,
						"exprs",
						lv_exprs_0_0,
						"xmodelica.Modelica.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getExpressionListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_1_1_0());
					}
					lv_exprs_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionListRule());
						}
						add(
							$current,
							"exprs",
							lv_exprs_2_0,
							"xmodelica.Modelica.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleArraySubscripts
entryRuleArraySubscripts returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArraySubscriptsRule()); }
	iv_ruleArraySubscripts=ruleArraySubscripts
	{ $current=$iv_ruleArraySubscripts.current; }
	EOF;

// Rule ArraySubscripts
ruleArraySubscripts returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getArraySubscriptsAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArraySubscriptsAccess().getSubscriptsSubscriptParserRuleCall_1_0());
				}
				lv_subscripts_1_0=ruleSubscript
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArraySubscriptsRule());
					}
					add(
						$current,
						"subscripts",
						lv_subscripts_1_0,
						"xmodelica.Modelica.Subscript");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getArraySubscriptsAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArraySubscriptsAccess().getSubscriptsSubscriptParserRuleCall_2_1_0());
					}
					lv_subscripts_3_0=ruleSubscript
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArraySubscriptsRule());
						}
						add(
							$current,
							"subscripts",
							lv_subscripts_3_0,
							"xmodelica.Modelica.Subscript");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getArraySubscriptsAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleSubscript
entryRuleSubscript returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubscriptRule()); }
	iv_ruleSubscript=ruleSubscript
	{ $current=$iv_ruleSubscript.current; }
	EOF;

// Rule Subscript
ruleSubscript returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_all_0_0=':'
				{
					newLeafNode(lv_all_0_0, grammarAccess.getSubscriptAccess().getAllColonKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubscriptRule());
					}
					setWithLastConsumed($current, "all", true, ":");
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getSubscriptAccess().getExpressionParserRuleCall_1());
		}
		this_Expression_1=ruleExpression
		{
			$current = $this_Expression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleComment
entryRuleComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommentRule()); }
	iv_ruleComment=ruleComment
	{ $current=$iv_ruleComment.current; }
	EOF;

// Rule Comment
ruleComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCommentAccess().getCommentStringCommentParserRuleCall_0_0());
				}
				lv_comment_0_0=ruleStringComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommentRule());
					}
					set(
						$current,
						"comment",
						lv_comment_0_0,
						"xmodelica.Modelica.StringComment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCommentAccess().getAnnotationAnnotationParserRuleCall_1_0());
				}
				lv_annotation_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommentRule());
					}
					set(
						$current,
						"annotation",
						lv_annotation_1_0,
						"xmodelica.Modelica.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleStringComment
entryRuleStringComment returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStringCommentRule()); }
	iv_ruleStringComment=ruleStringComment
	{ $current=$iv_ruleStringComment.current.getText(); }
	EOF;

// Rule StringComment
ruleStringComment returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getStringCommentAccess().getSTRINGTerminalRuleCall_0());
		}
		(
			kw='+'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getStringCommentAccess().getPlusSignKeyword_1_0());
			}
			this_STRING_2=RULE_STRING
			{
				$current.merge(this_STRING_2);
			}
			{
				newLeafNode(this_STRING_2, grammarAccess.getStringCommentAccess().getSTRINGTerminalRuleCall_1_1());
			}
		)*
	)?
;

// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	iv_ruleAnnotation=ruleAnnotation
	{ $current=$iv_ruleAnnotation.current; }
	EOF;

// Rule Annotation
ruleAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='annotation'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getAnnotationKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getAnnotationAccess().getClassModificationParserRuleCall_1());
		}
		this_ClassModification_1=ruleClassModification
		{
			$current = $this_ClassModification_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

RULE_TRUE_FALSE : ('true'|'false');

RULE_IDENT : (RULE_NONDIGIT (RULE_DIGIT|RULE_NONDIGIT)*|RULE_Q_IDENT);

RULE_UNSIGNED_NUMBER : RULE_UNSIGNED_INTEGER ('.' RULE_UNSIGNED_INTEGER?)? (('e'|'E') ('+'|'-')? RULE_UNSIGNED_INTEGER)?;

RULE_STRING : '"' (RULE_S_CHAR|RULE_S_ESCAPE)* '"';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

fragment RULE_DIGIT : '0'..'9';

fragment RULE_UNSIGNED_INTEGER : RULE_DIGIT+;

fragment RULE_S_ESCAPE : '\\' ('\''|'"'|'?'|'\\'|'a'|'b'|'f'|'n'|'r'|'t'|'v');

fragment RULE_Q_IDENT : '\u2019' (RULE_Q_CHAR|RULE_S_ESCAPE)* '\u2019';

fragment RULE_NONDIGIT : ('_'|'a'..'z'|'A'..'Z');

fragment RULE_S_CHAR : ~(('"'|'\\'));

fragment RULE_Q_CHAR : (RULE_NONDIGIT|RULE_DIGIT|'!'|'#'|'$'|'%'|'&'|'('|')'|'*'|'+'|','|'-'|'.'|'/'|':'|';'|'<'|'>'|'='|'?'|'@'|'['|']'|'^'|'{'|'}'|'|'|'~'|' ');
