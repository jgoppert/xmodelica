/**
 * generated by Xtext 2.9.2
 */
package xmodelica.modelica.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import xmodelica.modelica.Equation;
import xmodelica.modelica.Expression;
import xmodelica.modelica.ModelicaPackage;
import xmodelica.modelica.WhenEquation;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>When Equation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xmodelica.modelica.impl.WhenEquationImpl#getWhen <em>When</em>}</li>
 *   <li>{@link xmodelica.modelica.impl.WhenEquationImpl#getWhen_eqs <em>When eqs</em>}</li>
 *   <li>{@link xmodelica.modelica.impl.WhenEquationImpl#getElsehwhen <em>Elsehwhen</em>}</li>
 *   <li>{@link xmodelica.modelica.impl.WhenEquationImpl#getElsewhen_eqs <em>Elsewhen eqs</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WhenEquationImpl extends EquationImpl implements WhenEquation
{
  /**
   * The cached value of the '{@link #getWhen() <em>When</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhen()
   * @generated
   * @ordered
   */
  protected Expression when;

  /**
   * The cached value of the '{@link #getWhen_eqs() <em>When eqs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhen_eqs()
   * @generated
   * @ordered
   */
  protected EList<Equation> when_eqs;

  /**
   * The cached value of the '{@link #getElsehwhen() <em>Elsehwhen</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElsehwhen()
   * @generated
   * @ordered
   */
  protected EList<Expression> elsehwhen;

  /**
   * The cached value of the '{@link #getElsewhen_eqs() <em>Elsewhen eqs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElsewhen_eqs()
   * @generated
   * @ordered
   */
  protected EList<Equation> elsewhen_eqs;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WhenEquationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ModelicaPackage.Literals.WHEN_EQUATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getWhen()
  {
    return when;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWhen(Expression newWhen, NotificationChain msgs)
  {
    Expression oldWhen = when;
    when = newWhen;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ModelicaPackage.WHEN_EQUATION__WHEN, oldWhen, newWhen);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWhen(Expression newWhen)
  {
    if (newWhen != when)
    {
      NotificationChain msgs = null;
      if (when != null)
        msgs = ((InternalEObject)when).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ModelicaPackage.WHEN_EQUATION__WHEN, null, msgs);
      if (newWhen != null)
        msgs = ((InternalEObject)newWhen).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ModelicaPackage.WHEN_EQUATION__WHEN, null, msgs);
      msgs = basicSetWhen(newWhen, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ModelicaPackage.WHEN_EQUATION__WHEN, newWhen, newWhen));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Equation> getWhen_eqs()
  {
    if (when_eqs == null)
    {
      when_eqs = new EObjectContainmentEList<Equation>(Equation.class, this, ModelicaPackage.WHEN_EQUATION__WHEN_EQS);
    }
    return when_eqs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Expression> getElsehwhen()
  {
    if (elsehwhen == null)
    {
      elsehwhen = new EObjectContainmentEList<Expression>(Expression.class, this, ModelicaPackage.WHEN_EQUATION__ELSEHWHEN);
    }
    return elsehwhen;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Equation> getElsewhen_eqs()
  {
    if (elsewhen_eqs == null)
    {
      elsewhen_eqs = new EObjectContainmentEList<Equation>(Equation.class, this, ModelicaPackage.WHEN_EQUATION__ELSEWHEN_EQS);
    }
    return elsewhen_eqs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ModelicaPackage.WHEN_EQUATION__WHEN:
        return basicSetWhen(null, msgs);
      case ModelicaPackage.WHEN_EQUATION__WHEN_EQS:
        return ((InternalEList<?>)getWhen_eqs()).basicRemove(otherEnd, msgs);
      case ModelicaPackage.WHEN_EQUATION__ELSEHWHEN:
        return ((InternalEList<?>)getElsehwhen()).basicRemove(otherEnd, msgs);
      case ModelicaPackage.WHEN_EQUATION__ELSEWHEN_EQS:
        return ((InternalEList<?>)getElsewhen_eqs()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ModelicaPackage.WHEN_EQUATION__WHEN:
        return getWhen();
      case ModelicaPackage.WHEN_EQUATION__WHEN_EQS:
        return getWhen_eqs();
      case ModelicaPackage.WHEN_EQUATION__ELSEHWHEN:
        return getElsehwhen();
      case ModelicaPackage.WHEN_EQUATION__ELSEWHEN_EQS:
        return getElsewhen_eqs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ModelicaPackage.WHEN_EQUATION__WHEN:
        setWhen((Expression)newValue);
        return;
      case ModelicaPackage.WHEN_EQUATION__WHEN_EQS:
        getWhen_eqs().clear();
        getWhen_eqs().addAll((Collection<? extends Equation>)newValue);
        return;
      case ModelicaPackage.WHEN_EQUATION__ELSEHWHEN:
        getElsehwhen().clear();
        getElsehwhen().addAll((Collection<? extends Expression>)newValue);
        return;
      case ModelicaPackage.WHEN_EQUATION__ELSEWHEN_EQS:
        getElsewhen_eqs().clear();
        getElsewhen_eqs().addAll((Collection<? extends Equation>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ModelicaPackage.WHEN_EQUATION__WHEN:
        setWhen((Expression)null);
        return;
      case ModelicaPackage.WHEN_EQUATION__WHEN_EQS:
        getWhen_eqs().clear();
        return;
      case ModelicaPackage.WHEN_EQUATION__ELSEHWHEN:
        getElsehwhen().clear();
        return;
      case ModelicaPackage.WHEN_EQUATION__ELSEWHEN_EQS:
        getElsewhen_eqs().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ModelicaPackage.WHEN_EQUATION__WHEN:
        return when != null;
      case ModelicaPackage.WHEN_EQUATION__WHEN_EQS:
        return when_eqs != null && !when_eqs.isEmpty();
      case ModelicaPackage.WHEN_EQUATION__ELSEHWHEN:
        return elsehwhen != null && !elsehwhen.isEmpty();
      case ModelicaPackage.WHEN_EQUATION__ELSEWHEN_EQS:
        return elsewhen_eqs != null && !elsewhen_eqs.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //WhenEquationImpl
