/*
 * generated by Xtext 2.9.2
 */
grammar InternalModelica;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package xmodelica.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package xmodelica.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import xmodelica.services.ModelicaGrammarAccess;

}
@parser::members {
	private ModelicaGrammarAccess grammarAccess;

	public void setGrammarAccess(ModelicaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleStoredDefinition
entryRuleStoredDefinition
:
{ before(grammarAccess.getStoredDefinitionRule()); }
	 ruleStoredDefinition
{ after(grammarAccess.getStoredDefinitionRule()); } 
	 EOF 
;

// Rule StoredDefinition
ruleStoredDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoredDefinitionAccess().getGroup()); }
		(rule__StoredDefinition__Group__0)
		{ after(grammarAccess.getStoredDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassDefinitionWithFinal
entryRuleClassDefinitionWithFinal
:
{ before(grammarAccess.getClassDefinitionWithFinalRule()); }
	 ruleClassDefinitionWithFinal
{ after(grammarAccess.getClassDefinitionWithFinalRule()); } 
	 EOF 
;

// Rule ClassDefinitionWithFinal
ruleClassDefinitionWithFinal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassDefinitionWithFinalAccess().getGroup()); }
		(rule__ClassDefinitionWithFinal__Group__0)
		{ after(grammarAccess.getClassDefinitionWithFinalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassDefinition
entryRuleClassDefinition
:
{ before(grammarAccess.getClassDefinitionRule()); }
	 ruleClassDefinition
{ after(grammarAccess.getClassDefinitionRule()); } 
	 EOF 
;

// Rule ClassDefinition
ruleClassDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassDefinitionAccess().getGroup()); }
		(rule__ClassDefinition__Group__0)
		{ after(grammarAccess.getClassDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassPrefixes
entryRuleClassPrefixes
:
{ before(grammarAccess.getClassPrefixesRule()); }
	 ruleClassPrefixes
{ after(grammarAccess.getClassPrefixesRule()); } 
	 EOF 
;

// Rule ClassPrefixes
ruleClassPrefixes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getGroup()); }
		(rule__ClassPrefixes__Group__0)
		{ after(grammarAccess.getClassPrefixesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassSpecifier
entryRuleClassSpecifier
:
{ before(grammarAccess.getClassSpecifierRule()); }
	 ruleClassSpecifier
{ after(grammarAccess.getClassSpecifierRule()); } 
	 EOF 
;

// Rule ClassSpecifier
ruleClassSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassSpecifierAccess().getAlternatives()); }
		(rule__ClassSpecifier__Alternatives)
		{ after(grammarAccess.getClassSpecifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasePrefix
entryRuleBasePrefix
:
{ before(grammarAccess.getBasePrefixRule()); }
	 ruleBasePrefix
{ after(grammarAccess.getBasePrefixRule()); } 
	 EOF 
;

// Rule BasePrefix
ruleBasePrefix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasePrefixAccess().getTypePrefixParserRuleCall()); }
		ruleTypePrefix
		{ after(grammarAccess.getBasePrefixAccess().getTypePrefixParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumList
entryRuleEnumList
:
{ before(grammarAccess.getEnumListRule()); }
	 ruleEnumList
{ after(grammarAccess.getEnumListRule()); } 
	 EOF 
;

// Rule EnumList
ruleEnumList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumListAccess().getGroup()); }
		(rule__EnumList__Group__0)
		{ after(grammarAccess.getEnumListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationLiteral
entryRuleEnumerationLiteral
:
{ before(grammarAccess.getEnumerationLiteralRule()); }
	 ruleEnumerationLiteral
{ after(grammarAccess.getEnumerationLiteralRule()); } 
	 EOF 
;

// Rule EnumerationLiteral
ruleEnumerationLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationLiteralAccess().getGroup()); }
		(rule__EnumerationLiteral__Group__0)
		{ after(grammarAccess.getEnumerationLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComposition
entryRuleComposition
:
{ before(grammarAccess.getCompositionRule()); }
	 ruleComposition
{ after(grammarAccess.getCompositionRule()); } 
	 EOF 
;

// Rule Composition
ruleComposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionAccess().getGroup()); }
		(rule__Composition__Group__0)
		{ after(grammarAccess.getCompositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLanguageSpecification
entryRuleLanguageSpecification
:
{ before(grammarAccess.getLanguageSpecificationRule()); }
	 ruleLanguageSpecification
{ after(grammarAccess.getLanguageSpecificationRule()); } 
	 EOF 
;

// Rule LanguageSpecification
ruleLanguageSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLanguageSpecificationAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getLanguageSpecificationAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalFunctionCall
entryRuleExternalFunctionCall
:
{ before(grammarAccess.getExternalFunctionCallRule()); }
	 ruleExternalFunctionCall
{ after(grammarAccess.getExternalFunctionCallRule()); } 
	 EOF 
;

// Rule ExternalFunctionCall
ruleExternalFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalFunctionCallAccess().getGroup()); }
		(rule__ExternalFunctionCall__Group__0)
		{ after(grammarAccess.getExternalFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementList
entryRuleElementList
:
{ before(grammarAccess.getElementListRule()); }
	 ruleElementList
{ after(grammarAccess.getElementListRule()); } 
	 EOF 
;

// Rule ElementList
ruleElementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementListAccess().getGroup()); }
		(rule__ElementList__Group__0)
		{ after(grammarAccess.getElementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportClause
entryRuleImportClause
:
{ before(grammarAccess.getImportClauseRule()); }
	 ruleImportClause
{ after(grammarAccess.getImportClauseRule()); } 
	 EOF 
;

// Rule ImportClause
ruleImportClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportClauseAccess().getGroup()); }
		(rule__ImportClause__Group__0)
		{ after(grammarAccess.getImportClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportList
entryRuleImportList
:
{ before(grammarAccess.getImportListRule()); }
	 ruleImportList
{ after(grammarAccess.getImportListRule()); } 
	 EOF 
;

// Rule ImportList
ruleImportList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportListAccess().getGroup()); }
		(rule__ImportList__Group__0)
		{ after(grammarAccess.getImportListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtendsClause
entryRuleExtendsClause
:
{ before(grammarAccess.getExtendsClauseRule()); }
	 ruleExtendsClause
{ after(grammarAccess.getExtendsClauseRule()); } 
	 EOF 
;

// Rule ExtendsClause
ruleExtendsClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendsClauseAccess().getGroup()); }
		(rule__ExtendsClause__Group__0)
		{ after(grammarAccess.getExtendsClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstrainingClause
entryRuleConstrainingClause
:
{ before(grammarAccess.getConstrainingClauseRule()); }
	 ruleConstrainingClause
{ after(grammarAccess.getConstrainingClauseRule()); } 
	 EOF 
;

// Rule ConstrainingClause
ruleConstrainingClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstrainingClauseAccess().getGroup()); }
		(rule__ConstrainingClause__Group__0)
		{ after(grammarAccess.getConstrainingClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentClause
entryRuleComponentClause
:
{ before(grammarAccess.getComponentClauseRule()); }
	 ruleComponentClause
{ after(grammarAccess.getComponentClauseRule()); } 
	 EOF 
;

// Rule ComponentClause
ruleComponentClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentClauseAccess().getGroup()); }
		(rule__ComponentClause__Group__0)
		{ after(grammarAccess.getComponentClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypePrefix
entryRuleTypePrefix
:
{ before(grammarAccess.getTypePrefixRule()); }
	 ruleTypePrefix
{ after(grammarAccess.getTypePrefixRule()); } 
	 EOF 
;

// Rule TypePrefix
ruleTypePrefix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypePrefixAccess().getGroup()); }
		(rule__TypePrefix__Group__0)
		{ after(grammarAccess.getTypePrefixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSpecifier
entryRuleTypeSpecifier
:
{ before(grammarAccess.getTypeSpecifierRule()); }
	 ruleTypeSpecifier
{ after(grammarAccess.getTypeSpecifierRule()); } 
	 EOF 
;

// Rule TypeSpecifier
ruleTypeSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSpecifierAccess().getNameAssignment()); }
		(rule__TypeSpecifier__NameAssignment)
		{ after(grammarAccess.getTypeSpecifierAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentList
entryRuleComponentList
:
{ before(grammarAccess.getComponentListRule()); }
	 ruleComponentList
{ after(grammarAccess.getComponentListRule()); } 
	 EOF 
;

// Rule ComponentList
ruleComponentList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentListAccess().getGroup()); }
		(rule__ComponentList__Group__0)
		{ after(grammarAccess.getComponentListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentDeclaration
entryRuleComponentDeclaration
:
{ before(grammarAccess.getComponentDeclarationRule()); }
	 ruleComponentDeclaration
{ after(grammarAccess.getComponentDeclarationRule()); } 
	 EOF 
;

// Rule ComponentDeclaration
ruleComponentDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentDeclarationAccess().getGroup()); }
		(rule__ComponentDeclaration__Group__0)
		{ after(grammarAccess.getComponentDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionAttribute
entryRuleConditionAttribute
:
{ before(grammarAccess.getConditionAttributeRule()); }
	 ruleConditionAttribute
{ after(grammarAccess.getConditionAttributeRule()); } 
	 EOF 
;

// Rule ConditionAttribute
ruleConditionAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAttributeAccess().getGroup()); }
		(rule__ConditionAttribute__Group__0)
		{ after(grammarAccess.getConditionAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getGroup()); }
		(rule__Declaration__Group__0)
		{ after(grammarAccess.getDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModification
entryRuleModification
:
{ before(grammarAccess.getModificationRule()); }
	 ruleModification
{ after(grammarAccess.getModificationRule()); } 
	 EOF 
;

// Rule Modification
ruleModification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModificationAccess().getAlternatives()); }
		(rule__Modification__Alternatives)
		{ after(grammarAccess.getModificationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassModification
entryRuleClassModification
:
{ before(grammarAccess.getClassModificationRule()); }
	 ruleClassModification
{ after(grammarAccess.getClassModificationRule()); } 
	 EOF 
;

// Rule ClassModification
ruleClassModification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassModificationAccess().getGroup()); }
		(rule__ClassModification__Group__0)
		{ after(grammarAccess.getClassModificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgumentList
entryRuleArgumentList
:
{ before(grammarAccess.getArgumentListRule()); }
	 ruleArgumentList
{ after(grammarAccess.getArgumentListRule()); } 
	 EOF 
;

// Rule ArgumentList
ruleArgumentList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentListAccess().getGroup()); }
		(rule__ArgumentList__Group__0)
		{ after(grammarAccess.getArgumentListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getAlternatives()); }
		(rule__Argument__Alternatives)
		{ after(grammarAccess.getArgumentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementModicationOrReplaceable
entryRuleElementModicationOrReplaceable
:
{ before(grammarAccess.getElementModicationOrReplaceableRule()); }
	 ruleElementModicationOrReplaceable
{ after(grammarAccess.getElementModicationOrReplaceableRule()); } 
	 EOF 
;

// Rule ElementModicationOrReplaceable
ruleElementModicationOrReplaceable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementModicationOrReplaceableAccess().getGroup()); }
		(rule__ElementModicationOrReplaceable__Group__0)
		{ after(grammarAccess.getElementModicationOrReplaceableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementModification
entryRuleElementModification
:
{ before(grammarAccess.getElementModificationRule()); }
	 ruleElementModification
{ after(grammarAccess.getElementModificationRule()); } 
	 EOF 
;

// Rule ElementModification
ruleElementModification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementModificationAccess().getGroup()); }
		(rule__ElementModification__Group__0)
		{ after(grammarAccess.getElementModificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementRedeclaration
entryRuleElementRedeclaration
:
{ before(grammarAccess.getElementRedeclarationRule()); }
	 ruleElementRedeclaration
{ after(grammarAccess.getElementRedeclarationRule()); } 
	 EOF 
;

// Rule ElementRedeclaration
ruleElementRedeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getGroup()); }
		(rule__ElementRedeclaration__Group__0)
		{ after(grammarAccess.getElementRedeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementReplaceable
entryRuleElementReplaceable
:
{ before(grammarAccess.getElementReplaceableRule()); }
	 ruleElementReplaceable
{ after(grammarAccess.getElementReplaceableRule()); } 
	 EOF 
;

// Rule ElementReplaceable
ruleElementReplaceable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementReplaceableAccess().getGroup()); }
		(rule__ElementReplaceable__Group__0)
		{ after(grammarAccess.getElementReplaceableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentClause1
entryRuleComponentClause1
:
{ before(grammarAccess.getComponentClause1Rule()); }
	 ruleComponentClause1
{ after(grammarAccess.getComponentClause1Rule()); } 
	 EOF 
;

// Rule ComponentClause1
ruleComponentClause1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentClause1Access().getGroup()); }
		(rule__ComponentClause1__Group__0)
		{ after(grammarAccess.getComponentClause1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentDeclaration1
entryRuleComponentDeclaration1
:
{ before(grammarAccess.getComponentDeclaration1Rule()); }
	 ruleComponentDeclaration1
{ after(grammarAccess.getComponentDeclaration1Rule()); } 
	 EOF 
;

// Rule ComponentDeclaration1
ruleComponentDeclaration1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentDeclaration1Access().getGroup()); }
		(rule__ComponentDeclaration1__Group__0)
		{ after(grammarAccess.getComponentDeclaration1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShortClassDefinition
entryRuleShortClassDefinition
:
{ before(grammarAccess.getShortClassDefinitionRule()); }
	 ruleShortClassDefinition
{ after(grammarAccess.getShortClassDefinitionRule()); } 
	 EOF 
;

// Rule ShortClassDefinition
ruleShortClassDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShortClassDefinitionAccess().getGroup()); }
		(rule__ShortClassDefinition__Group__0)
		{ after(grammarAccess.getShortClassDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquationSection
entryRuleEquationSection
:
{ before(grammarAccess.getEquationSectionRule()); }
	 ruleEquationSection
{ after(grammarAccess.getEquationSectionRule()); } 
	 EOF 
;

// Rule EquationSection
ruleEquationSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquationSectionAccess().getGroup()); }
		(rule__EquationSection__Group__0)
		{ after(grammarAccess.getEquationSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlgorithmSection
entryRuleAlgorithmSection
:
{ before(grammarAccess.getAlgorithmSectionRule()); }
	 ruleAlgorithmSection
{ after(grammarAccess.getAlgorithmSectionRule()); } 
	 EOF 
;

// Rule AlgorithmSection
ruleAlgorithmSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlgorithmSectionAccess().getGroup()); }
		(rule__AlgorithmSection__Group__0)
		{ after(grammarAccess.getAlgorithmSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquation
entryRuleEquation
:
{ before(grammarAccess.getEquationRule()); }
	 ruleEquation
{ after(grammarAccess.getEquationRule()); } 
	 EOF 
;

// Rule Equation
ruleEquation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquationAccess().getGroup()); }
		(rule__Equation__Group__0)
		{ after(grammarAccess.getEquationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfEquation
entryRuleIfEquation
:
{ before(grammarAccess.getIfEquationRule()); }
	 ruleIfEquation
{ after(grammarAccess.getIfEquationRule()); } 
	 EOF 
;

// Rule IfEquation
ruleIfEquation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfEquationAccess().getGroup()); }
		(rule__IfEquation__Group__0)
		{ after(grammarAccess.getIfEquationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForEquation
entryRuleForEquation
:
{ before(grammarAccess.getForEquationRule()); }
	 ruleForEquation
{ after(grammarAccess.getForEquationRule()); } 
	 EOF 
;

// Rule ForEquation
ruleForEquation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForEquationAccess().getGroup()); }
		(rule__ForEquation__Group__0)
		{ after(grammarAccess.getForEquationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStatement
entryRuleForStatement
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStatementAccess().getGroup()); }
		(rule__ForStatement__Group__0)
		{ after(grammarAccess.getForStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForIndices
entryRuleForIndices
:
{ before(grammarAccess.getForIndicesRule()); }
	 ruleForIndices
{ after(grammarAccess.getForIndicesRule()); } 
	 EOF 
;

// Rule ForIndices
ruleForIndices 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForIndicesAccess().getGroup()); }
		(rule__ForIndices__Group__0)
		{ after(grammarAccess.getForIndicesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForIndex
entryRuleForIndex
:
{ before(grammarAccess.getForIndexRule()); }
	 ruleForIndex
{ after(grammarAccess.getForIndexRule()); } 
	 EOF 
;

// Rule ForIndex
ruleForIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForIndexAccess().getGroup()); }
		(rule__ForIndex__Group__0)
		{ after(grammarAccess.getForIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
		(rule__WhileStatement__Group__0)
		{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhenEquation
entryRuleWhenEquation
:
{ before(grammarAccess.getWhenEquationRule()); }
	 ruleWhenEquation
{ after(grammarAccess.getWhenEquationRule()); } 
	 EOF 
;

// Rule WhenEquation
ruleWhenEquation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhenEquationAccess().getGroup()); }
		(rule__WhenEquation__Group__0)
		{ after(grammarAccess.getWhenEquationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhenStatement
entryRuleWhenStatement
:
{ before(grammarAccess.getWhenStatementRule()); }
	 ruleWhenStatement
{ after(grammarAccess.getWhenStatementRule()); } 
	 EOF 
;

// Rule WhenStatement
ruleWhenStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhenStatementAccess().getGroup()); }
		(rule__WhenStatement__Group__0)
		{ after(grammarAccess.getWhenStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnectClause
entryRuleConnectClause
:
{ before(grammarAccess.getConnectClauseRule()); }
	 ruleConnectClause
{ after(grammarAccess.getConnectClauseRule()); } 
	 EOF 
;

// Rule ConnectClause
ruleConnectClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectClauseAccess().getGroup()); }
		(rule__ConnectClause__Group__0)
		{ after(grammarAccess.getConnectClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleExpression
entryRuleSimpleExpression
:
{ before(grammarAccess.getSimpleExpressionRule()); }
	 ruleSimpleExpression
{ after(grammarAccess.getSimpleExpressionRule()); } 
	 EOF 
;

// Rule SimpleExpression
ruleSimpleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleExpressionAccess().getGroup()); }
		(rule__SimpleExpression__Group__0)
		{ after(grammarAccess.getSimpleExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalExpression
entryRuleLogicalExpression
:
{ before(grammarAccess.getLogicalExpressionRule()); }
	 ruleLogicalExpression
{ after(grammarAccess.getLogicalExpressionRule()); } 
	 EOF 
;

// Rule LogicalExpression
ruleLogicalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getGroup()); }
		(rule__LogicalExpression__Group__0)
		{ after(grammarAccess.getLogicalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalTerm
entryRuleLogicalTerm
:
{ before(grammarAccess.getLogicalTermRule()); }
	 ruleLogicalTerm
{ after(grammarAccess.getLogicalTermRule()); } 
	 EOF 
;

// Rule LogicalTerm
ruleLogicalTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalTermAccess().getGroup()); }
		(rule__LogicalTerm__Group__0)
		{ after(grammarAccess.getLogicalTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalFactor
entryRuleLogicalFactor
:
{ before(grammarAccess.getLogicalFactorRule()); }
	 ruleLogicalFactor
{ after(grammarAccess.getLogicalFactorRule()); } 
	 EOF 
;

// Rule LogicalFactor
ruleLogicalFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalFactorAccess().getAlternatives()); }
		(rule__LogicalFactor__Alternatives)
		{ after(grammarAccess.getLogicalFactorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getGroup()); }
		(rule__Relation__Group__0)
		{ after(grammarAccess.getRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelOp
entryRuleRelOp
:
{ before(grammarAccess.getRelOpRule()); }
	 ruleRelOp
{ after(grammarAccess.getRelOpRule()); } 
	 EOF 
;

// Rule RelOp
ruleRelOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelOpAccess().getAlternatives()); }
		(rule__RelOp__Alternatives)
		{ after(grammarAccess.getRelOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression
:
{ before(grammarAccess.getArithmeticExpressionRule()); }
	 ruleArithmeticExpression
{ after(grammarAccess.getArithmeticExpressionRule()); } 
	 EOF 
;

// Rule ArithmeticExpression
ruleArithmeticExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getGroup()); }
		(rule__ArithmeticExpression__Group__0)
		{ after(grammarAccess.getArithmeticExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNegation
entryRuleNegation
:
{ before(grammarAccess.getNegationRule()); }
	 ruleNegation
{ after(grammarAccess.getNegationRule()); } 
	 EOF 
;

// Rule Negation
ruleNegation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNegationAccess().getAlternatives()); }
		(rule__Negation__Alternatives)
		{ after(grammarAccess.getNegationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddOp
entryRuleAddOp
:
{ before(grammarAccess.getAddOpRule()); }
	 ruleAddOp
{ after(grammarAccess.getAddOpRule()); } 
	 EOF 
;

// Rule AddOp
ruleAddOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddOpAccess().getAlternatives()); }
		(rule__AddOp__Alternatives)
		{ after(grammarAccess.getAddOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getGroup()); }
		(rule__Term__Group__0)
		{ after(grammarAccess.getTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOp
entryRuleMulOp
:
{ before(grammarAccess.getMulOpRule()); }
	 ruleMulOp
{ after(grammarAccess.getMulOpRule()); } 
	 EOF 
;

// Rule MulOp
ruleMulOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOpAccess().getAlternatives()); }
		(rule__MulOp__Alternatives)
		{ after(grammarAccess.getMulOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getGroup()); }
		(rule__Factor__Group__0)
		{ after(grammarAccess.getFactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatPrimary
entryRuleFloatPrimary
:
{ before(grammarAccess.getFloatPrimaryRule()); }
	 ruleFloatPrimary
{ after(grammarAccess.getFloatPrimaryRule()); } 
	 EOF 
;

// Rule FloatPrimary
ruleFloatPrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatPrimaryAccess().getValAssignment()); }
		(rule__FloatPrimary__ValAssignment)
		{ after(grammarAccess.getFloatPrimaryAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringPrimary
entryRuleStringPrimary
:
{ before(grammarAccess.getStringPrimaryRule()); }
	 ruleStringPrimary
{ after(grammarAccess.getStringPrimaryRule()); } 
	 EOF 
;

// Rule StringPrimary
ruleStringPrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringPrimaryAccess().getValAssignment()); }
		(rule__StringPrimary__ValAssignment)
		{ after(grammarAccess.getStringPrimaryAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalPrimary
entryRuleLogicalPrimary
:
{ before(grammarAccess.getLogicalPrimaryRule()); }
	 ruleLogicalPrimary
{ after(grammarAccess.getLogicalPrimaryRule()); } 
	 EOF 
;

// Rule LogicalPrimary
ruleLogicalPrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalPrimaryAccess().getValAssignment()); }
		(rule__LogicalPrimary__ValAssignment)
		{ after(grammarAccess.getLogicalPrimaryAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnd
entryRuleEnd
:
{ before(grammarAccess.getEndRule()); }
	 ruleEnd
{ after(grammarAccess.getEndRule()); } 
	 EOF 
;

// Rule End
ruleEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndAccess().getValAssignment()); }
		(rule__End__ValAssignment)
		{ after(grammarAccess.getEndAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
		(rule__FunctionCall__Group__0)
		{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getGroup()); }
		(rule__Name__Group__0)
		{ after(grammarAccess.getNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponentReference
entryRuleComponentReference
:
{ before(grammarAccess.getComponentReferenceRule()); }
	 ruleComponentReference
{ after(grammarAccess.getComponentReferenceRule()); } 
	 EOF 
;

// Rule ComponentReference
ruleComponentReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getComponentReferenceAccess().getGroup()); }
			(rule__ComponentReference__Group__0)
			{ after(grammarAccess.getComponentReferenceAccess().getGroup()); }
		)
		(
			{ before(grammarAccess.getComponentReferenceAccess().getGroup()); }
			(rule__ComponentReference__Group__0)*
			{ after(grammarAccess.getComponentReferenceAccess().getGroup()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCallArgs
entryRuleFunctionCallArgs
:
{ before(grammarAccess.getFunctionCallArgsRule()); }
	 ruleFunctionCallArgs
{ after(grammarAccess.getFunctionCallArgsRule()); } 
	 EOF 
;

// Rule FunctionCallArgs
ruleFunctionCallArgs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallArgsAccess().getGroup()); }
		(rule__FunctionCallArgs__Group__0)
		{ after(grammarAccess.getFunctionCallArgsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionArguments
entryRuleFunctionArguments
:
{ before(grammarAccess.getFunctionArgumentsRule()); }
	 ruleFunctionArguments
{ after(grammarAccess.getFunctionArgumentsRule()); } 
	 EOF 
;

// Rule FunctionArguments
ruleFunctionArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getAlternatives()); }
		(rule__FunctionArguments__Alternatives)
		{ after(grammarAccess.getFunctionArgumentsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamedArguments
entryRuleNamedArguments
:
{ before(grammarAccess.getNamedArgumentsRule()); }
	 ruleNamedArguments
{ after(grammarAccess.getNamedArgumentsRule()); } 
	 EOF 
;

// Rule NamedArguments
ruleNamedArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedArgumentsAccess().getGroup()); }
		(rule__NamedArguments__Group__0)
		{ after(grammarAccess.getNamedArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamedArgument
entryRuleNamedArgument
:
{ before(grammarAccess.getNamedArgumentRule()); }
	 ruleNamedArgument
{ after(grammarAccess.getNamedArgumentRule()); } 
	 EOF 
;

// Rule NamedArgument
ruleNamedArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedArgumentAccess().getGroup()); }
		(rule__NamedArgument__Group__0)
		{ after(grammarAccess.getNamedArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionArgument
entryRuleFunctionArgument
:
{ before(grammarAccess.getFunctionArgumentRule()); }
	 ruleFunctionArgument
{ after(grammarAccess.getFunctionArgumentRule()); } 
	 EOF 
;

// Rule FunctionArgument
ruleFunctionArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionArgumentAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getFunctionArgumentAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputExpressionList
entryRuleOutputExpressionList
:
{ before(grammarAccess.getOutputExpressionListRule()); }
	 ruleOutputExpressionList
{ after(grammarAccess.getOutputExpressionListRule()); } 
	 EOF 
;

// Rule OutputExpressionList
ruleOutputExpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputExpressionListAccess().getGroup()); }
		(rule__OutputExpressionList__Group__0)
		{ after(grammarAccess.getOutputExpressionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionList
entryRuleExpressionList
:
{ before(grammarAccess.getExpressionListRule()); }
	 ruleExpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule ExpressionList
ruleExpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionListAccess().getGroup()); }
		(rule__ExpressionList__Group__0)
		{ after(grammarAccess.getExpressionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArraySubscripts
entryRuleArraySubscripts
:
{ before(grammarAccess.getArraySubscriptsRule()); }
	 ruleArraySubscripts
{ after(grammarAccess.getArraySubscriptsRule()); } 
	 EOF 
;

// Rule ArraySubscripts
ruleArraySubscripts 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArraySubscriptsAccess().getGroup()); }
		(rule__ArraySubscripts__Group__0)
		{ after(grammarAccess.getArraySubscriptsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubscript
entryRuleSubscript
:
{ before(grammarAccess.getSubscriptRule()); }
	 ruleSubscript
{ after(grammarAccess.getSubscriptRule()); } 
	 EOF 
;

// Rule Subscript
ruleSubscript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubscriptAccess().getAlternatives()); }
		(rule__Subscript__Alternatives)
		{ after(grammarAccess.getSubscriptAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComment
entryRuleComment
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentAccess().getGroup()); }
		(rule__Comment__Group__0)
		{ after(grammarAccess.getCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringComment
entryRuleStringComment
:
{ before(grammarAccess.getStringCommentRule()); }
	 ruleStringComment
{ after(grammarAccess.getStringCommentRule()); } 
	 EOF 
;

// Rule StringComment
ruleStringComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringCommentAccess().getGroup()); }
		(rule__StringComment__Group__0)?
		{ after(grammarAccess.getStringCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotation
entryRuleAnnotation
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationAccess().getGroup()); }
		(rule__Annotation__Group__0)
		{ after(grammarAccess.getAnnotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getClassKeyword_1_0()); }
		'class'
		{ after(grammarAccess.getClassPrefixesAccess().getClassKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getModelKeyword_1_1()); }
		'model'
		{ after(grammarAccess.getClassPrefixesAccess().getModelKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getGroup_1_2()); }
		(rule__ClassPrefixes__Group_1_2__0)
		{ after(grammarAccess.getClassPrefixesAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getBlockKeyword_1_3()); }
		'block'
		{ after(grammarAccess.getClassPrefixesAccess().getBlockKeyword_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getGroup_1_4()); }
		(rule__ClassPrefixes__Group_1_4__0)
		{ after(grammarAccess.getClassPrefixesAccess().getGroup_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getTypeKeyword_1_5()); }
		'type'
		{ after(grammarAccess.getClassPrefixesAccess().getTypeKeyword_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getPackageKeyword_1_6()); }
		'package'
		{ after(grammarAccess.getClassPrefixesAccess().getPackageKeyword_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getGroup_1_7()); }
		(rule__ClassPrefixes__Group_1_7__0)
		{ after(grammarAccess.getClassPrefixesAccess().getGroup_1_7()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getOperatorKeyword_1_8()); }
		'operator'
		{ after(grammarAccess.getClassPrefixesAccess().getOperatorKeyword_1_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Alternatives_1_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassPrefixesAccess().getPureKeyword_1_7_0_0()); }
		'pure'
		{ after(grammarAccess.getClassPrefixesAccess().getPureKeyword_1_7_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassPrefixesAccess().getImpureKeyword_1_7_0_1()); }
		'impure'
		{ after(grammarAccess.getClassPrefixesAccess().getImpureKeyword_1_7_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSpecifierAccess().getGroup_0()); }
		(rule__ClassSpecifier__Group_0__0)
		{ after(grammarAccess.getClassSpecifierAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassSpecifierAccess().getGroup_1()); }
		(rule__ClassSpecifier__Group_1__0)
		{ after(grammarAccess.getClassSpecifierAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getGroup_1_0()); }
		(rule__Composition__Group_1_0__0)
		{ after(grammarAccess.getCompositionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionAccess().getGroup_1_1()); }
		(rule__Composition__Group_1_1__0)
		{ after(grammarAccess.getCompositionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionAccess().getEq_secsAssignment_1_2()); }
		(rule__Composition__Eq_secsAssignment_1_2)
		{ after(grammarAccess.getCompositionAccess().getEq_secsAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionAccess().getAlg_secsAssignment_1_3()); }
		(rule__Composition__Alg_secsAssignment_1_3)
		{ after(grammarAccess.getCompositionAccess().getAlg_secsAssignment_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getImportClauseParserRuleCall_0()); }
		ruleImportClause
		{ after(grammarAccess.getElementAccess().getImportClauseParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getExtendsClauseParserRuleCall_1()); }
		ruleExtendsClause
		{ after(grammarAccess.getElementAccess().getExtendsClauseParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getGroup_2()); }
		(rule__Element__Group_2__0)
		{ after(grammarAccess.getElementAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives_2_4_0()); }
		(rule__Element__Alternatives_2_4_0)
		{ after(grammarAccess.getElementAccess().getAlternatives_2_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getGroup_2_4_1()); }
		(rule__Element__Group_2_4_1__0)
		{ after(grammarAccess.getElementAccess().getGroup_2_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives_2_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getClassDefinitionParserRuleCall_2_4_0_0()); }
		ruleClassDefinition
		{ after(grammarAccess.getElementAccess().getClassDefinitionParserRuleCall_2_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getComponentClauseParserRuleCall_2_4_0_1()); }
		ruleComponentClause
		{ after(grammarAccess.getElementAccess().getComponentClauseParserRuleCall_2_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives_2_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getClassDefinitionParserRuleCall_2_4_1_1_0()); }
		ruleClassDefinition
		{ after(grammarAccess.getElementAccess().getClassDefinitionParserRuleCall_2_4_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getComponentClauseParserRuleCall_2_4_1_1_1()); }
		ruleComponentClause
		{ after(grammarAccess.getElementAccess().getComponentClauseParserRuleCall_2_4_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getGroup_1_0()); }
		(rule__ImportClause__Group_1_0__0)
		{ after(grammarAccess.getImportClauseAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportClauseAccess().getGroup_1_1()); }
		(rule__ImportClause__Group_1_1__0)
		{ after(grammarAccess.getImportClauseAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Alternatives_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getAsteriskKeyword_1_1_1_1_0()); }
		'*'
		{ after(grammarAccess.getImportClauseAccess().getAsteriskKeyword_1_1_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportClauseAccess().getGroup_1_1_1_1_1()); }
		(rule__ImportClause__Group_1_1_1_1_1__0)
		{ after(grammarAccess.getImportClauseAccess().getGroup_1_1_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrefixAccess().getFlowKeyword_0_0()); }
		'flow'
		{ after(grammarAccess.getTypePrefixAccess().getFlowKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypePrefixAccess().getStreamKeyword_0_1()); }
		'stream'
		{ after(grammarAccess.getTypePrefixAccess().getStreamKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrefixAccess().getDiscreteKeyword_1_0()); }
		'discrete'
		{ after(grammarAccess.getTypePrefixAccess().getDiscreteKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypePrefixAccess().getParameterKeyword_1_1()); }
		'parameter'
		{ after(grammarAccess.getTypePrefixAccess().getParameterKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypePrefixAccess().getConstantKeyword_1_2()); }
		'constant'
		{ after(grammarAccess.getTypePrefixAccess().getConstantKeyword_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePrefixAccess().getInputKeyword_2_0()); }
		'input'
		{ after(grammarAccess.getTypePrefixAccess().getInputKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypePrefixAccess().getOutputKeyword_2_1()); }
		'output'
		{ after(grammarAccess.getTypePrefixAccess().getOutputKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModificationAccess().getGroup_0()); }
		(rule__Modification__Group_0__0)
		{ after(grammarAccess.getModificationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getModificationAccess().getGroup_1()); }
		(rule__Modification__Group_1__0)
		{ after(grammarAccess.getModificationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getModificationAccess().getGroup_2()); }
		(rule__Modification__Group_2__0)
		{ after(grammarAccess.getModificationAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getElementModicationOrReplaceableParserRuleCall_0()); }
		ruleElementModicationOrReplaceable
		{ after(grammarAccess.getArgumentAccess().getElementModicationOrReplaceableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentAccess().getElementRedeclarationParserRuleCall_1()); }
		ruleElementRedeclaration
		{ after(grammarAccess.getArgumentAccess().getElementRedeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModicationOrReplaceable__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementModicationOrReplaceableAccess().getElementModificationParserRuleCall_2_0()); }
		ruleElementModification
		{ after(grammarAccess.getElementModicationOrReplaceableAccess().getElementModificationParserRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementModicationOrReplaceableAccess().getElementReplaceableParserRuleCall_2_1()); }
		ruleElementReplaceable
		{ after(grammarAccess.getElementModicationOrReplaceableAccess().getElementReplaceableParserRuleCall_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getAlternatives_3_0()); }
		(rule__ElementRedeclaration__Alternatives_3_0)
		{ after(grammarAccess.getElementRedeclarationAccess().getAlternatives_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getElementReplaceableParserRuleCall_3_1()); }
		ruleElementReplaceable
		{ after(grammarAccess.getElementRedeclarationAccess().getElementReplaceableParserRuleCall_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Alternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getShortClassDefinitionParserRuleCall_3_0_0()); }
		ruleShortClassDefinition
		{ after(grammarAccess.getElementRedeclarationAccess().getShortClassDefinitionParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementRedeclarationAccess().getComponentClause1ParserRuleCall_3_0_1()); }
		ruleComponentClause1
		{ after(grammarAccess.getElementRedeclarationAccess().getComponentClause1ParserRuleCall_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementReplaceableAccess().getShortClassDefinitionParserRuleCall_1_0()); }
		ruleShortClassDefinition
		{ after(grammarAccess.getElementReplaceableAccess().getShortClassDefinitionParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementReplaceableAccess().getComponentClause1ParserRuleCall_1_1()); }
		ruleComponentClause1
		{ after(grammarAccess.getElementReplaceableAccess().getComponentClause1ParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassDefinitionAccess().getGroup_3_0()); }
		(rule__ShortClassDefinition__Group_3_0__0)
		{ after(grammarAccess.getShortClassDefinitionAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getShortClassDefinitionAccess().getGroup_3_1()); }
		(rule__ShortClassDefinition__Group_3_1__0)
		{ after(grammarAccess.getShortClassDefinitionAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Alternatives_3_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassDefinitionAccess().getListAssignment_3_1_2_0()); }
		(rule__ShortClassDefinition__ListAssignment_3_1_2_0)?
		{ after(grammarAccess.getShortClassDefinitionAccess().getListAssignment_3_1_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getShortClassDefinitionAccess().getColonKeyword_3_1_2_1()); }
		':'
		{ after(grammarAccess.getShortClassDefinitionAccess().getColonKeyword_3_1_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getGroup_0_0()); }
		(rule__Equation__Group_0_0__0)
		{ after(grammarAccess.getEquationAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEquationAccess().getIfEquationParserRuleCall_0_1()); }
		ruleIfEquation
		{ after(grammarAccess.getEquationAccess().getIfEquationParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getEquationAccess().getForEquationParserRuleCall_0_2()); }
		ruleForEquation
		{ after(grammarAccess.getEquationAccess().getForEquationParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getEquationAccess().getConnectClauseParserRuleCall_0_3()); }
		ruleConnectClause
		{ after(grammarAccess.getEquationAccess().getConnectClauseParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getEquationAccess().getWhenEquationParserRuleCall_0_4()); }
		ruleWhenEquation
		{ after(grammarAccess.getEquationAccess().getWhenEquationParserRuleCall_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0_0()); }
		(rule__Statement__Group_0_0__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0_1()); }
		(rule__Statement__Group_0_1__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBreakKeyword_0_2()); }
		'break'
		{ after(grammarAccess.getStatementAccess().getBreakKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getReturnKeyword_0_3()); }
		'return'
		{ after(grammarAccess.getStatementAccess().getReturnKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0_4()); }
		ruleIfStatement
		{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getForStatementParserRuleCall_0_5()); }
		ruleForStatement
		{ after(grammarAccess.getStatementAccess().getForStatementParserRuleCall_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_0_6()); }
		ruleWhileStatement
		{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getWhenStatementParserRuleCall_0_7()); }
		ruleWhenStatement
		{ after(grammarAccess.getStatementAccess().getWhenStatementParserRuleCall_0_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__RightAlternatives_0_0_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getRightExpressionParserRuleCall_0_0_1_1_0_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementAccess().getRightExpressionParserRuleCall_0_0_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getRightFunctionCallArgsParserRuleCall_0_0_1_1_0_1()); }
		ruleFunctionCallArgs
		{ after(grammarAccess.getStatementAccess().getRightFunctionCallArgsParserRuleCall_0_0_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSimpleExpressionParserRuleCall_0()); }
		ruleSimpleExpression
		{ after(grammarAccess.getExpressionAccess().getSimpleExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
		(rule__Expression__Group_1__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalFactor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalFactorAccess().getRelationParserRuleCall_0()); }
		ruleRelation
		{ after(grammarAccess.getLogicalFactorAccess().getRelationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalFactorAccess().getGroup_1()); }
		(rule__LogicalFactor__Group_1__0)
		{ after(grammarAccess.getLogicalFactorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelOpAccess().getLessThanSignKeyword_0()); }
		'<'
		{ after(grammarAccess.getRelOpAccess().getLessThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelOpAccess().getLessThanSignEqualsSignKeyword_1()); }
		'<='
		{ after(grammarAccess.getRelOpAccess().getLessThanSignEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelOpAccess().getGreaterThanSignKeyword_2()); }
		'>'
		{ after(grammarAccess.getRelOpAccess().getGreaterThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelOpAccess().getGreaterThanSignEqualsSignKeyword_3()); }
		'>='
		{ after(grammarAccess.getRelOpAccess().getGreaterThanSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelOpAccess().getEqualsSignEqualsSignKeyword_4()); }
		'=='
		{ after(grammarAccess.getRelOpAccess().getEqualsSignEqualsSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelOpAccess().getLessThanSignGreaterThanSignKeyword_5()); }
		'<>'
		{ after(grammarAccess.getRelOpAccess().getLessThanSignGreaterThanSignKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getTermParserRuleCall_0()); }
		ruleTerm
		{ after(grammarAccess.getNegationAccess().getTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNegationAccess().getGroup_1()); }
		(rule__Negation__Group_1__0)
		{ after(grammarAccess.getNegationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOpAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getAddOpAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getAddOpAccess().getFullStopPlusSignKeyword_2()); }
		'.+'
		{ after(grammarAccess.getAddOpAccess().getFullStopPlusSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAddOpAccess().getFullStopHyphenMinusKeyword_3()); }
		'.-'
		{ after(grammarAccess.getAddOpAccess().getFullStopHyphenMinusKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOpAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getMulOpAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOpAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getMulOpAccess().getSolidusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getMulOpAccess().getFullStopAsteriskKeyword_2()); }
		'.*'
		{ after(grammarAccess.getMulOpAccess().getFullStopAsteriskKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getMulOpAccess().getFullStopSolidusKeyword_3()); }
		'./'
		{ after(grammarAccess.getMulOpAccess().getFullStopSolidusKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getCircumflexAccentKeyword_1_1_0()); }
		'^'
		{ after(grammarAccess.getFactorAccess().getCircumflexAccentKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getFullStopCircumflexAccentKeyword_1_1_1()); }
		'.^'
		{ after(grammarAccess.getFactorAccess().getFullStopCircumflexAccentKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getFloatPrimaryParserRuleCall_0()); }
		ruleFloatPrimary
		{ after(grammarAccess.getPrimaryAccess().getFloatPrimaryParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getStringPrimaryParserRuleCall_1()); }
		ruleStringPrimary
		{ after(grammarAccess.getPrimaryAccess().getStringPrimaryParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getLogicalPrimaryParserRuleCall_2()); }
		ruleLogicalPrimary
		{ after(grammarAccess.getPrimaryAccess().getLogicalPrimaryParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getFunctionCallParserRuleCall_3()); }
		ruleFunctionCall
		{ after(grammarAccess.getPrimaryAccess().getFunctionCallParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getComponentReferenceParserRuleCall_4()); }
		ruleComponentReference
		{ after(grammarAccess.getPrimaryAccess().getComponentReferenceParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_5()); }
		(rule__Primary__Group_5__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_6()); }
		(rule__Primary__Group_6__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getEndParserRuleCall_7()); }
		ruleEnd
		{ after(grammarAccess.getPrimaryAccess().getEndParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getComp_refAssignment_0_0()); }
		(rule__FunctionCall__Comp_refAssignment_0_0)
		{ after(grammarAccess.getFunctionCallAccess().getComp_refAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getDerKeyword_0_1()); }
		'der'
		{ after(grammarAccess.getFunctionCallAccess().getDerKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionCallAccess().getInitialKeyword_0_2()); }
		'initial'
		{ after(grammarAccess.getFunctionCallAccess().getInitialKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getGroup_0()); }
		(rule__FunctionArguments__Group_0__0)
		{ after(grammarAccess.getFunctionArgumentsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getNamedArgumentParserRuleCall_1()); }
		ruleNamedArgument
		{ after(grammarAccess.getFunctionArgumentsAccess().getNamedArgumentParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getGroup_0_1_0()); }
		(rule__FunctionArguments__Group_0_1_0__0)
		{ after(grammarAccess.getFunctionArgumentsAccess().getGroup_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getGroup_0_1_1()); }
		(rule__FunctionArguments__Group_0_1_1__0)
		{ after(grammarAccess.getFunctionArgumentsAccess().getGroup_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubscriptAccess().getAllAssignment_0()); }
		(rule__Subscript__AllAssignment_0)
		{ after(grammarAccess.getSubscriptAccess().getAllAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubscriptAccess().getExpressionParserRuleCall_1()); }
		ruleExpression
		{ after(grammarAccess.getSubscriptAccess().getExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoredDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoredDefinition__Group__0__Impl
	rule__StoredDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StoredDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoredDefinitionAccess().getGroup_0()); }
	(rule__StoredDefinition__Group_0__0)?
	{ after(grammarAccess.getStoredDefinitionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoredDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoredDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StoredDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoredDefinitionAccess().getGroup_1()); }
	(rule__StoredDefinition__Group_1__0)*
	{ after(grammarAccess.getStoredDefinitionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StoredDefinition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoredDefinition__Group_0__0__Impl
	rule__StoredDefinition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StoredDefinition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoredDefinitionAccess().getWithinKeyword_0_0()); }
	'within'
	{ after(grammarAccess.getStoredDefinitionAccess().getWithinKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoredDefinition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoredDefinition__Group_0__1__Impl
	rule__StoredDefinition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StoredDefinition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoredDefinitionAccess().getWithinAssignment_0_1()); }
	(rule__StoredDefinition__WithinAssignment_0_1)
	{ after(grammarAccess.getStoredDefinitionAccess().getWithinAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoredDefinition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoredDefinition__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StoredDefinition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoredDefinitionAccess().getSemicolonKeyword_0_2()); }
	';'
	{ after(grammarAccess.getStoredDefinitionAccess().getSemicolonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StoredDefinition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoredDefinition__Group_1__0__Impl
	rule__StoredDefinition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StoredDefinition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoredDefinitionAccess().getClassesAssignment_1_0()); }
	(rule__StoredDefinition__ClassesAssignment_1_0)
	{ after(grammarAccess.getStoredDefinitionAccess().getClassesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoredDefinition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoredDefinition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StoredDefinition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoredDefinitionAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getStoredDefinitionAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinitionWithFinal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDefinitionWithFinal__Group__0__Impl
	rule__ClassDefinitionWithFinal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionWithFinal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDefinitionWithFinalAccess().getFinalAssignment_0()); }
	(rule__ClassDefinitionWithFinal__FinalAssignment_0)?
	{ after(grammarAccess.getClassDefinitionWithFinalAccess().getFinalAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionWithFinal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDefinitionWithFinal__Group__1__Impl
	rule__ClassDefinitionWithFinal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionWithFinal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDefinitionWithFinalAccess().getEncapsulatedAssignment_1()); }
	(rule__ClassDefinitionWithFinal__EncapsulatedAssignment_1)?
	{ after(grammarAccess.getClassDefinitionWithFinalAccess().getEncapsulatedAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionWithFinal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDefinitionWithFinal__Group__2__Impl
	rule__ClassDefinitionWithFinal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionWithFinal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDefinitionWithFinalAccess().getClassPrefixesParserRuleCall_2()); }
	ruleClassPrefixes
	{ after(grammarAccess.getClassDefinitionWithFinalAccess().getClassPrefixesParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionWithFinal__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDefinitionWithFinal__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionWithFinal__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDefinitionWithFinalAccess().getClassSpecifierParserRuleCall_3()); }
	ruleClassSpecifier
	{ after(grammarAccess.getClassDefinitionWithFinalAccess().getClassSpecifierParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDefinition__Group__0__Impl
	rule__ClassDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDefinitionAccess().getEncapsulatedAssignment_0()); }
	(rule__ClassDefinition__EncapsulatedAssignment_0)?
	{ after(grammarAccess.getClassDefinitionAccess().getEncapsulatedAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDefinition__Group__1__Impl
	rule__ClassDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDefinitionAccess().getClassPrefixesParserRuleCall_1()); }
	ruleClassPrefixes
	{ after(grammarAccess.getClassDefinitionAccess().getClassPrefixesParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDefinitionAccess().getClassSpecifierParserRuleCall_2()); }
	ruleClassSpecifier
	{ after(grammarAccess.getClassDefinitionAccess().getClassSpecifierParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassPrefixes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group__0__Impl
	rule__ClassPrefixes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getPartialKeyword_0()); }
	('partial')?
	{ after(grammarAccess.getClassPrefixesAccess().getPartialKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getAlternatives_1()); }
	(rule__ClassPrefixes__Alternatives_1)
	{ after(grammarAccess.getClassPrefixesAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassPrefixes__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_2__0__Impl
	rule__ClassPrefixes__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getOperatorKeyword_1_2_0()); }
	('operator')?
	{ after(grammarAccess.getClassPrefixesAccess().getOperatorKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getRecordKeyword_1_2_1()); }
	'record'
	{ after(grammarAccess.getClassPrefixesAccess().getRecordKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassPrefixes__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_4__0__Impl
	rule__ClassPrefixes__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getExpandableKeyword_1_4_0()); }
	('expandable')?
	{ after(grammarAccess.getClassPrefixesAccess().getExpandableKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getConnectorKeyword_1_4_1()); }
	'connector'
	{ after(grammarAccess.getClassPrefixesAccess().getConnectorKeyword_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassPrefixes__Group_1_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_7__0__Impl
	rule__ClassPrefixes__Group_1_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getAlternatives_1_7_0()); }
	(rule__ClassPrefixes__Alternatives_1_7_0)?
	{ after(grammarAccess.getClassPrefixesAccess().getAlternatives_1_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_7__1__Impl
	rule__ClassPrefixes__Group_1_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getOperatorKeyword_1_7_1()); }
	('operator')?
	{ after(grammarAccess.getClassPrefixesAccess().getOperatorKeyword_1_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassPrefixes__Group_1_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassPrefixes__Group_1_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassPrefixesAccess().getFunctionKeyword_1_7_2()); }
	'function'
	{ after(grammarAccess.getClassPrefixesAccess().getFunctionKeyword_1_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassSpecifier__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSpecifier__Group_0__0__Impl
	rule__ClassSpecifier__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSpecifierAccess().getNameAssignment_0_0()); }
	(rule__ClassSpecifier__NameAssignment_0_0)
	{ after(grammarAccess.getClassSpecifierAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSpecifier__Group_0__1__Impl
	rule__ClassSpecifier__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSpecifierAccess().getStr_commentAssignment_0_1()); }
	(rule__ClassSpecifier__Str_commentAssignment_0_1)
	{ after(grammarAccess.getClassSpecifierAccess().getStr_commentAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSpecifier__Group_0__2__Impl
	rule__ClassSpecifier__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSpecifierAccess().getCompositionAssignment_0_2()); }
	(rule__ClassSpecifier__CompositionAssignment_0_2)
	{ after(grammarAccess.getClassSpecifierAccess().getCompositionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSpecifier__Group_0__3__Impl
	rule__ClassSpecifier__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSpecifierAccess().getEndKeyword_0_3()); }
	'end'
	{ after(grammarAccess.getClassSpecifierAccess().getEndKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSpecifier__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSpecifierAccess().getName_endAssignment_0_4()); }
	(rule__ClassSpecifier__Name_endAssignment_0_4)
	{ after(grammarAccess.getClassSpecifierAccess().getName_endAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassSpecifier__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSpecifier__Group_1__0__Impl
	rule__ClassSpecifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSpecifierAccess().getNameAssignment_1_0()); }
	(rule__ClassSpecifier__NameAssignment_1_0)
	{ after(grammarAccess.getClassSpecifierAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSpecifier__Group_1__1__Impl
	rule__ClassSpecifier__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSpecifierAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getClassSpecifierAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSpecifier__Group_1__2__Impl
	rule__ClassSpecifier__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSpecifierAccess().getPrefixAssignment_1_2()); }
	(rule__ClassSpecifier__PrefixAssignment_1_2)
	{ after(grammarAccess.getClassSpecifierAccess().getPrefixAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSpecifier__Group_1__3__Impl
	rule__ClassSpecifier__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSpecifierAccess().getName2Assignment_1_3()); }
	(rule__ClassSpecifier__Name2Assignment_1_3)
	{ after(grammarAccess.getClassSpecifierAccess().getName2Assignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSpecifier__Group_1__4__Impl
	rule__ClassSpecifier__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSpecifierAccess().getSubsAssignment_1_4()); }
	(rule__ClassSpecifier__SubsAssignment_1_4)?
	{ after(grammarAccess.getClassSpecifierAccess().getSubsAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSpecifier__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSpecifierAccess().getModAssignment_1_5()); }
	(rule__ClassSpecifier__ModAssignment_1_5)?
	{ after(grammarAccess.getClassSpecifierAccess().getModAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumList__Group__0__Impl
	rule__EnumList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumListAccess().getEnumsAssignment_0()); }
	(rule__EnumList__EnumsAssignment_0)
	{ after(grammarAccess.getEnumListAccess().getEnumsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumListAccess().getGroup_1()); }
	(rule__EnumList__Group_1__0)*
	{ after(grammarAccess.getEnumListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumList__Group_1__0__Impl
	rule__EnumList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getEnumListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumListAccess().getEnumsAssignment_1_1()); }
	(rule__EnumList__EnumsAssignment_1_1)
	{ after(grammarAccess.getEnumListAccess().getEnumsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationLiteral__Group__0__Impl
	rule__EnumerationLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationLiteralAccess().getIdAssignment_0()); }
	(rule__EnumerationLiteral__IdAssignment_0)
	{ after(grammarAccess.getEnumerationLiteralAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationLiteralAccess().getCommentAssignment_1()); }
	(rule__EnumerationLiteral__CommentAssignment_1)
	{ after(grammarAccess.getEnumerationLiteralAccess().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__0__Impl
	rule__Composition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getPriv_elistAssignment_0()); }
	(rule__Composition__Priv_elistAssignment_0)
	{ after(grammarAccess.getCompositionAccess().getPriv_elistAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__1__Impl
	rule__Composition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getAlternatives_1()); }
	(rule__Composition__Alternatives_1)*
	{ after(grammarAccess.getCompositionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__2__Impl
	rule__Composition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_2()); }
	(rule__Composition__Group_2__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_3()); }
	(rule__Composition__Group_3__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_1_0__0__Impl
	rule__Composition__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getPublicKeyword_1_0_0()); }
	'public'
	{ after(grammarAccess.getCompositionAccess().getPublicKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getPub_elistAssignment_1_0_1()); }
	(rule__Composition__Pub_elistAssignment_1_0_1)
	{ after(grammarAccess.getCompositionAccess().getPub_elistAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_1_1__0__Impl
	rule__Composition__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getProtectedKeyword_1_1_0()); }
	'protected'
	{ after(grammarAccess.getCompositionAccess().getProtectedKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getProtected_elistAssignment_1_1_1()); }
	(rule__Composition__Protected_elistAssignment_1_1_1)
	{ after(grammarAccess.getCompositionAccess().getProtected_elistAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_2__0__Impl
	rule__Composition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getExternalKeyword_2_0()); }
	'external'
	{ after(grammarAccess.getCompositionAccess().getExternalKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_2__1__Impl
	rule__Composition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getExt_lang_specAssignment_2_1()); }
	(rule__Composition__Ext_lang_specAssignment_2_1)?
	{ after(grammarAccess.getCompositionAccess().getExt_lang_specAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_2__2__Impl
	rule__Composition__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getExt_func_callAssignment_2_2()); }
	(rule__Composition__Ext_func_callAssignment_2_2)?
	{ after(grammarAccess.getCompositionAccess().getExt_func_callAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_2__3__Impl
	rule__Composition__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getExt_annoAssignment_2_3()); }
	(rule__Composition__Ext_annoAssignment_2_3)?
	{ after(grammarAccess.getCompositionAccess().getExt_annoAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getSemicolonKeyword_2_4()); }
	';'
	{ after(grammarAccess.getCompositionAccess().getSemicolonKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_3__0__Impl
	rule__Composition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getAnnoAssignment_3_0()); }
	(rule__Composition__AnnoAssignment_3_0)
	{ after(grammarAccess.getCompositionAccess().getAnnoAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getCompositionAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalFunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunctionCall__Group__0__Impl
	rule__ExternalFunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionCallAccess().getGroup_0()); }
	(rule__ExternalFunctionCall__Group_0__0)?
	{ after(grammarAccess.getExternalFunctionCallAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunctionCall__Group__1__Impl
	rule__ExternalFunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionCallAccess().getNameAssignment_1()); }
	(rule__ExternalFunctionCall__NameAssignment_1)
	{ after(grammarAccess.getExternalFunctionCallAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunctionCall__Group__2__Impl
	rule__ExternalFunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionCallAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getExternalFunctionCallAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunctionCall__Group__3__Impl
	rule__ExternalFunctionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionCallAccess().getArgsAssignment_3()); }
	(rule__ExternalFunctionCall__ArgsAssignment_3)?
	{ after(grammarAccess.getExternalFunctionCallAccess().getArgsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunctionCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionCallAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getExternalFunctionCallAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalFunctionCall__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunctionCall__Group_0__0__Impl
	rule__ExternalFunctionCall__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionCallAccess().getLhsAssignment_0_0()); }
	(rule__ExternalFunctionCall__LhsAssignment_0_0)
	{ after(grammarAccess.getExternalFunctionCallAccess().getLhsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalFunctionCall__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalFunctionCallAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getExternalFunctionCallAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__0__Impl
	rule__ElementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getElementListAction_0()); }
	()
	{ after(grammarAccess.getElementListAccess().getElementListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getGroup_1()); }
	(rule__ElementList__Group_1__0)*
	{ after(grammarAccess.getElementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__0__Impl
	rule__ElementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getElemAssignment_1_0()); }
	(rule__ElementList__ElemAssignment_1_0)
	{ after(grammarAccess.getElementListAccess().getElemAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getElementListAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__0__Impl
	rule__Element__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getRedeclareKeyword_2_0()); }
	('redeclare')?
	{ after(grammarAccess.getElementAccess().getRedeclareKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__1__Impl
	rule__Element__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getFinalKeyword_2_1()); }
	('final')?
	{ after(grammarAccess.getElementAccess().getFinalKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__2__Impl
	rule__Element__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getInnerKeyword_2_2()); }
	('inner')?
	{ after(grammarAccess.getElementAccess().getInnerKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__3__Impl
	rule__Element__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getOuterKeyword_2_3()); }
	('outer')?
	{ after(grammarAccess.getElementAccess().getOuterKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getAlternatives_2_4()); }
	(rule__Element__Alternatives_2_4)
	{ after(grammarAccess.getElementAccess().getAlternatives_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2_4_1__0__Impl
	rule__Element__Group_2_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getReplaceableKeyword_2_4_1_0()); }
	'replaceable'
	{ after(grammarAccess.getElementAccess().getReplaceableKeyword_2_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_2_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getAlternatives_2_4_1_1()); }
	(rule__Element__Alternatives_2_4_1_1)
	{ after(grammarAccess.getElementAccess().getAlternatives_2_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group__0__Impl
	rule__ImportClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportClauseAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group__1__Impl
	rule__ImportClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getAlternatives_1()); }
	(rule__ImportClause__Alternatives_1)
	{ after(grammarAccess.getImportClauseAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getCommentAssignment_2()); }
	(rule__ImportClause__CommentAssignment_2)
	{ after(grammarAccess.getImportClauseAccess().getCommentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_0__0__Impl
	rule__ImportClause__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getIdAssignment_1_0_0()); }
	(rule__ImportClause__IdAssignment_1_0_0)
	{ after(grammarAccess.getImportClauseAccess().getIdAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_0__1__Impl
	rule__ImportClause__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getEqualsSignKeyword_1_0_1()); }
	'='
	{ after(grammarAccess.getImportClauseAccess().getEqualsSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getNameAssignment_1_0_2()); }
	(rule__ImportClause__NameAssignment_1_0_2)
	{ after(grammarAccess.getImportClauseAccess().getNameAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1__0__Impl
	rule__ImportClause__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getNameParserRuleCall_1_1_0()); }
	ruleName
	{ after(grammarAccess.getImportClauseAccess().getNameParserRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getGroup_1_1_1()); }
	(rule__ImportClause__Group_1_1_1__0)?
	{ after(grammarAccess.getImportClauseAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1_1__0__Impl
	rule__ImportClause__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getCommaKeyword_1_1_1_0()); }
	(',')?
	{ after(grammarAccess.getImportClauseAccess().getCommaKeyword_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getAlternatives_1_1_1_1()); }
	(rule__ImportClause__Alternatives_1_1_1_1)
	{ after(grammarAccess.getImportClauseAccess().getAlternatives_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group_1_1_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1_1_1_1__0__Impl
	rule__ImportClause__Group_1_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getLeftParenthesisKeyword_1_1_1_1_1_0()); }
	'('
	{ after(grammarAccess.getImportClauseAccess().getLeftParenthesisKeyword_1_1_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1_1_1_1__1__Impl
	rule__ImportClause__Group_1_1_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getListAssignment_1_1_1_1_1_1()); }
	(rule__ImportClause__ListAssignment_1_1_1_1_1_1)
	{ after(grammarAccess.getImportClauseAccess().getListAssignment_1_1_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_1_1_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_1_1_1_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getRightParenthesisKeyword_1_1_1_1_1_2()); }
	')'
	{ after(grammarAccess.getImportClauseAccess().getRightParenthesisKeyword_1_1_1_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportList__Group__0__Impl
	rule__ImportList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportListAccess().getIdAssignment_0()); }
	(rule__ImportList__IdAssignment_0)
	{ after(grammarAccess.getImportListAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportListAccess().getGroup_1()); }
	(rule__ImportList__Group_1__0)?
	{ after(grammarAccess.getImportListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportList__Group_1__0__Impl
	rule__ImportList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getImportListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportListAccess().getListAssignment_1_1()); }
	(rule__ImportList__ListAssignment_1_1)
	{ after(grammarAccess.getImportListAccess().getListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendsClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsClause__Group__0__Impl
	rule__ExtendsClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsClauseAccess().getExtendsKeyword_0()); }
	'extends'
	{ after(grammarAccess.getExtendsClauseAccess().getExtendsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsClause__Group__1__Impl
	rule__ExtendsClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsClauseAccess().getNameAssignment_1()); }
	(rule__ExtendsClause__NameAssignment_1)
	{ after(grammarAccess.getExtendsClauseAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsClause__Group__2__Impl
	rule__ExtendsClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsClauseAccess().getModAssignment_2()); }
	(rule__ExtendsClause__ModAssignment_2)?
	{ after(grammarAccess.getExtendsClauseAccess().getModAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsClauseAccess().getAnnoAssignment_3()); }
	(rule__ExtendsClause__AnnoAssignment_3)?
	{ after(grammarAccess.getExtendsClauseAccess().getAnnoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstrainingClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainingClause__Group__0__Impl
	rule__ConstrainingClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainingClauseAccess().getConstrainedbyKeyword_0()); }
	'constrainedby'
	{ after(grammarAccess.getConstrainingClauseAccess().getConstrainedbyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainingClause__Group__1__Impl
	rule__ConstrainingClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainingClauseAccess().getNameAssignment_1()); }
	(rule__ConstrainingClause__NameAssignment_1)
	{ after(grammarAccess.getConstrainingClauseAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstrainingClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstrainingClauseAccess().getModAssignment_2()); }
	(rule__ConstrainingClause__ModAssignment_2)?
	{ after(grammarAccess.getConstrainingClauseAccess().getModAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause__Group__0__Impl
	rule__ComponentClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClauseAccess().getPrefixAssignment_0()); }
	(rule__ComponentClause__PrefixAssignment_0)
	{ after(grammarAccess.getComponentClauseAccess().getPrefixAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause__Group__1__Impl
	rule__ComponentClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClauseAccess().getTypeAssignment_1()); }
	(rule__ComponentClause__TypeAssignment_1)
	{ after(grammarAccess.getComponentClauseAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause__Group__2__Impl
	rule__ComponentClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClauseAccess().getSubsAssignment_2()); }
	(rule__ComponentClause__SubsAssignment_2)?
	{ after(grammarAccess.getComponentClauseAccess().getSubsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClauseAccess().getCompsAssignment_3()); }
	(rule__ComponentClause__CompsAssignment_3)
	{ after(grammarAccess.getComponentClauseAccess().getCompsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypePrefix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePrefix__Group__0__Impl
	rule__TypePrefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePrefixAccess().getAlternatives_0()); }
	(rule__TypePrefix__Alternatives_0)?
	{ after(grammarAccess.getTypePrefixAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePrefix__Group__1__Impl
	rule__TypePrefix__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePrefixAccess().getAlternatives_1()); }
	(rule__TypePrefix__Alternatives_1)?
	{ after(grammarAccess.getTypePrefixAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypePrefix__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePrefix__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePrefixAccess().getAlternatives_2()); }
	(rule__TypePrefix__Alternatives_2)?
	{ after(grammarAccess.getTypePrefixAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentList__Group__0__Impl
	rule__ComponentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentListAccess().getCompsAssignment_0()); }
	(rule__ComponentList__CompsAssignment_0)
	{ after(grammarAccess.getComponentListAccess().getCompsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentListAccess().getGroup_1()); }
	(rule__ComponentList__Group_1__0)*
	{ after(grammarAccess.getComponentListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentList__Group_1__0__Impl
	rule__ComponentList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getComponentListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentListAccess().getCompsAssignment_1_1()); }
	(rule__ComponentList__CompsAssignment_1_1)
	{ after(grammarAccess.getComponentListAccess().getCompsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDeclaration__Group__0__Impl
	rule__ComponentDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDeclarationAccess().getDeclAssignment_0()); }
	(rule__ComponentDeclaration__DeclAssignment_0)
	{ after(grammarAccess.getComponentDeclarationAccess().getDeclAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDeclaration__Group__1__Impl
	rule__ComponentDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDeclarationAccess().getCondAssignment_1()); }
	(rule__ComponentDeclaration__CondAssignment_1)?
	{ after(grammarAccess.getComponentDeclarationAccess().getCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDeclarationAccess().getCommentAssignment_2()); }
	(rule__ComponentDeclaration__CommentAssignment_2)
	{ after(grammarAccess.getComponentDeclarationAccess().getCommentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionAttribute__Group__0__Impl
	rule__ConditionAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAttributeAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getConditionAttributeAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionAttribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAttributeAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
	{ after(grammarAccess.getConditionAttributeAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getNameAssignment_0()); }
	(rule__Declaration__NameAssignment_0)
	{ after(grammarAccess.getDeclarationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getSubscriptsAssignment_1()); }
	(rule__Declaration__SubscriptsAssignment_1)?
	{ after(grammarAccess.getDeclarationAccess().getSubscriptsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getModAssignment_2()); }
	(rule__Declaration__ModAssignment_2)?
	{ after(grammarAccess.getDeclarationAccess().getModAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_0__0__Impl
	rule__Modification__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getModAssignment_0_0()); }
	(rule__Modification__ModAssignment_0_0)
	{ after(grammarAccess.getModificationAccess().getModAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getGroup_0_1()); }
	(rule__Modification__Group_0_1__0)?
	{ after(grammarAccess.getModificationAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_0_1__0__Impl
	rule__Modification__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getEqualsSignKeyword_0_1_0()); }
	'='
	{ after(grammarAccess.getModificationAccess().getEqualsSignKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getExprAssignment_0_1_1()); }
	(rule__Modification__ExprAssignment_0_1_1)
	{ after(grammarAccess.getModificationAccess().getExprAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_1__0__Impl
	rule__Modification__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getEqualsSignKeyword_1_0()); }
	'='
	{ after(grammarAccess.getModificationAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getExprAssignment_1_1()); }
	(rule__Modification__ExprAssignment_1_1)
	{ after(grammarAccess.getModificationAccess().getExprAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_2__0__Impl
	rule__Modification__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getColonEqualsSignKeyword_2_0()); }
	':='
	{ after(grammarAccess.getModificationAccess().getColonEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modification__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModificationAccess().getExprAssignment_2_1()); }
	(rule__Modification__ExprAssignment_2_1)
	{ after(grammarAccess.getModificationAccess().getExprAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassModification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassModification__Group__0__Impl
	rule__ClassModification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassModificationAccess().getClassModificationAction_0()); }
	()
	{ after(grammarAccess.getClassModificationAccess().getClassModificationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassModification__Group__1__Impl
	rule__ClassModification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassModificationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getClassModificationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassModification__Group__2__Impl
	rule__ClassModification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassModificationAccess().getArgsAssignment_2()); }
	(rule__ClassModification__ArgsAssignment_2)?
	{ after(grammarAccess.getClassModificationAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassModification__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassModificationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getClassModificationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group__0__Impl
	rule__ArgumentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getArgsAssignment_0()); }
	(rule__ArgumentList__ArgsAssignment_0)
	{ after(grammarAccess.getArgumentListAccess().getArgsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getGroup_1()); }
	(rule__ArgumentList__Group_1__0)*
	{ after(grammarAccess.getArgumentListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1__0__Impl
	rule__ArgumentList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getArgumentListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getArgsAssignment_1_1()); }
	(rule__ArgumentList__ArgsAssignment_1_1)
	{ after(grammarAccess.getArgumentListAccess().getArgsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementModicationOrReplaceable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementModicationOrReplaceable__Group__0__Impl
	rule__ElementModicationOrReplaceable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModicationOrReplaceable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementModicationOrReplaceableAccess().getEachKeyword_0()); }
	('each')?
	{ after(grammarAccess.getElementModicationOrReplaceableAccess().getEachKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModicationOrReplaceable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementModicationOrReplaceable__Group__1__Impl
	rule__ElementModicationOrReplaceable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModicationOrReplaceable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementModicationOrReplaceableAccess().getFinalKeyword_1()); }
	('final')?
	{ after(grammarAccess.getElementModicationOrReplaceableAccess().getFinalKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModicationOrReplaceable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementModicationOrReplaceable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModicationOrReplaceable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementModicationOrReplaceableAccess().getAlternatives_2()); }
	(rule__ElementModicationOrReplaceable__Alternatives_2)
	{ after(grammarAccess.getElementModicationOrReplaceableAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementModification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementModification__Group__0__Impl
	rule__ElementModification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementModificationAccess().getNameAssignment_0()); }
	(rule__ElementModification__NameAssignment_0)
	{ after(grammarAccess.getElementModificationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementModification__Group__1__Impl
	rule__ElementModification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementModificationAccess().getModAssignment_1()); }
	(rule__ElementModification__ModAssignment_1)?
	{ after(grammarAccess.getElementModificationAccess().getModAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementModification__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementModificationAccess().getCommentAssignment_2()); }
	(rule__ElementModification__CommentAssignment_2)
	{ after(grammarAccess.getElementModificationAccess().getCommentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementRedeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementRedeclaration__Group__0__Impl
	rule__ElementRedeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementRedeclarationAccess().getRedeclareKeyword_0()); }
	'redeclare'
	{ after(grammarAccess.getElementRedeclarationAccess().getRedeclareKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementRedeclaration__Group__1__Impl
	rule__ElementRedeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementRedeclarationAccess().getEachKeyword_1()); }
	('each')?
	{ after(grammarAccess.getElementRedeclarationAccess().getEachKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementRedeclaration__Group__2__Impl
	rule__ElementRedeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementRedeclarationAccess().getFinalKeyword_2()); }
	('final')?
	{ after(grammarAccess.getElementRedeclarationAccess().getFinalKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementRedeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRedeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementRedeclarationAccess().getAlternatives_3()); }
	(rule__ElementRedeclaration__Alternatives_3)
	{ after(grammarAccess.getElementRedeclarationAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementReplaceable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementReplaceable__Group__0__Impl
	rule__ElementReplaceable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementReplaceableAccess().getReplaceableKeyword_0()); }
	'replaceable'
	{ after(grammarAccess.getElementReplaceableAccess().getReplaceableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementReplaceable__Group__1__Impl
	rule__ElementReplaceable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementReplaceableAccess().getAlternatives_1()); }
	(rule__ElementReplaceable__Alternatives_1)
	{ after(grammarAccess.getElementReplaceableAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementReplaceable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementReplaceableAccess().getConstAssignment_2()); }
	(rule__ElementReplaceable__ConstAssignment_2)?
	{ after(grammarAccess.getElementReplaceableAccess().getConstAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClause1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause1__Group__0__Impl
	rule__ComponentClause1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClause1Access().getPrefixAssignment_0()); }
	(rule__ComponentClause1__PrefixAssignment_0)
	{ after(grammarAccess.getComponentClause1Access().getPrefixAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause1__Group__1__Impl
	rule__ComponentClause1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClause1Access().getTypeAssignment_1()); }
	(rule__ComponentClause1__TypeAssignment_1)
	{ after(grammarAccess.getComponentClause1Access().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentClause1__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentClause1Access().getCompAssignment_2()); }
	(rule__ComponentClause1__CompAssignment_2)
	{ after(grammarAccess.getComponentClause1Access().getCompAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDeclaration1__Group__0__Impl
	rule__ComponentDeclaration1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDeclaration1Access().getDeclarationParserRuleCall_0()); }
	ruleDeclaration
	{ after(grammarAccess.getComponentDeclaration1Access().getDeclarationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentDeclaration1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentDeclaration1Access().getCommentAssignment_1()); }
	(rule__ComponentDeclaration1__CommentAssignment_1)
	{ after(grammarAccess.getComponentDeclaration1Access().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShortClassDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group__0__Impl
	rule__ShortClassDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getClassPrefixesParserRuleCall_0()); }
	ruleClassPrefixes
	{ after(grammarAccess.getShortClassDefinitionAccess().getClassPrefixesParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group__1__Impl
	rule__ShortClassDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getIDENTTerminalRuleCall_1()); }
	RULE_IDENT
	{ after(grammarAccess.getShortClassDefinitionAccess().getIDENTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group__2__Impl
	rule__ShortClassDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getShortClassDefinitionAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getAlternatives_3()); }
	(rule__ShortClassDefinition__Alternatives_3)
	{ after(grammarAccess.getShortClassDefinitionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShortClassDefinition__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group_3_0__0__Impl
	rule__ShortClassDefinition__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getBasePrefixParserRuleCall_3_0_0()); }
	ruleBasePrefix
	{ after(grammarAccess.getShortClassDefinitionAccess().getBasePrefixParserRuleCall_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group_3_0__1__Impl
	rule__ShortClassDefinition__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getNameParserRuleCall_3_0_1()); }
	ruleName
	{ after(grammarAccess.getShortClassDefinitionAccess().getNameParserRuleCall_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group_3_0__2__Impl
	rule__ShortClassDefinition__Group_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getArraySubscriptsParserRuleCall_3_0_2()); }
	(ruleArraySubscripts)?
	{ after(grammarAccess.getShortClassDefinitionAccess().getArraySubscriptsParserRuleCall_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group_3_0__3__Impl
	rule__ShortClassDefinition__Group_3_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getModeAssignment_3_0_3()); }
	(rule__ShortClassDefinition__ModeAssignment_3_0_3)?
	{ after(grammarAccess.getShortClassDefinitionAccess().getModeAssignment_3_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group_3_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getCommentAssignment_3_0_4()); }
	(rule__ShortClassDefinition__CommentAssignment_3_0_4)
	{ after(grammarAccess.getShortClassDefinitionAccess().getCommentAssignment_3_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShortClassDefinition__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group_3_1__0__Impl
	rule__ShortClassDefinition__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getEnumerationKeyword_3_1_0()); }
	'enumeration'
	{ after(grammarAccess.getShortClassDefinitionAccess().getEnumerationKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group_3_1__1__Impl
	rule__ShortClassDefinition__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getLeftParenthesisKeyword_3_1_1()); }
	'('
	{ after(grammarAccess.getShortClassDefinitionAccess().getLeftParenthesisKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group_3_1__2__Impl
	rule__ShortClassDefinition__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getAlternatives_3_1_2()); }
	(rule__ShortClassDefinition__Alternatives_3_1_2)
	{ after(grammarAccess.getShortClassDefinitionAccess().getAlternatives_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group_3_1__3__Impl
	rule__ShortClassDefinition__Group_3_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getRightParenthesisKeyword_3_1_3()); }
	')'
	{ after(grammarAccess.getShortClassDefinitionAccess().getRightParenthesisKeyword_3_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortClassDefinition__Group_3_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__Group_3_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortClassDefinitionAccess().getCommentAssignment_3_1_4()); }
	(rule__ShortClassDefinition__CommentAssignment_3_1_4)
	{ after(grammarAccess.getShortClassDefinitionAccess().getCommentAssignment_3_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationSection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationSection__Group__0__Impl
	rule__EquationSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationSectionAccess().getInitialAssignment_0()); }
	(rule__EquationSection__InitialAssignment_0)?
	{ after(grammarAccess.getEquationSectionAccess().getInitialAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationSection__Group__1__Impl
	rule__EquationSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationSectionAccess().getEquationKeyword_1()); }
	'equation'
	{ after(grammarAccess.getEquationSectionAccess().getEquationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationSection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEquationSectionAccess().getGroup_2()); }
		(rule__EquationSection__Group_2__0)
		{ after(grammarAccess.getEquationSectionAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getEquationSectionAccess().getGroup_2()); }
		(rule__EquationSection__Group_2__0)*
		{ after(grammarAccess.getEquationSectionAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquationSection__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationSection__Group_2__0__Impl
	rule__EquationSection__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationSectionAccess().getEquationsAssignment_2_0()); }
	(rule__EquationSection__EquationsAssignment_2_0)
	{ after(grammarAccess.getEquationSectionAccess().getEquationsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquationSection__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationSectionAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getEquationSectionAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlgorithmSection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSection__Group__0__Impl
	rule__AlgorithmSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmSectionAccess().getInitialAssignment_0()); }
	(rule__AlgorithmSection__InitialAssignment_0)?
	{ after(grammarAccess.getAlgorithmSectionAccess().getInitialAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSection__Group__1__Impl
	rule__AlgorithmSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmSectionAccess().getAlgorithmKeyword_1()); }
	'algorithm'
	{ after(grammarAccess.getAlgorithmSectionAccess().getAlgorithmKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAlgorithmSectionAccess().getGroup_2()); }
		(rule__AlgorithmSection__Group_2__0)
		{ after(grammarAccess.getAlgorithmSectionAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getAlgorithmSectionAccess().getGroup_2()); }
		(rule__AlgorithmSection__Group_2__0)*
		{ after(grammarAccess.getAlgorithmSectionAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlgorithmSection__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSection__Group_2__0__Impl
	rule__AlgorithmSection__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmSectionAccess().getStatementsAssignment_2_0()); }
	(rule__AlgorithmSection__StatementsAssignment_2_0)
	{ after(grammarAccess.getAlgorithmSectionAccess().getStatementsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlgorithmSection__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmSectionAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getAlgorithmSectionAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__0__Impl
	rule__Equation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getAlternatives_0()); }
	(rule__Equation__Alternatives_0)
	{ after(grammarAccess.getEquationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getCommmentAssignment_1()); }
	(rule__Equation__CommmentAssignment_1)
	{ after(grammarAccess.getEquationAccess().getCommmentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group_0_0__0__Impl
	rule__Equation__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getLeftAssignment_0_0_0()); }
	(rule__Equation__LeftAssignment_0_0_0)
	{ after(grammarAccess.getEquationAccess().getLeftAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group_0_0__1__Impl
	rule__Equation__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getEqualsSignKeyword_0_0_1()); }
	'='
	{ after(grammarAccess.getEquationAccess().getEqualsSignKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equation__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquationAccess().getRightAssignment_0_0_2()); }
	(rule__Equation__RightAssignment_0_0_2)
	{ after(grammarAccess.getEquationAccess().getRightAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getAlternatives_0()); }
	(rule__Statement__Alternatives_0)
	{ after(grammarAccess.getStatementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getCommentAssignment_1()); }
	(rule__Statement__CommentAssignment_1)
	{ after(grammarAccess.getStatementAccess().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_0__0__Impl
	rule__Statement__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftAssignment_0_0_0()); }
	(rule__Statement__LeftAssignment_0_0_0)
	{ after(grammarAccess.getStatementAccess().getLeftAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getGroup_0_0_1()); }
	(rule__Statement__Group_0_0_1__0)
	{ after(grammarAccess.getStatementAccess().getGroup_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_0_1__0__Impl
	rule__Statement__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getColonEqualsSignKeyword_0_0_1_0()); }
	':='
	{ after(grammarAccess.getStatementAccess().getColonEqualsSignKeyword_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightAssignment_0_0_1_1()); }
	(rule__Statement__RightAssignment_0_0_1_1)
	{ after(grammarAccess.getStatementAccess().getRightAssignment_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_1__0__Impl
	rule__Statement__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_0_1_0()); }
	'('
	{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_1__1__Impl
	rule__Statement__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftAssignment_0_1_1()); }
	(rule__Statement__LeftAssignment_0_1_1)
	{ after(grammarAccess.getStatementAccess().getLeftAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_1__2__Impl
	rule__Statement__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_0_1_2()); }
	')'
	{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_1__3__Impl
	rule__Statement__Group_0_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getColonEqualsSignKeyword_0_1_3()); }
	':='
	{ after(grammarAccess.getStatementAccess().getColonEqualsSignKeyword_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_1__4__Impl
	rule__Statement__Group_0_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRefAssignment_0_1_4()); }
	(rule__Statement__RefAssignment_0_1_4)
	{ after(grammarAccess.getStatementAccess().getRefAssignment_0_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRef_callAssignment_0_1_5()); }
	(rule__Statement__Ref_callAssignment_0_1_5)
	{ after(grammarAccess.getStatementAccess().getRef_callAssignment_0_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfEquation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group__0__Impl
	rule__IfEquation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfEquationAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group__1__Impl
	rule__IfEquation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getIf_exprAssignment_1()); }
	(rule__IfEquation__If_exprAssignment_1)
	{ after(grammarAccess.getIfEquationAccess().getIf_exprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group__2__Impl
	rule__IfEquation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfEquationAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group__3__Impl
	rule__IfEquation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getGroup_3()); }
	(rule__IfEquation__Group_3__0)*
	{ after(grammarAccess.getIfEquationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group__4__Impl
	rule__IfEquation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getGroup_4()); }
	(rule__IfEquation__Group_4__0)*
	{ after(grammarAccess.getIfEquationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group__5__Impl
	rule__IfEquation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getGroup_5()); }
	(rule__IfEquation__Group_5__0)?
	{ after(grammarAccess.getIfEquationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group__6__Impl
	rule__IfEquation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getEndKeyword_6()); }
	'end'
	{ after(grammarAccess.getIfEquationAccess().getEndKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getIfKeyword_7()); }
	'if'
	{ after(grammarAccess.getIfEquationAccess().getIfKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfEquation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group_3__0__Impl
	rule__IfEquation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getIf_eqsAssignment_3_0()); }
	(rule__IfEquation__If_eqsAssignment_3_0)
	{ after(grammarAccess.getIfEquationAccess().getIf_eqsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getIfEquationAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfEquation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group_4__0__Impl
	rule__IfEquation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getElseifKeyword_4_0()); }
	'elseif'
	{ after(grammarAccess.getIfEquationAccess().getElseifKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group_4__1__Impl
	rule__IfEquation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getElsif_exprsAssignment_4_1()); }
	(rule__IfEquation__Elsif_exprsAssignment_4_1)
	{ after(grammarAccess.getIfEquationAccess().getElsif_exprsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group_4__2__Impl
	rule__IfEquation__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getThenKeyword_4_2()); }
	'then'
	{ after(grammarAccess.getIfEquationAccess().getThenKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getGroup_4_3()); }
	(rule__IfEquation__Group_4_3__0)*
	{ after(grammarAccess.getIfEquationAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfEquation__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group_4_3__0__Impl
	rule__IfEquation__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getElseif_eqsAssignment_4_3_0()); }
	(rule__IfEquation__Elseif_eqsAssignment_4_3_0)
	{ after(grammarAccess.getIfEquationAccess().getElseif_eqsAssignment_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getSemicolonKeyword_4_3_1()); }
	';'
	{ after(grammarAccess.getIfEquationAccess().getSemicolonKeyword_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfEquation__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group_5__0__Impl
	rule__IfEquation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getElseKeyword_5_0()); }
	'else'
	{ after(grammarAccess.getIfEquationAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getGroup_5_1()); }
	(rule__IfEquation__Group_5_1__0)*
	{ after(grammarAccess.getIfEquationAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfEquation__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group_5_1__0__Impl
	rule__IfEquation__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getElse_eqsAssignment_5_1_0()); }
	(rule__IfEquation__Else_eqsAssignment_5_1_0)
	{ after(grammarAccess.getIfEquationAccess().getElse_eqsAssignment_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfEquation__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfEquationAccess().getSemicolonKeyword_5_1_1()); }
	';'
	{ after(grammarAccess.getIfEquationAccess().getSemicolonKeyword_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIf_exprAssignment_1()); }
	(rule__IfStatement__If_exprAssignment_1)
	{ after(grammarAccess.getIfStatementAccess().getIf_exprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfStatementAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_3()); }
	(rule__IfStatement__Group_3__0)*
	{ after(grammarAccess.getIfStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_4()); }
	(rule__IfStatement__Group_4__0)*
	{ after(grammarAccess.getIfStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__5__Impl
	rule__IfStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_5()); }
	(rule__IfStatement__Group_5__0)?
	{ after(grammarAccess.getIfStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__6__Impl
	rule__IfStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getEndKeyword_6()); }
	'end'
	{ after(grammarAccess.getIfStatementAccess().getEndKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_7()); }
	'if'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_3__0__Impl
	rule__IfStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIf_stmtsAssignment_3_0()); }
	(rule__IfStatement__If_stmtsAssignment_3_0)
	{ after(grammarAccess.getIfStatementAccess().getIf_stmtsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getIfStatementAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__0__Impl
	rule__IfStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseifKeyword_4_0()); }
	'elseif'
	{ after(grammarAccess.getIfStatementAccess().getElseifKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__1__Impl
	rule__IfStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseif_exprsAssignment_4_1()); }
	(rule__IfStatement__Elseif_exprsAssignment_4_1)
	{ after(grammarAccess.getIfStatementAccess().getElseif_exprsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__2__Impl
	rule__IfStatement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getThenKeyword_4_2()); }
	'then'
	{ after(grammarAccess.getIfStatementAccess().getThenKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_4_3()); }
	(rule__IfStatement__Group_4_3__0)*
	{ after(grammarAccess.getIfStatementAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4_3__0__Impl
	rule__IfStatement__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseif_stmtsAssignment_4_3_0()); }
	(rule__IfStatement__Elseif_stmtsAssignment_4_3_0)
	{ after(grammarAccess.getIfStatementAccess().getElseif_stmtsAssignment_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getSemicolonKeyword_4_3_1()); }
	';'
	{ after(grammarAccess.getIfStatementAccess().getSemicolonKeyword_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_5__0__Impl
	rule__IfStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
	'else'
	{ after(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_5_1()); }
	(rule__IfStatement__Group_5_1__0)*
	{ after(grammarAccess.getIfStatementAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_5_1__0__Impl
	rule__IfStatement__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElse_stmtsAssignment_5_1_0()); }
	(rule__IfStatement__Else_stmtsAssignment_5_1_0)
	{ after(grammarAccess.getIfStatementAccess().getElse_stmtsAssignment_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getSemicolonKeyword_5_1_1()); }
	';'
	{ after(grammarAccess.getIfStatementAccess().getSemicolonKeyword_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForEquation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEquation__Group__0__Impl
	rule__ForEquation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEquationAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForEquationAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEquation__Group__1__Impl
	rule__ForEquation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEquationAccess().getIndicesAssignment_1()); }
	(rule__ForEquation__IndicesAssignment_1)
	{ after(grammarAccess.getForEquationAccess().getIndicesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEquation__Group__2__Impl
	rule__ForEquation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEquationAccess().getLoopKeyword_2()); }
	'loop'
	{ after(grammarAccess.getForEquationAccess().getLoopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEquation__Group__3__Impl
	rule__ForEquation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEquationAccess().getGroup_3()); }
	(rule__ForEquation__Group_3__0)*
	{ after(grammarAccess.getForEquationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEquation__Group__4__Impl
	rule__ForEquation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEquationAccess().getEndKeyword_4()); }
	'end'
	{ after(grammarAccess.getForEquationAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEquation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEquationAccess().getForKeyword_5()); }
	'for'
	{ after(grammarAccess.getForEquationAccess().getForKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForEquation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEquation__Group_3__0__Impl
	rule__ForEquation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEquationAccess().getEqsAssignment_3_0()); }
	(rule__ForEquation__EqsAssignment_3_0)
	{ after(grammarAccess.getForEquationAccess().getEqsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEquation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEquationAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getForEquationAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForStatementAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getIndicesAssignment_1()); }
	(rule__ForStatement__IndicesAssignment_1)
	{ after(grammarAccess.getForStatementAccess().getIndicesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getLoopKeyword_2()); }
	'loop'
	{ after(grammarAccess.getForStatementAccess().getLoopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getGroup_3()); }
	(rule__ForStatement__Group_3__0)*
	{ after(grammarAccess.getForStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__4__Impl
	rule__ForStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getEndKeyword_4()); }
	'end'
	{ after(grammarAccess.getForStatementAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getForKeyword_5()); }
	'for'
	{ after(grammarAccess.getForStatementAccess().getForKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group_3__0__Impl
	rule__ForStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getStmtsAssignment_3_0()); }
	(rule__ForStatement__StmtsAssignment_3_0)
	{ after(grammarAccess.getForStatementAccess().getStmtsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForIndices__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndices__Group__0__Impl
	rule__ForIndices__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndicesAccess().getIndicesAssignment_0()); }
	(rule__ForIndices__IndicesAssignment_0)
	{ after(grammarAccess.getForIndicesAccess().getIndicesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndices__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndicesAccess().getGroup_1()); }
	(rule__ForIndices__Group_1__0)*
	{ after(grammarAccess.getForIndicesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForIndices__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndices__Group_1__0__Impl
	rule__ForIndices__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndicesAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getForIndicesAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndices__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndicesAccess().getIndicesAssignment_1_1()); }
	(rule__ForIndices__IndicesAssignment_1_1)
	{ after(grammarAccess.getForIndicesAccess().getIndicesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForIndex__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndex__Group__0__Impl
	rule__ForIndex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndexAccess().getIdAssignment_0()); }
	(rule__ForIndex__IdAssignment_0)
	{ after(grammarAccess.getForIndexAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndex__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndexAccess().getGroup_1()); }
	(rule__ForIndex__Group_1__0)
	{ after(grammarAccess.getForIndexAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForIndex__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndex__Group_1__0__Impl
	rule__ForIndex__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndexAccess().getInKeyword_1_0()); }
	'in'
	{ after(grammarAccess.getForIndexAccess().getInKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndex__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndexAccess().getExprAssignment_1_1()); }
	(rule__ForIndex__ExprAssignment_1_1)
	{ after(grammarAccess.getForIndexAccess().getExprAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getCondAssignment_1()); }
	(rule__WhileStatement__CondAssignment_1)
	{ after(grammarAccess.getWhileStatementAccess().getCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLoopKeyword_2()); }
	'loop'
	{ after(grammarAccess.getWhileStatementAccess().getLoopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getGroup_3()); }
	(rule__WhileStatement__Group_3__0)*
	{ after(grammarAccess.getWhileStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__4__Impl
	rule__WhileStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getEndKeyword_4()); }
	'end'
	{ after(grammarAccess.getWhileStatementAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_5()); }
	'while'
	{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_3__0__Impl
	rule__WhileStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getStmtsAssignment_3_0()); }
	(rule__WhileStatement__StmtsAssignment_3_0)
	{ after(grammarAccess.getWhileStatementAccess().getStmtsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getWhileStatementAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhenEquation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group__0__Impl
	rule__WhenEquation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getWhenKeyword_0()); }
	'when'
	{ after(grammarAccess.getWhenEquationAccess().getWhenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group__1__Impl
	rule__WhenEquation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getWhenAssignment_1()); }
	(rule__WhenEquation__WhenAssignment_1)
	{ after(grammarAccess.getWhenEquationAccess().getWhenAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group__2__Impl
	rule__WhenEquation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getWhenEquationAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group__3__Impl
	rule__WhenEquation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getGroup_3()); }
	(rule__WhenEquation__Group_3__0)*
	{ after(grammarAccess.getWhenEquationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group__4__Impl
	rule__WhenEquation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getGroup_4()); }
	(rule__WhenEquation__Group_4__0)*
	{ after(grammarAccess.getWhenEquationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group__5__Impl
	rule__WhenEquation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getEndKeyword_5()); }
	'end'
	{ after(grammarAccess.getWhenEquationAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getWhenKeyword_6()); }
	'when'
	{ after(grammarAccess.getWhenEquationAccess().getWhenKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhenEquation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group_3__0__Impl
	rule__WhenEquation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getWhen_eqsAssignment_3_0()); }
	(rule__WhenEquation__When_eqsAssignment_3_0)
	{ after(grammarAccess.getWhenEquationAccess().getWhen_eqsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getWhenEquationAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhenEquation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group_4__0__Impl
	rule__WhenEquation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getElsewhenKeyword_4_0()); }
	'elsewhen'
	{ after(grammarAccess.getWhenEquationAccess().getElsewhenKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group_4__1__Impl
	rule__WhenEquation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getElsehwhenAssignment_4_1()); }
	(rule__WhenEquation__ElsehwhenAssignment_4_1)
	{ after(grammarAccess.getWhenEquationAccess().getElsehwhenAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group_4__2__Impl
	rule__WhenEquation__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getThenKeyword_4_2()); }
	'then'
	{ after(grammarAccess.getWhenEquationAccess().getThenKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getGroup_4_3()); }
	(rule__WhenEquation__Group_4_3__0)
	{ after(grammarAccess.getWhenEquationAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhenEquation__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group_4_3__0__Impl
	rule__WhenEquation__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getElsewhen_eqsAssignment_4_3_0()); }
	(rule__WhenEquation__Elsewhen_eqsAssignment_4_3_0)
	{ after(grammarAccess.getWhenEquationAccess().getElsewhen_eqsAssignment_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenEquation__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenEquationAccess().getSemicolonKeyword_4_3_1()); }
	';'
	{ after(grammarAccess.getWhenEquationAccess().getSemicolonKeyword_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhenStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group__0__Impl
	rule__WhenStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getWhenKeyword_0()); }
	'when'
	{ after(grammarAccess.getWhenStatementAccess().getWhenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group__1__Impl
	rule__WhenStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getWhenAssignment_1()); }
	(rule__WhenStatement__WhenAssignment_1)
	{ after(grammarAccess.getWhenStatementAccess().getWhenAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group__2__Impl
	rule__WhenStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getWhenStatementAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group__3__Impl
	rule__WhenStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getGroup_3()); }
	(rule__WhenStatement__Group_3__0)*
	{ after(grammarAccess.getWhenStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group__4__Impl
	rule__WhenStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getGroup_4()); }
	(rule__WhenStatement__Group_4__0)*
	{ after(grammarAccess.getWhenStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group__5__Impl
	rule__WhenStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getEndKeyword_5()); }
	'end'
	{ after(grammarAccess.getWhenStatementAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getWhenKeyword_6()); }
	'when'
	{ after(grammarAccess.getWhenStatementAccess().getWhenKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhenStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group_3__0__Impl
	rule__WhenStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getWhen_stmtsAssignment_3_0()); }
	(rule__WhenStatement__When_stmtsAssignment_3_0)
	{ after(grammarAccess.getWhenStatementAccess().getWhen_stmtsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getWhenStatementAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhenStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group_4__0__Impl
	rule__WhenStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getElsewhenKeyword_4_0()); }
	'elsewhen'
	{ after(grammarAccess.getWhenStatementAccess().getElsewhenKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group_4__1__Impl
	rule__WhenStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getElsehwhenAssignment_4_1()); }
	(rule__WhenStatement__ElsehwhenAssignment_4_1)
	{ after(grammarAccess.getWhenStatementAccess().getElsehwhenAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group_4__2__Impl
	rule__WhenStatement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getThenKeyword_4_2()); }
	'then'
	{ after(grammarAccess.getWhenStatementAccess().getThenKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getGroup_4_3()); }
	(rule__WhenStatement__Group_4_3__0)
	{ after(grammarAccess.getWhenStatementAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhenStatement__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group_4_3__0__Impl
	rule__WhenStatement__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getElsewhen_stmtsAssignment_4_3_0()); }
	(rule__WhenStatement__Elsewhen_stmtsAssignment_4_3_0)
	{ after(grammarAccess.getWhenStatementAccess().getElsewhen_stmtsAssignment_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenStatement__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenStatementAccess().getSemicolonKeyword_4_3_1()); }
	';'
	{ after(grammarAccess.getWhenStatementAccess().getSemicolonKeyword_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConnectClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectClause__Group__0__Impl
	rule__ConnectClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectClauseAccess().getConnectKeyword_0()); }
	'connect'
	{ after(grammarAccess.getConnectClauseAccess().getConnectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectClause__Group__1__Impl
	rule__ConnectClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectClauseAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConnectClauseAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectClause__Group__2__Impl
	rule__ConnectClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectClauseAccess().getLeftAssignment_2()); }
	(rule__ConnectClause__LeftAssignment_2)
	{ after(grammarAccess.getConnectClauseAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectClause__Group__3__Impl
	rule__ConnectClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectClauseAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getConnectClauseAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectClause__Group__4__Impl
	rule__ConnectClause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectClauseAccess().getRightAssignment_4()); }
	(rule__ConnectClause__RightAssignment_4)
	{ after(grammarAccess.getConnectClauseAccess().getRightAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConnectClause__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectClauseAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getConnectClauseAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIfKeyword_1_0()); }
	'if'
	{ after(grammarAccess.getExpressionAccess().getIfKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIfAssignment_1_1()); }
	(rule__Expression__IfAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getIfAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__2__Impl
	rule__Expression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getThenKeyword_1_2()); }
	'then'
	{ after(grammarAccess.getExpressionAccess().getThenKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__3__Impl
	rule__Expression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getThenAssignment_1_3()); }
	(rule__Expression__ThenAssignment_1_3)
	{ after(grammarAccess.getExpressionAccess().getThenAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__4__Impl
	rule__Expression__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1_4()); }
	(rule__Expression__Group_1_4__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__5__Impl
	rule__Expression__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseKeyword_1_5()); }
	'else'
	{ after(grammarAccess.getExpressionAccess().getElseKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseAssignment_1_6()); }
	(rule__Expression__ElseAssignment_1_6)
	{ after(grammarAccess.getExpressionAccess().getElseAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_4__0__Impl
	rule__Expression__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseifKeyword_1_4_0()); }
	'elseif'
	{ after(grammarAccess.getExpressionAccess().getElseifKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_4__1__Impl
	rule__Expression__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseifAssignment_1_4_1()); }
	(rule__Expression__ElseifAssignment_1_4_1)
	{ after(grammarAccess.getExpressionAccess().getElseifAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_4__2__Impl
	rule__Expression__Group_1_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getThenKeyword_1_4_2()); }
	'then'
	{ after(grammarAccess.getExpressionAccess().getThenKeyword_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseifthenAssignment_1_4_3()); }
	(rule__Expression__ElseifthenAssignment_1_4_3)
	{ after(grammarAccess.getExpressionAccess().getElseifthenAssignment_1_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group__0__Impl
	rule__SimpleExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getLogicalExpressionParserRuleCall_0()); }
	ruleLogicalExpression
	{ after(grammarAccess.getSimpleExpressionAccess().getLogicalExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getGroup_1()); }
	(rule__SimpleExpression__Group_1__0)?
	{ after(grammarAccess.getSimpleExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group_1__0__Impl
	rule__SimpleExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getSimpleExpressionAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group_1__1__Impl
	rule__SimpleExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getSimpleExpressionExprsAction_1_1()); }
	()
	{ after(grammarAccess.getSimpleExpressionAccess().getSimpleExpressionExprsAction_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group_1__2__Impl
	rule__SimpleExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getExprsAssignment_1_2()); }
	(rule__SimpleExpression__ExprsAssignment_1_2)
	{ after(grammarAccess.getSimpleExpressionAccess().getExprsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getGroup_1_3()); }
	(rule__SimpleExpression__Group_1_3__0)?
	{ after(grammarAccess.getSimpleExpressionAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpression__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group_1_3__0__Impl
	rule__SimpleExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getColonKeyword_1_3_0()); }
	':'
	{ after(grammarAccess.getSimpleExpressionAccess().getColonKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpression__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExpressionAccess().getExprsAssignment_1_3_1()); }
	(rule__SimpleExpression__ExprsAssignment_1_3_1)
	{ after(grammarAccess.getSimpleExpressionAccess().getExprsAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group__0__Impl
	rule__LogicalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getLogicalTermParserRuleCall_0()); }
	ruleLogicalTerm
	{ after(grammarAccess.getLogicalExpressionAccess().getLogicalTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getGroup_1()); }
	(rule__LogicalExpression__Group_1__0)*
	{ after(grammarAccess.getLogicalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_1__0__Impl
	rule__LogicalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getLogicalExpressionTermsAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalExpressionAccess().getLogicalExpressionTermsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_1__1__Impl
	rule__LogicalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getOrKeyword_1_1()); }
	'or'
	{ after(grammarAccess.getLogicalExpressionAccess().getOrKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalExpressionAccess().getTermsAssignment_1_2()); }
	(rule__LogicalExpression__TermsAssignment_1_2)
	{ after(grammarAccess.getLogicalExpressionAccess().getTermsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalTerm__Group__0__Impl
	rule__LogicalTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalTermAccess().getLogicalFactorParserRuleCall_0()); }
	ruleLogicalFactor
	{ after(grammarAccess.getLogicalTermAccess().getLogicalFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalTermAccess().getGroup_1()); }
	(rule__LogicalTerm__Group_1__0)*
	{ after(grammarAccess.getLogicalTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalTerm__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalTerm__Group_1__0__Impl
	rule__LogicalTerm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalTermAccess().getLogicalFactorFactorsAction_1_0()); }
	()
	{ after(grammarAccess.getLogicalTermAccess().getLogicalFactorFactorsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalTerm__Group_1__1__Impl
	rule__LogicalTerm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalTermAccess().getAndKeyword_1_1()); }
	'and'
	{ after(grammarAccess.getLogicalTermAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalTerm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalTermAccess().getFactorsAssignment_1_2()); }
	(rule__LogicalTerm__FactorsAssignment_1_2)
	{ after(grammarAccess.getLogicalTermAccess().getFactorsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalFactor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalFactor__Group_1__0__Impl
	rule__LogicalFactor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalFactor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalFactorAccess().getNotAssignment_1_0()); }
	(rule__LogicalFactor__NotAssignment_1_0)
	{ after(grammarAccess.getLogicalFactorAccess().getNotAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalFactor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalFactor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalFactor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalFactorAccess().getRelAssignment_1_1()); }
	(rule__LogicalFactor__RelAssignment_1_1)
	{ after(grammarAccess.getLogicalFactorAccess().getRelAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getArithmeticExpressionParserRuleCall_0()); }
	ruleArithmeticExpression
	{ after(grammarAccess.getRelationAccess().getArithmeticExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getGroup_1()); }
	(rule__Relation__Group_1__0)?
	{ after(grammarAccess.getRelationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__0__Impl
	rule__Relation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getRelationAccess().getRelationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__1__Impl
	rule__Relation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRel_opAssignment_1_1()); }
	(rule__Relation__Rel_opAssignment_1_1)
	{ after(grammarAccess.getRelationAccess().getRel_opAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRightAssignment_1_2()); }
	(rule__Relation__RightAssignment_1_2)
	{ after(grammarAccess.getRelationAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group__0__Impl
	rule__ArithmeticExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getNegationParserRuleCall_0()); }
	ruleNegation
	{ after(grammarAccess.getArithmeticExpressionAccess().getNegationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getGroup_1()); }
	(rule__ArithmeticExpression__Group_1__0)*
	{ after(grammarAccess.getArithmeticExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group_1__0__Impl
	rule__ArithmeticExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getArithmeticExpressionTermsAction_1_0()); }
	()
	{ after(grammarAccess.getArithmeticExpressionAccess().getArithmeticExpressionTermsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group_1__1__Impl
	rule__ArithmeticExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getAdd_opAssignment_1_1()); }
	(rule__ArithmeticExpression__Add_opAssignment_1_1)
	{ after(grammarAccess.getArithmeticExpressionAccess().getAdd_opAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticExpressionAccess().getTermsAssignment_1_2()); }
	(rule__ArithmeticExpression__TermsAssignment_1_2)
	{ after(grammarAccess.getArithmeticExpressionAccess().getTermsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Negation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negation__Group_1__0__Impl
	rule__Negation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationAccess().getNeg_opAssignment_1_0()); }
	(rule__Negation__Neg_opAssignment_1_0)
	{ after(grammarAccess.getNegationAccess().getNeg_opAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationAccess().getTermAssignment_1_1()); }
	(rule__Negation__TermAssignment_1_1)
	{ after(grammarAccess.getNegationAccess().getTermAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
	ruleFactor
	{ after(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1()); }
	(rule__Term__Group_1__0)*
	{ after(grammarAccess.getTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getTermFactorsAction_1_0()); }
	()
	{ after(grammarAccess.getTermAccess().getTermFactorsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__1__Impl
	rule__Term__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getMul_opAssignment_1_1()); }
	(rule__Term__Mul_opAssignment_1_1)
	{ after(grammarAccess.getTermAccess().getMul_opAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getFactorsAssignment_1_2()); }
	(rule__Term__FactorsAssignment_1_2)
	{ after(grammarAccess.getTermAccess().getFactorsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__0__Impl
	rule__Factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getGroup_1()); }
	(rule__Factor__Group_1__0)?
	{ after(grammarAccess.getFactorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getFactorBaseAction_1_0()); }
	()
	{ after(grammarAccess.getFactorAccess().getFactorBaseAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__1__Impl
	rule__Factor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getAlternatives_1_1()); }
	(rule__Factor__Alternatives_1_1)
	{ after(grammarAccess.getFactorAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getExpAssignment_1_2()); }
	(rule__Factor__ExpAssignment_1_2)
	{ after(grammarAccess.getFactorAccess().getExpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__0__Impl
	rule__Primary__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_5_0()); }
	'['
	{ after(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__1__Impl
	rule__Primary__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getResAssignment_5_1()); }
	(rule__Primary__ResAssignment_5_1)
	{ after(grammarAccess.getPrimaryAccess().getResAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__2__Impl
	rule__Primary__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getGroup_5_2()); }
	(rule__Primary__Group_5_2__0)*
	{ after(grammarAccess.getPrimaryAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_5_3()); }
	']'
	{ after(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5_2__0__Impl
	rule__Primary__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getSemicolonKeyword_5_2_0()); }
	';'
	{ after(grammarAccess.getPrimaryAccess().getSemicolonKeyword_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getResAssignment_5_2_1()); }
	(rule__Primary__ResAssignment_5_2_1)
	{ after(grammarAccess.getPrimaryAccess().getResAssignment_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_6__0__Impl
	rule__Primary__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_6_0()); }
	'{'
	{ after(grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_6__1__Impl
	rule__Primary__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getFunctionArgumentsParserRuleCall_6_1()); }
	ruleFunctionArguments
	{ after(grammarAccess.getPrimaryAccess().getFunctionArgumentsParserRuleCall_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_6_2()); }
	'}'
	{ after(grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getAlternatives_0()); }
	(rule__FunctionCall__Alternatives_0)
	{ after(grammarAccess.getFunctionCallAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getArgsAssignment_1()); }
	(rule__FunctionCall__ArgsAssignment_1)
	{ after(grammarAccess.getFunctionCallAccess().getArgsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__0__Impl
	rule__Name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getFullStopKeyword_0()); }
	('.')?
	{ after(grammarAccess.getNameAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__1__Impl
	rule__Name__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getIDENTTerminalRuleCall_1()); }
	RULE_IDENT
	{ after(grammarAccess.getNameAccess().getIDENTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getGroup_2()); }
	(rule__Name__Group_2__0)*
	{ after(grammarAccess.getNameAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2__0__Impl
	rule__Name__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getNameAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getIDENTTerminalRuleCall_2_1()); }
	RULE_IDENT
	{ after(grammarAccess.getNameAccess().getIDENTTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentReference__Group__0__Impl
	rule__ComponentReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentReferenceAccess().getFullStopKeyword_0()); }
	('.')?
	{ after(grammarAccess.getComponentReferenceAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentReference__Group__1__Impl
	rule__ComponentReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentReferenceAccess().getIdentsAssignment_1()); }
	(rule__ComponentReference__IdentsAssignment_1)
	{ after(grammarAccess.getComponentReferenceAccess().getIdentsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComponentReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComponentReferenceAccess().getSubscriptsAssignment_2()); }
	(rule__ComponentReference__SubscriptsAssignment_2)?
	{ after(grammarAccess.getComponentReferenceAccess().getSubscriptsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallArgs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArgs__Group__0__Impl
	rule__FunctionCallArgs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgsAccess().getFunctionCallArgsAction_0()); }
	()
	{ after(grammarAccess.getFunctionCallArgsAccess().getFunctionCallArgsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArgs__Group__1__Impl
	rule__FunctionCallArgs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunctionCallArgsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArgs__Group__2__Impl
	rule__FunctionCallArgs__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgsAccess().getResAssignment_2()); }
	(rule__FunctionCallArgs__ResAssignment_2)?
	{ after(grammarAccess.getFunctionCallArgsAccess().getResAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCallArgs__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallArgsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionCallArgsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionArguments__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArguments__Group_0__0__Impl
	rule__FunctionArguments__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentsAccess().getArgsAssignment_0_0()); }
	(rule__FunctionArguments__ArgsAssignment_0_0)
	{ after(grammarAccess.getFunctionArgumentsAccess().getArgsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArguments__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentsAccess().getAlternatives_0_1()); }
	(rule__FunctionArguments__Alternatives_0_1)?
	{ after(grammarAccess.getFunctionArgumentsAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionArguments__Group_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArguments__Group_0_1_0__0__Impl
	rule__FunctionArguments__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentsAccess().getCommaKeyword_0_1_0_0()); }
	','
	{ after(grammarAccess.getFunctionArgumentsAccess().getCommaKeyword_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArguments__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentsAccess().getArgsAssignment_0_1_0_1()); }
	(rule__FunctionArguments__ArgsAssignment_0_1_0_1)
	{ after(grammarAccess.getFunctionArgumentsAccess().getArgsAssignment_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionArguments__Group_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArguments__Group_0_1_1__0__Impl
	rule__FunctionArguments__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentsAccess().getForKeyword_0_1_1_0()); }
	'for'
	{ after(grammarAccess.getFunctionArgumentsAccess().getForKeyword_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionArguments__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__Group_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionArgumentsAccess().getIndicesAssignment_0_1_1_1()); }
	(rule__FunctionArguments__IndicesAssignment_0_1_1_1)
	{ after(grammarAccess.getFunctionArgumentsAccess().getIndicesAssignment_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedArguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArguments__Group__0__Impl
	rule__NamedArguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentsAccess().getArgsAssignment_0()); }
	(rule__NamedArguments__ArgsAssignment_0)
	{ after(grammarAccess.getNamedArgumentsAccess().getArgsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArguments__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentsAccess().getGroup_1()); }
	(rule__NamedArguments__Group_1__0)
	{ after(grammarAccess.getNamedArgumentsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedArguments__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArguments__Group_1__0__Impl
	rule__NamedArguments__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getNamedArgumentsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArguments__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentsAccess().getArgsAssignment_1_1()); }
	(rule__NamedArguments__ArgsAssignment_1_1)
	{ after(grammarAccess.getNamedArgumentsAccess().getArgsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedArgument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgument__Group__0__Impl
	rule__NamedArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentAccess().getIdAssignment_0()); }
	(rule__NamedArgument__IdAssignment_0)
	{ after(grammarAccess.getNamedArgumentAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgument__Group__1__Impl
	rule__NamedArgument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getNamedArgumentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgument__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentAccess().getFuncAssignment_2()); }
	(rule__NamedArgument__FuncAssignment_2)
	{ after(grammarAccess.getNamedArgumentAccess().getFuncAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputExpressionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpressionList__Group__0__Impl
	rule__OutputExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionListAccess().getOuputExpressionListAction_0()); }
	()
	{ after(grammarAccess.getOutputExpressionListAccess().getOuputExpressionListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpressionList__Group__1__Impl
	rule__OutputExpressionList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionListAccess().getExprsAssignment_1()); }
	(rule__OutputExpressionList__ExprsAssignment_1)?
	{ after(grammarAccess.getOutputExpressionListAccess().getExprsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpressionList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionListAccess().getGroup_2()); }
	(rule__OutputExpressionList__Group_2__0)*
	{ after(grammarAccess.getOutputExpressionListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputExpressionList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpressionList__Group_2__0__Impl
	rule__OutputExpressionList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionListAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getOutputExpressionListAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputExpressionList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputExpressionListAccess().getExprsAssignment_2_1()); }
	(rule__OutputExpressionList__ExprsAssignment_2_1)?
	{ after(grammarAccess.getOutputExpressionListAccess().getExprsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__0__Impl
	rule__ExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExprsAssignment_0()); }
	(rule__ExpressionList__ExprsAssignment_0)
	{ after(grammarAccess.getExpressionListAccess().getExprsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getGroup_1()); }
	(rule__ExpressionList__Group_1__0)*
	{ after(grammarAccess.getExpressionListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__0__Impl
	rule__ExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExprsAssignment_1_1()); }
	(rule__ExpressionList__ExprsAssignment_1_1)
	{ after(grammarAccess.getExpressionListAccess().getExprsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArraySubscripts__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySubscripts__Group__0__Impl
	rule__ArraySubscripts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySubscriptsAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArraySubscriptsAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySubscripts__Group__1__Impl
	rule__ArraySubscripts__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySubscriptsAccess().getSubscriptsAssignment_1()); }
	(rule__ArraySubscripts__SubscriptsAssignment_1)
	{ after(grammarAccess.getArraySubscriptsAccess().getSubscriptsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySubscripts__Group__2__Impl
	rule__ArraySubscripts__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySubscriptsAccess().getGroup_2()); }
	(rule__ArraySubscripts__Group_2__0)*
	{ after(grammarAccess.getArraySubscriptsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySubscripts__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySubscriptsAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArraySubscriptsAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArraySubscripts__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySubscripts__Group_2__0__Impl
	rule__ArraySubscripts__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySubscriptsAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getArraySubscriptsAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySubscripts__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySubscriptsAccess().getSubscriptsAssignment_2_1()); }
	(rule__ArraySubscripts__SubscriptsAssignment_2_1)
	{ after(grammarAccess.getArraySubscriptsAccess().getSubscriptsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__0__Impl
	rule__Comment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getCommentAssignment_0()); }
	(rule__Comment__CommentAssignment_0)
	{ after(grammarAccess.getCommentAccess().getCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getAnnotationAssignment_1()); }
	(rule__Comment__AnnotationAssignment_1)?
	{ after(grammarAccess.getCommentAccess().getAnnotationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringComment__Group__0__Impl
	rule__StringComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringCommentAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
	{ after(grammarAccess.getStringCommentAccess().getSTRINGTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringComment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringCommentAccess().getGroup_1()); }
	(rule__StringComment__Group_1__0)*
	{ after(grammarAccess.getStringCommentAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringComment__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringComment__Group_1__0__Impl
	rule__StringComment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringCommentAccess().getPlusSignKeyword_1_0()); }
	'+'
	{ after(grammarAccess.getStringCommentAccess().getPlusSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringComment__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComment__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringCommentAccess().getSTRINGTerminalRuleCall_1_1()); }
	RULE_STRING
	{ after(grammarAccess.getStringCommentAccess().getSTRINGTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getAnnotationKeyword_0()); }
	'annotation'
	{ after(grammarAccess.getAnnotationAccess().getAnnotationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getClassModificationParserRuleCall_1()); }
	ruleClassModification
	{ after(grammarAccess.getAnnotationAccess().getClassModificationParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StoredDefinition__WithinAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoredDefinitionAccess().getWithinNameParserRuleCall_0_1_0()); }
		ruleName
		{ after(grammarAccess.getStoredDefinitionAccess().getWithinNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoredDefinition__ClassesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoredDefinitionAccess().getClassesClassDefinitionWithFinalParserRuleCall_1_0_0()); }
		ruleClassDefinitionWithFinal
		{ after(grammarAccess.getStoredDefinitionAccess().getClassesClassDefinitionWithFinalParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionWithFinal__FinalAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDefinitionWithFinalAccess().getFinalFinalKeyword_0_0()); }
		(
			{ before(grammarAccess.getClassDefinitionWithFinalAccess().getFinalFinalKeyword_0_0()); }
			'final'
			{ after(grammarAccess.getClassDefinitionWithFinalAccess().getFinalFinalKeyword_0_0()); }
		)
		{ after(grammarAccess.getClassDefinitionWithFinalAccess().getFinalFinalKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionWithFinal__EncapsulatedAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDefinitionWithFinalAccess().getEncapsulatedEncapsulatedKeyword_1_0()); }
		(
			{ before(grammarAccess.getClassDefinitionWithFinalAccess().getEncapsulatedEncapsulatedKeyword_1_0()); }
			'encapsulated'
			{ after(grammarAccess.getClassDefinitionWithFinalAccess().getEncapsulatedEncapsulatedKeyword_1_0()); }
		)
		{ after(grammarAccess.getClassDefinitionWithFinalAccess().getEncapsulatedEncapsulatedKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__EncapsulatedAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDefinitionAccess().getEncapsulatedEncapsulatedKeyword_0_0()); }
		(
			{ before(grammarAccess.getClassDefinitionAccess().getEncapsulatedEncapsulatedKeyword_0_0()); }
			'encapsulated'
			{ after(grammarAccess.getClassDefinitionAccess().getEncapsulatedEncapsulatedKeyword_0_0()); }
		)
		{ after(grammarAccess.getClassDefinitionAccess().getEncapsulatedEncapsulatedKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSpecifierAccess().getNameIDENTTerminalRuleCall_0_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getClassSpecifierAccess().getNameIDENTTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Str_commentAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSpecifierAccess().getStr_commentStringCommentParserRuleCall_0_1_0()); }
		ruleStringComment
		{ after(grammarAccess.getClassSpecifierAccess().getStr_commentStringCommentParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__CompositionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSpecifierAccess().getCompositionCompositionParserRuleCall_0_2_0()); }
		ruleComposition
		{ after(grammarAccess.getClassSpecifierAccess().getCompositionCompositionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Name_endAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSpecifierAccess().getName_endIDENTTerminalRuleCall_0_4_0()); }
		RULE_IDENT
		{ after(grammarAccess.getClassSpecifierAccess().getName_endIDENTTerminalRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSpecifierAccess().getNameIDENTTerminalRuleCall_1_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getClassSpecifierAccess().getNameIDENTTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__PrefixAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSpecifierAccess().getPrefixBasePrefixParserRuleCall_1_2_0()); }
		ruleBasePrefix
		{ after(grammarAccess.getClassSpecifierAccess().getPrefixBasePrefixParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__Name2Assignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSpecifierAccess().getName2NameParserRuleCall_1_3_0()); }
		ruleName
		{ after(grammarAccess.getClassSpecifierAccess().getName2NameParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__SubsAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSpecifierAccess().getSubsArraySubscriptsParserRuleCall_1_4_0()); }
		ruleArraySubscripts
		{ after(grammarAccess.getClassSpecifierAccess().getSubsArraySubscriptsParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSpecifier__ModAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSpecifierAccess().getModClassModificationParserRuleCall_1_5_0()); }
		ruleClassModification
		{ after(grammarAccess.getClassSpecifierAccess().getModClassModificationParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__EnumsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumListAccess().getEnumsEnumerationLiteralParserRuleCall_0_0()); }
		ruleEnumerationLiteral
		{ after(grammarAccess.getEnumListAccess().getEnumsEnumerationLiteralParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumList__EnumsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumListAccess().getEnumsEnumerationLiteralParserRuleCall_1_1_0()); }
		ruleEnumerationLiteral
		{ after(grammarAccess.getEnumListAccess().getEnumsEnumerationLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationLiteralAccess().getIdIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getEnumerationLiteralAccess().getIdIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationLiteralAccess().getCommentCommentParserRuleCall_1_0()); }
		ruleComment
		{ after(grammarAccess.getEnumerationLiteralAccess().getCommentCommentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Priv_elistAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getPriv_elistElementListParserRuleCall_0_0()); }
		ruleElementList
		{ after(grammarAccess.getCompositionAccess().getPriv_elistElementListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Pub_elistAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getPub_elistElementListParserRuleCall_1_0_1_0()); }
		ruleElementList
		{ after(grammarAccess.getCompositionAccess().getPub_elistElementListParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Protected_elistAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getProtected_elistElementListParserRuleCall_1_1_1_0()); }
		ruleElementList
		{ after(grammarAccess.getCompositionAccess().getProtected_elistElementListParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Eq_secsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getEq_secsEquationSectionParserRuleCall_1_2_0()); }
		ruleEquationSection
		{ after(grammarAccess.getCompositionAccess().getEq_secsEquationSectionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Alg_secsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getAlg_secsAlgorithmSectionParserRuleCall_1_3_0()); }
		ruleAlgorithmSection
		{ after(grammarAccess.getCompositionAccess().getAlg_secsAlgorithmSectionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Ext_lang_specAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getExt_lang_specLanguageSpecificationParserRuleCall_2_1_0()); }
		ruleLanguageSpecification
		{ after(grammarAccess.getCompositionAccess().getExt_lang_specLanguageSpecificationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Ext_func_callAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getExt_func_callExternalFunctionCallParserRuleCall_2_2_0()); }
		ruleExternalFunctionCall
		{ after(grammarAccess.getCompositionAccess().getExt_func_callExternalFunctionCallParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Ext_annoAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getExt_annoAnnotationParserRuleCall_2_3_0()); }
		ruleAnnotation
		{ after(grammarAccess.getCompositionAccess().getExt_annoAnnotationParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__AnnoAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getAnnoAnnotationParserRuleCall_3_0_0()); }
		ruleAnnotation
		{ after(grammarAccess.getCompositionAccess().getAnnoAnnotationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__LhsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalFunctionCallAccess().getLhsComponentReferenceParserRuleCall_0_0_0()); }
		ruleComponentReference
		{ after(grammarAccess.getExternalFunctionCallAccess().getLhsComponentReferenceParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalFunctionCallAccess().getNameIDENTTerminalRuleCall_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getExternalFunctionCallAccess().getNameIDENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalFunctionCall__ArgsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalFunctionCallAccess().getArgsExpressionListParserRuleCall_3_0()); }
		ruleExpressionList
		{ after(grammarAccess.getExternalFunctionCallAccess().getArgsExpressionListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__ElemAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getElemElementParserRuleCall_1_0_0()); }
		ruleElement
		{ after(grammarAccess.getElementListAccess().getElemElementParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__IdAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getIdIDENTTerminalRuleCall_1_0_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getImportClauseAccess().getIdIDENTTerminalRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__NameAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getNameNameParserRuleCall_1_0_2_0()); }
		ruleName
		{ after(grammarAccess.getImportClauseAccess().getNameNameParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__ListAssignment_1_1_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getListImportListParserRuleCall_1_1_1_1_1_1_0()); }
		ruleImportList
		{ after(grammarAccess.getImportClauseAccess().getListImportListParserRuleCall_1_1_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__CommentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getCommentCommentParserRuleCall_2_0()); }
		ruleComment
		{ after(grammarAccess.getImportClauseAccess().getCommentCommentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportListAccess().getIdIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getImportListAccess().getIdIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportList__ListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportListAccess().getListImportListParserRuleCall_1_1_0()); }
		ruleImportList
		{ after(grammarAccess.getImportListAccess().getListImportListParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsClause__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendsClauseAccess().getNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getExtendsClauseAccess().getNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsClause__ModAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendsClauseAccess().getModClassModificationParserRuleCall_2_0()); }
		ruleClassModification
		{ after(grammarAccess.getExtendsClauseAccess().getModClassModificationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsClause__AnnoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendsClauseAccess().getAnnoAnnotationParserRuleCall_3_0()); }
		ruleAnnotation
		{ after(grammarAccess.getExtendsClauseAccess().getAnnoAnnotationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstrainingClauseAccess().getNameNameParserRuleCall_1_0()); }
		ruleName
		{ after(grammarAccess.getConstrainingClauseAccess().getNameNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstrainingClause__ModAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstrainingClauseAccess().getModClassModificationParserRuleCall_2_0()); }
		ruleClassModification
		{ after(grammarAccess.getConstrainingClauseAccess().getModClassModificationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__PrefixAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClauseAccess().getPrefixTypePrefixParserRuleCall_0_0()); }
		ruleTypePrefix
		{ after(grammarAccess.getComponentClauseAccess().getPrefixTypePrefixParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClauseAccess().getTypeTypeSpecifierParserRuleCall_1_0()); }
		ruleTypeSpecifier
		{ after(grammarAccess.getComponentClauseAccess().getTypeTypeSpecifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__SubsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClauseAccess().getSubsArraySubscriptsParserRuleCall_2_0()); }
		ruleArraySubscripts
		{ after(grammarAccess.getComponentClauseAccess().getSubsArraySubscriptsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause__CompsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClauseAccess().getCompsComponentListParserRuleCall_3_0()); }
		ruleComponentList
		{ after(grammarAccess.getComponentClauseAccess().getCompsComponentListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpecifier__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecifierAccess().getNameClassDefinitionCrossReference_0()); }
		(
			{ before(grammarAccess.getTypeSpecifierAccess().getNameClassDefinitionNameParserRuleCall_0_1()); }
			ruleName
			{ after(grammarAccess.getTypeSpecifierAccess().getNameClassDefinitionNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getTypeSpecifierAccess().getNameClassDefinitionCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__CompsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentListAccess().getCompsComponentDeclarationParserRuleCall_0_0()); }
		ruleComponentDeclaration
		{ after(grammarAccess.getComponentListAccess().getCompsComponentDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentList__CompsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentListAccess().getCompsComponentDeclarationParserRuleCall_1_1_0()); }
		ruleComponentDeclaration
		{ after(grammarAccess.getComponentListAccess().getCompsComponentDeclarationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__DeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDeclarationAccess().getDeclDeclarationParserRuleCall_0_0()); }
		ruleDeclaration
		{ after(grammarAccess.getComponentDeclarationAccess().getDeclDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__CondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDeclarationAccess().getCondConditionAttributeParserRuleCall_1_0()); }
		ruleConditionAttribute
		{ after(grammarAccess.getComponentDeclarationAccess().getCondConditionAttributeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__CommentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDeclarationAccess().getCommentCommentParserRuleCall_2_0()); }
		ruleComment
		{ after(grammarAccess.getComponentDeclarationAccess().getCommentCommentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getNameIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getDeclarationAccess().getNameIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SubscriptsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getSubscriptsArraySubscriptsParserRuleCall_1_0()); }
		ruleArraySubscripts
		{ after(grammarAccess.getDeclarationAccess().getSubscriptsArraySubscriptsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ModAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getModModificationParserRuleCall_2_0()); }
		ruleModification
		{ after(grammarAccess.getDeclarationAccess().getModModificationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__ModAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModificationAccess().getModClassModificationParserRuleCall_0_0_0()); }
		ruleClassModification
		{ after(grammarAccess.getModificationAccess().getModClassModificationParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__ExprAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_0_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__ExprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__ExprAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModification__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassModificationAccess().getArgsArgumentListParserRuleCall_2_0()); }
		ruleArgumentList
		{ after(grammarAccess.getClassModificationAccess().getArgsArgumentListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__ArgsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getArgsArgumentParserRuleCall_0_0()); }
		ruleArgument
		{ after(grammarAccess.getArgumentListAccess().getArgsArgumentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__ArgsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getArgsArgumentParserRuleCall_1_1_0()); }
		ruleArgument
		{ after(grammarAccess.getArgumentListAccess().getArgsArgumentParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementModificationAccess().getNameNameParserRuleCall_0_0()); }
		ruleName
		{ after(grammarAccess.getElementModificationAccess().getNameNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__ModAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementModificationAccess().getModModificationParserRuleCall_1_0()); }
		ruleModification
		{ after(grammarAccess.getElementModificationAccess().getModModificationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementModification__CommentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementModificationAccess().getCommentStringCommentParserRuleCall_2_0()); }
		ruleStringComment
		{ after(grammarAccess.getElementModificationAccess().getCommentStringCommentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementReplaceable__ConstAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementReplaceableAccess().getConstConstrainingClauseParserRuleCall_2_0()); }
		ruleConstrainingClause
		{ after(grammarAccess.getElementReplaceableAccess().getConstConstrainingClauseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__PrefixAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClause1Access().getPrefixTypePrefixParserRuleCall_0_0()); }
		ruleTypePrefix
		{ after(grammarAccess.getComponentClause1Access().getPrefixTypePrefixParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClause1Access().getTypeTypeSpecifierParserRuleCall_1_0()); }
		ruleTypeSpecifier
		{ after(grammarAccess.getComponentClause1Access().getTypeTypeSpecifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClause1__CompAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentClause1Access().getCompComponentDeclaration1ParserRuleCall_2_0()); }
		ruleComponentDeclaration1
		{ after(grammarAccess.getComponentClause1Access().getCompComponentDeclaration1ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration1__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentDeclaration1Access().getCommentCommentParserRuleCall_1_0()); }
		ruleComment
		{ after(grammarAccess.getComponentDeclaration1Access().getCommentCommentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__ModeAssignment_3_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassDefinitionAccess().getModeClassModificationParserRuleCall_3_0_3_0()); }
		ruleClassModification
		{ after(grammarAccess.getShortClassDefinitionAccess().getModeClassModificationParserRuleCall_3_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__CommentAssignment_3_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassDefinitionAccess().getCommentCommentParserRuleCall_3_0_4_0()); }
		ruleComment
		{ after(grammarAccess.getShortClassDefinitionAccess().getCommentCommentParserRuleCall_3_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__ListAssignment_3_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassDefinitionAccess().getListEnumListParserRuleCall_3_1_2_0_0()); }
		ruleEnumList
		{ after(grammarAccess.getShortClassDefinitionAccess().getListEnumListParserRuleCall_3_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortClassDefinition__CommentAssignment_3_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortClassDefinitionAccess().getCommentCommentParserRuleCall_3_1_4_0()); }
		ruleComment
		{ after(grammarAccess.getShortClassDefinitionAccess().getCommentCommentParserRuleCall_3_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__InitialAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationSectionAccess().getInitialInitialKeyword_0_0()); }
		(
			{ before(grammarAccess.getEquationSectionAccess().getInitialInitialKeyword_0_0()); }
			'initial'
			{ after(grammarAccess.getEquationSectionAccess().getInitialInitialKeyword_0_0()); }
		)
		{ after(grammarAccess.getEquationSectionAccess().getInitialInitialKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationSection__EquationsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationSectionAccess().getEquationsEquationParserRuleCall_2_0_0()); }
		ruleEquation
		{ after(grammarAccess.getEquationSectionAccess().getEquationsEquationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__InitialAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmSectionAccess().getInitialInitialKeyword_0_0()); }
		(
			{ before(grammarAccess.getAlgorithmSectionAccess().getInitialInitialKeyword_0_0()); }
			'initial'
			{ after(grammarAccess.getAlgorithmSectionAccess().getInitialInitialKeyword_0_0()); }
		)
		{ after(grammarAccess.getAlgorithmSectionAccess().getInitialInitialKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmSection__StatementsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmSectionAccess().getStatementsStatementParserRuleCall_2_0_0()); }
		ruleStatement
		{ after(grammarAccess.getAlgorithmSectionAccess().getStatementsStatementParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__LeftAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getLeftSimpleExpressionParserRuleCall_0_0_0_0()); }
		ruleSimpleExpression
		{ after(grammarAccess.getEquationAccess().getLeftSimpleExpressionParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__RightAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getRightExpressionParserRuleCall_0_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getEquationAccess().getRightExpressionParserRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__CommmentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquationAccess().getCommmentCommentParserRuleCall_1_0()); }
		ruleComment
		{ after(grammarAccess.getEquationAccess().getCommmentCommentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__LeftAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLeftComponentReferenceParserRuleCall_0_0_0_0()); }
		ruleComponentReference
		{ after(grammarAccess.getStatementAccess().getLeftComponentReferenceParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__RightAssignment_0_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getRightAlternatives_0_0_1_1_0()); }
		(rule__Statement__RightAlternatives_0_0_1_1_0)
		{ after(grammarAccess.getStatementAccess().getRightAlternatives_0_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__LeftAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLeftOutputExpressionListParserRuleCall_0_1_1_0()); }
		ruleOutputExpressionList
		{ after(grammarAccess.getStatementAccess().getLeftOutputExpressionListParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__RefAssignment_0_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getRefComponentReferenceParserRuleCall_0_1_4_0()); }
		ruleComponentReference
		{ after(grammarAccess.getStatementAccess().getRefComponentReferenceParserRuleCall_0_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Ref_callAssignment_0_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getRef_callFunctionCallArgsParserRuleCall_0_1_5_0()); }
		ruleFunctionCallArgs
		{ after(grammarAccess.getStatementAccess().getRef_callFunctionCallArgsParserRuleCall_0_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCommentCommentParserRuleCall_1_0()); }
		ruleComment
		{ after(grammarAccess.getStatementAccess().getCommentCommentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__If_exprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfEquationAccess().getIf_exprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIfEquationAccess().getIf_exprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__If_eqsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfEquationAccess().getIf_eqsEquationParserRuleCall_3_0_0()); }
		ruleEquation
		{ after(grammarAccess.getIfEquationAccess().getIf_eqsEquationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Elsif_exprsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfEquationAccess().getElsif_exprsExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIfEquationAccess().getElsif_exprsExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Elseif_eqsAssignment_4_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfEquationAccess().getElseif_eqsEquationParserRuleCall_4_3_0_0()); }
		ruleEquation
		{ after(grammarAccess.getIfEquationAccess().getElseif_eqsEquationParserRuleCall_4_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfEquation__Else_eqsAssignment_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfEquationAccess().getElse_eqsEquationParserRuleCall_5_1_0_0()); }
		ruleEquation
		{ after(grammarAccess.getIfEquationAccess().getElse_eqsEquationParserRuleCall_5_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__If_exprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getIf_exprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStatementAccess().getIf_exprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__If_stmtsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getIf_stmtsStatementParserRuleCall_3_0_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getIf_stmtsStatementParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Elseif_exprsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseif_exprsExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStatementAccess().getElseif_exprsExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Elseif_stmtsAssignment_4_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseif_stmtsStatementParserRuleCall_4_3_0_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getElseif_stmtsStatementParserRuleCall_4_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Else_stmtsAssignment_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElse_stmtsStatementParserRuleCall_5_1_0_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getElse_stmtsStatementParserRuleCall_5_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__IndicesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEquationAccess().getIndicesForIndicesParserRuleCall_1_0()); }
		ruleForIndices
		{ after(grammarAccess.getForEquationAccess().getIndicesForIndicesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEquation__EqsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEquationAccess().getEqsEquationParserRuleCall_3_0_0()); }
		ruleEquation
		{ after(grammarAccess.getForEquationAccess().getEqsEquationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__IndicesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getIndicesForIndicesParserRuleCall_1_0()); }
		ruleForIndices
		{ after(grammarAccess.getForStatementAccess().getIndicesForIndicesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__StmtsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getStmtsStatementParserRuleCall_3_0_0()); }
		ruleStatement
		{ after(grammarAccess.getForStatementAccess().getStmtsStatementParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__IndicesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForIndicesAccess().getIndicesForIndexParserRuleCall_0_0()); }
		ruleForIndex
		{ after(grammarAccess.getForIndicesAccess().getIndicesForIndexParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndices__IndicesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForIndicesAccess().getIndicesForIndexParserRuleCall_1_1_0()); }
		ruleForIndex
		{ after(grammarAccess.getForIndicesAccess().getIndicesForIndexParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForIndexAccess().getIdIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getForIndexAccess().getIdIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__ExprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForIndexAccess().getExprExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getForIndexAccess().getExprExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__CondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getCondExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileStatementAccess().getCondExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__StmtsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getStmtsStatementParserRuleCall_3_0_0()); }
		ruleStatement
		{ after(grammarAccess.getWhileStatementAccess().getStmtsStatementParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__WhenAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenEquationAccess().getWhenExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getWhenEquationAccess().getWhenExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__When_eqsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenEquationAccess().getWhen_eqsEquationParserRuleCall_3_0_0()); }
		ruleEquation
		{ after(grammarAccess.getWhenEquationAccess().getWhen_eqsEquationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__ElsehwhenAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenEquationAccess().getElsehwhenExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getWhenEquationAccess().getElsehwhenExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenEquation__Elsewhen_eqsAssignment_4_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenEquationAccess().getElsewhen_eqsEquationParserRuleCall_4_3_0_0()); }
		ruleEquation
		{ after(grammarAccess.getWhenEquationAccess().getElsewhen_eqsEquationParserRuleCall_4_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__WhenAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenStatementAccess().getWhenExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getWhenStatementAccess().getWhenExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__When_stmtsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenStatementAccess().getWhen_stmtsStatementParserRuleCall_3_0_0()); }
		ruleStatement
		{ after(grammarAccess.getWhenStatementAccess().getWhen_stmtsStatementParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__ElsehwhenAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenStatementAccess().getElsehwhenExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getWhenStatementAccess().getElsehwhenExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenStatement__Elsewhen_stmtsAssignment_4_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenStatementAccess().getElsewhen_stmtsStatementParserRuleCall_4_3_0_0()); }
		ruleStatement
		{ after(grammarAccess.getWhenStatementAccess().getElsewhen_stmtsStatementParserRuleCall_4_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectClauseAccess().getLeftComponentReferenceParserRuleCall_2_0()); }
		ruleComponentReference
		{ after(grammarAccess.getConnectClauseAccess().getLeftComponentReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConnectClause__RightAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectClauseAccess().getRightComponentReferenceParserRuleCall_4_0()); }
		ruleComponentReference
		{ after(grammarAccess.getConnectClauseAccess().getRightComponentReferenceParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__IfAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ThenAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getThenExpressionParserRuleCall_1_3_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getThenExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ElseifAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getElseifExpressionParserRuleCall_1_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getElseifExpressionParserRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ElseifthenAssignment_1_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getElseifthenExpressionParserRuleCall_1_4_3_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getElseifthenExpressionParserRuleCall_1_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ElseAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getElseExpressionParserRuleCall_1_6_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getElseExpressionParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__ExprsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExpressionAccess().getExprsLogicalExpressionParserRuleCall_1_2_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getSimpleExpressionAccess().getExprsLogicalExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpression__ExprsAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExpressionAccess().getExprsLogicalExpressionParserRuleCall_1_3_1_0()); }
		ruleLogicalExpression
		{ after(grammarAccess.getSimpleExpressionAccess().getExprsLogicalExpressionParserRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalExpression__TermsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalExpressionAccess().getTermsLogicalTermParserRuleCall_1_2_0()); }
		ruleLogicalTerm
		{ after(grammarAccess.getLogicalExpressionAccess().getTermsLogicalTermParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalTerm__FactorsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalTermAccess().getFactorsLogicalFactorParserRuleCall_1_2_0()); }
		ruleLogicalFactor
		{ after(grammarAccess.getLogicalTermAccess().getFactorsLogicalFactorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalFactor__NotAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalFactorAccess().getNotNotKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getLogicalFactorAccess().getNotNotKeyword_1_0_0()); }
			'not'
			{ after(grammarAccess.getLogicalFactorAccess().getNotNotKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getLogicalFactorAccess().getNotNotKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalFactor__RelAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalFactorAccess().getRelRelationParserRuleCall_1_1_0()); }
		ruleRelation
		{ after(grammarAccess.getLogicalFactorAccess().getRelRelationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Rel_opAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getRel_opRelOpParserRuleCall_1_1_0()); }
		ruleRelOp
		{ after(grammarAccess.getRelationAccess().getRel_opRelOpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getRightArithmeticExpressionParserRuleCall_1_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getRelationAccess().getRightArithmeticExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__Add_opAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getAdd_opAddOpParserRuleCall_1_1_0()); }
		ruleAddOp
		{ after(grammarAccess.getArithmeticExpressionAccess().getAdd_opAddOpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticExpression__TermsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getTermsNegationParserRuleCall_1_2_0()); }
		ruleNegation
		{ after(grammarAccess.getArithmeticExpressionAccess().getTermsNegationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Neg_opAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getNeg_opAddOpParserRuleCall_1_0_0()); }
		ruleAddOp
		{ after(grammarAccess.getNegationAccess().getNeg_opAddOpParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__TermAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getTermTermParserRuleCall_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getNegationAccess().getTermTermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Mul_opAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getMul_opMulOpParserRuleCall_1_1_0()); }
		ruleMulOp
		{ after(grammarAccess.getTermAccess().getMul_opMulOpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__FactorsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getFactorsFactorParserRuleCall_1_2_0()); }
		ruleFactor
		{ after(grammarAccess.getTermAccess().getFactorsFactorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__ExpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getExpPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getFactorAccess().getExpPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatPrimary__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatPrimaryAccess().getValUNSIGNED_NUMBERTerminalRuleCall_0()); }
		RULE_UNSIGNED_NUMBER
		{ after(grammarAccess.getFloatPrimaryAccess().getValUNSIGNED_NUMBERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringPrimary__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringPrimaryAccess().getValSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringPrimaryAccess().getValSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalPrimary__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalPrimaryAccess().getValTRUE_FALSETerminalRuleCall_0()); }
		RULE_TRUE_FALSE
		{ after(grammarAccess.getLogicalPrimaryAccess().getValTRUE_FALSETerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__End__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndAccess().getValEndKeyword_0()); }
		(
			{ before(grammarAccess.getEndAccess().getValEndKeyword_0()); }
			'end'
			{ after(grammarAccess.getEndAccess().getValEndKeyword_0()); }
		)
		{ after(grammarAccess.getEndAccess().getValEndKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ResAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getResExpressionListParserRuleCall_5_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getPrimaryAccess().getResExpressionListParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ResAssignment_5_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getResExpressionListParserRuleCall_5_2_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getPrimaryAccess().getResExpressionListParserRuleCall_5_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Comp_refAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getComp_refClassDefinitionCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getFunctionCallAccess().getComp_refClassDefinitionNameParserRuleCall_0_0_0_1()); }
			ruleName
			{ after(grammarAccess.getFunctionCallAccess().getComp_refClassDefinitionNameParserRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getFunctionCallAccess().getComp_refClassDefinitionCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getArgsFunctionCallArgsParserRuleCall_1_0()); }
		ruleFunctionCallArgs
		{ after(grammarAccess.getFunctionCallAccess().getArgsFunctionCallArgsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__IdentsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentReferenceAccess().getIdentsIDENTTerminalRuleCall_1_0()); }
		RULE_IDENT
		{ after(grammarAccess.getComponentReferenceAccess().getIdentsIDENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentReference__SubscriptsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentReferenceAccess().getSubscriptsArraySubscriptsParserRuleCall_2_0()); }
		ruleArraySubscripts
		{ after(grammarAccess.getComponentReferenceAccess().getSubscriptsArraySubscriptsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallArgs__ResAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallArgsAccess().getResFunctionArgumentsParserRuleCall_2_0()); }
		ruleFunctionArguments
		{ after(grammarAccess.getFunctionCallArgsAccess().getResFunctionArgumentsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__ArgsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getArgsFunctionArgumentParserRuleCall_0_0_0()); }
		ruleFunctionArgument
		{ after(grammarAccess.getFunctionArgumentsAccess().getArgsFunctionArgumentParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__ArgsAssignment_0_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getArgsFunctionArgumentsParserRuleCall_0_1_0_1_0()); }
		ruleFunctionArguments
		{ after(grammarAccess.getFunctionArgumentsAccess().getArgsFunctionArgumentsParserRuleCall_0_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionArguments__IndicesAssignment_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionArgumentsAccess().getIndicesForIndicesParserRuleCall_0_1_1_1_0()); }
		ruleForIndices
		{ after(grammarAccess.getFunctionArgumentsAccess().getIndicesForIndicesParserRuleCall_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__ArgsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentsAccess().getArgsNamedArgumentParserRuleCall_0_0()); }
		ruleNamedArgument
		{ after(grammarAccess.getNamedArgumentsAccess().getArgsNamedArgumentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArguments__ArgsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentsAccess().getArgsNamedArgumentsParserRuleCall_1_1_0()); }
		ruleNamedArguments
		{ after(grammarAccess.getNamedArgumentsAccess().getArgsNamedArgumentsParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentAccess().getIdIDENTTerminalRuleCall_0_0()); }
		RULE_IDENT
		{ after(grammarAccess.getNamedArgumentAccess().getIdIDENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__FuncAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentAccess().getFuncFunctionArgumentParserRuleCall_2_0()); }
		ruleFunctionArgument
		{ after(grammarAccess.getNamedArgumentAccess().getFuncFunctionArgumentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__ExprsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputExpressionListAccess().getExprsExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getOutputExpressionListAccess().getExprsExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputExpressionList__ExprsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputExpressionListAccess().getExprsExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getOutputExpressionListAccess().getExprsExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExprsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExprsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__SubscriptsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArraySubscriptsAccess().getSubscriptsSubscriptParserRuleCall_1_0()); }
		ruleSubscript
		{ after(grammarAccess.getArraySubscriptsAccess().getSubscriptsSubscriptParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscripts__SubscriptsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArraySubscriptsAccess().getSubscriptsSubscriptParserRuleCall_2_1_0()); }
		ruleSubscript
		{ after(grammarAccess.getArraySubscriptsAccess().getSubscriptsSubscriptParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__AllAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubscriptAccess().getAllColonKeyword_0_0()); }
		(
			{ before(grammarAccess.getSubscriptAccess().getAllColonKeyword_0_0()); }
			':'
			{ after(grammarAccess.getSubscriptAccess().getAllColonKeyword_0_0()); }
		)
		{ after(grammarAccess.getSubscriptAccess().getAllColonKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__CommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getCommentStringCommentParserRuleCall_0_0()); }
		ruleStringComment
		{ after(grammarAccess.getCommentAccess().getCommentStringCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__AnnotationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getAnnotationAnnotationParserRuleCall_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getCommentAccess().getAnnotationAnnotationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_TRUE_FALSE : ('true'|'false');

RULE_IDENT : (RULE_NONDIGIT (RULE_DIGIT|RULE_NONDIGIT)*|RULE_Q_IDENT);

RULE_UNSIGNED_NUMBER : RULE_UNSIGNED_INTEGER ('.' RULE_UNSIGNED_INTEGER?)? (('e'|'E') ('+'|'-')? RULE_UNSIGNED_INTEGER)?;

RULE_STRING : '"' (RULE_S_CHAR|RULE_S_ESCAPE)* '"';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

fragment RULE_DIGIT : '0'..'9';

fragment RULE_UNSIGNED_INTEGER : RULE_DIGIT+;

fragment RULE_S_ESCAPE : '\\' ('\''|'"'|'?'|'\\'|'a'|'b'|'f'|'n'|'r'|'t'|'v');

fragment RULE_Q_IDENT : '\u2019' (RULE_Q_CHAR|RULE_S_ESCAPE)* '\u2019';

fragment RULE_NONDIGIT : ('_'|'a'..'z'|'A'..'Z');

fragment RULE_S_CHAR : ~(('"'|'\\'));

fragment RULE_Q_CHAR : (RULE_NONDIGIT|RULE_DIGIT|'!'|'#'|'$'|'%'|'&'|'('|')'|'*'|'+'|','|'-'|'.'|'/'|':'|';'|'<'|'>'|'='|'?'|'@'|'['|']'|'^'|'{'|'}'|'|'|'~'|' ');
