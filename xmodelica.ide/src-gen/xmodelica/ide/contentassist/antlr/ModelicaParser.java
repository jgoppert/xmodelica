/*
 * generated by Xtext 2.9.2
 */
package xmodelica.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import xmodelica.ide.contentassist.antlr.internal.InternalModelicaParser;
import xmodelica.services.ModelicaGrammarAccess;

public class ModelicaParser extends AbstractContentAssistParser {

	@Inject
	private ModelicaGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalModelicaParser createParser() {
		InternalModelicaParser result = new InternalModelicaParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getClassPrefixesAccess().getAlternatives_1(), "rule__ClassPrefixes__Alternatives_1");
					put(grammarAccess.getClassPrefixesAccess().getAlternatives_1_7_0(), "rule__ClassPrefixes__Alternatives_1_7_0");
					put(grammarAccess.getClassSpecifierAccess().getAlternatives(), "rule__ClassSpecifier__Alternatives");
					put(grammarAccess.getCompositionAccess().getAlternatives_1(), "rule__Composition__Alternatives_1");
					put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
					put(grammarAccess.getElementAccess().getAlternatives_2_4(), "rule__Element__Alternatives_2_4");
					put(grammarAccess.getElementAccess().getAlternatives_2_4_0(), "rule__Element__Alternatives_2_4_0");
					put(grammarAccess.getElementAccess().getAlternatives_2_4_1_1(), "rule__Element__Alternatives_2_4_1_1");
					put(grammarAccess.getImportClauseAccess().getAlternatives_1(), "rule__ImportClause__Alternatives_1");
					put(grammarAccess.getImportClauseAccess().getAlternatives_1_1_1_1(), "rule__ImportClause__Alternatives_1_1_1_1");
					put(grammarAccess.getTypePrefixAccess().getAlternatives_0(), "rule__TypePrefix__Alternatives_0");
					put(grammarAccess.getTypePrefixAccess().getAlternatives_1(), "rule__TypePrefix__Alternatives_1");
					put(grammarAccess.getTypePrefixAccess().getAlternatives_2(), "rule__TypePrefix__Alternatives_2");
					put(grammarAccess.getModificationAccess().getAlternatives(), "rule__Modification__Alternatives");
					put(grammarAccess.getArgumentAccess().getAlternatives(), "rule__Argument__Alternatives");
					put(grammarAccess.getElementModicationOrReplaceableAccess().getAlternatives_2(), "rule__ElementModicationOrReplaceable__Alternatives_2");
					put(grammarAccess.getElementRedeclarationAccess().getAlternatives_3(), "rule__ElementRedeclaration__Alternatives_3");
					put(grammarAccess.getElementRedeclarationAccess().getAlternatives_3_0(), "rule__ElementRedeclaration__Alternatives_3_0");
					put(grammarAccess.getElementReplaceableAccess().getAlternatives_1(), "rule__ElementReplaceable__Alternatives_1");
					put(grammarAccess.getShortClassDefinitionAccess().getAlternatives_3(), "rule__ShortClassDefinition__Alternatives_3");
					put(grammarAccess.getShortClassDefinitionAccess().getAlternatives_3_1_2(), "rule__ShortClassDefinition__Alternatives_3_1_2");
					put(grammarAccess.getEquationAccess().getAlternatives_0(), "rule__Equation__Alternatives_0");
					put(grammarAccess.getStatementAccess().getAlternatives_0(), "rule__Statement__Alternatives_0");
					put(grammarAccess.getStatementAccess().getRightAlternatives_0_0_1_1_0(), "rule__Statement__RightAlternatives_0_0_1_1_0");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getLogicalFactorAccess().getAlternatives(), "rule__LogicalFactor__Alternatives");
					put(grammarAccess.getRelOpAccess().getAlternatives(), "rule__RelOp__Alternatives");
					put(grammarAccess.getNegationAccess().getAlternatives(), "rule__Negation__Alternatives");
					put(grammarAccess.getAddOpAccess().getAlternatives(), "rule__AddOp__Alternatives");
					put(grammarAccess.getMulOpAccess().getAlternatives(), "rule__MulOp__Alternatives");
					put(grammarAccess.getFactorAccess().getAlternatives_1_1(), "rule__Factor__Alternatives_1_1");
					put(grammarAccess.getPrimaryAccess().getAlternatives(), "rule__Primary__Alternatives");
					put(grammarAccess.getFunctionCallAccess().getAlternatives_0(), "rule__FunctionCall__Alternatives_0");
					put(grammarAccess.getFunctionArgumentsAccess().getAlternatives(), "rule__FunctionArguments__Alternatives");
					put(grammarAccess.getFunctionArgumentsAccess().getAlternatives_0_1(), "rule__FunctionArguments__Alternatives_0_1");
					put(grammarAccess.getSubscriptAccess().getAlternatives(), "rule__Subscript__Alternatives");
					put(grammarAccess.getStoredDefinitionAccess().getGroup(), "rule__StoredDefinition__Group__0");
					put(grammarAccess.getStoredDefinitionAccess().getGroup_0(), "rule__StoredDefinition__Group_0__0");
					put(grammarAccess.getStoredDefinitionAccess().getGroup_1(), "rule__StoredDefinition__Group_1__0");
					put(grammarAccess.getClassDefinitionWithFinalAccess().getGroup(), "rule__ClassDefinitionWithFinal__Group__0");
					put(grammarAccess.getClassDefinitionAccess().getGroup(), "rule__ClassDefinition__Group__0");
					put(grammarAccess.getClassPrefixesAccess().getGroup(), "rule__ClassPrefixes__Group__0");
					put(grammarAccess.getClassPrefixesAccess().getGroup_1_2(), "rule__ClassPrefixes__Group_1_2__0");
					put(grammarAccess.getClassPrefixesAccess().getGroup_1_4(), "rule__ClassPrefixes__Group_1_4__0");
					put(grammarAccess.getClassPrefixesAccess().getGroup_1_7(), "rule__ClassPrefixes__Group_1_7__0");
					put(grammarAccess.getClassSpecifierAccess().getGroup_0(), "rule__ClassSpecifier__Group_0__0");
					put(grammarAccess.getClassSpecifierAccess().getGroup_1(), "rule__ClassSpecifier__Group_1__0");
					put(grammarAccess.getEnumListAccess().getGroup(), "rule__EnumList__Group__0");
					put(grammarAccess.getEnumListAccess().getGroup_1(), "rule__EnumList__Group_1__0");
					put(grammarAccess.getEnumerationLiteralAccess().getGroup(), "rule__EnumerationLiteral__Group__0");
					put(grammarAccess.getCompositionAccess().getGroup(), "rule__Composition__Group__0");
					put(grammarAccess.getCompositionAccess().getGroup_1_0(), "rule__Composition__Group_1_0__0");
					put(grammarAccess.getCompositionAccess().getGroup_1_1(), "rule__Composition__Group_1_1__0");
					put(grammarAccess.getCompositionAccess().getGroup_2(), "rule__Composition__Group_2__0");
					put(grammarAccess.getCompositionAccess().getGroup_3(), "rule__Composition__Group_3__0");
					put(grammarAccess.getExternalFunctionCallAccess().getGroup(), "rule__ExternalFunctionCall__Group__0");
					put(grammarAccess.getExternalFunctionCallAccess().getGroup_0(), "rule__ExternalFunctionCall__Group_0__0");
					put(grammarAccess.getElementListAccess().getGroup(), "rule__ElementList__Group__0");
					put(grammarAccess.getElementListAccess().getGroup_1(), "rule__ElementList__Group_1__0");
					put(grammarAccess.getElementAccess().getGroup_2(), "rule__Element__Group_2__0");
					put(grammarAccess.getElementAccess().getGroup_2_4_1(), "rule__Element__Group_2_4_1__0");
					put(grammarAccess.getImportClauseAccess().getGroup(), "rule__ImportClause__Group__0");
					put(grammarAccess.getImportClauseAccess().getGroup_1_0(), "rule__ImportClause__Group_1_0__0");
					put(grammarAccess.getImportClauseAccess().getGroup_1_1(), "rule__ImportClause__Group_1_1__0");
					put(grammarAccess.getImportClauseAccess().getGroup_1_1_1(), "rule__ImportClause__Group_1_1_1__0");
					put(grammarAccess.getImportClauseAccess().getGroup_1_1_1_1_1(), "rule__ImportClause__Group_1_1_1_1_1__0");
					put(grammarAccess.getImportListAccess().getGroup(), "rule__ImportList__Group__0");
					put(grammarAccess.getImportListAccess().getGroup_1(), "rule__ImportList__Group_1__0");
					put(grammarAccess.getExtendsClauseAccess().getGroup(), "rule__ExtendsClause__Group__0");
					put(grammarAccess.getConstrainingClauseAccess().getGroup(), "rule__ConstrainingClause__Group__0");
					put(grammarAccess.getComponentClauseAccess().getGroup(), "rule__ComponentClause__Group__0");
					put(grammarAccess.getTypePrefixAccess().getGroup(), "rule__TypePrefix__Group__0");
					put(grammarAccess.getComponentListAccess().getGroup(), "rule__ComponentList__Group__0");
					put(grammarAccess.getComponentListAccess().getGroup_1(), "rule__ComponentList__Group_1__0");
					put(grammarAccess.getComponentDeclarationAccess().getGroup(), "rule__ComponentDeclaration__Group__0");
					put(grammarAccess.getConditionAttributeAccess().getGroup(), "rule__ConditionAttribute__Group__0");
					put(grammarAccess.getDeclarationAccess().getGroup(), "rule__Declaration__Group__0");
					put(grammarAccess.getModificationAccess().getGroup_0(), "rule__Modification__Group_0__0");
					put(grammarAccess.getModificationAccess().getGroup_0_1(), "rule__Modification__Group_0_1__0");
					put(grammarAccess.getModificationAccess().getGroup_1(), "rule__Modification__Group_1__0");
					put(grammarAccess.getModificationAccess().getGroup_2(), "rule__Modification__Group_2__0");
					put(grammarAccess.getClassModificationAccess().getGroup(), "rule__ClassModification__Group__0");
					put(grammarAccess.getArgumentListAccess().getGroup(), "rule__ArgumentList__Group__0");
					put(grammarAccess.getArgumentListAccess().getGroup_1(), "rule__ArgumentList__Group_1__0");
					put(grammarAccess.getElementModicationOrReplaceableAccess().getGroup(), "rule__ElementModicationOrReplaceable__Group__0");
					put(grammarAccess.getElementModificationAccess().getGroup(), "rule__ElementModification__Group__0");
					put(grammarAccess.getElementRedeclarationAccess().getGroup(), "rule__ElementRedeclaration__Group__0");
					put(grammarAccess.getElementReplaceableAccess().getGroup(), "rule__ElementReplaceable__Group__0");
					put(grammarAccess.getComponentClause1Access().getGroup(), "rule__ComponentClause1__Group__0");
					put(grammarAccess.getComponentDeclaration1Access().getGroup(), "rule__ComponentDeclaration1__Group__0");
					put(grammarAccess.getShortClassDefinitionAccess().getGroup(), "rule__ShortClassDefinition__Group__0");
					put(grammarAccess.getShortClassDefinitionAccess().getGroup_3_0(), "rule__ShortClassDefinition__Group_3_0__0");
					put(grammarAccess.getShortClassDefinitionAccess().getGroup_3_1(), "rule__ShortClassDefinition__Group_3_1__0");
					put(grammarAccess.getEquationSectionAccess().getGroup(), "rule__EquationSection__Group__0");
					put(grammarAccess.getEquationSectionAccess().getGroup_2(), "rule__EquationSection__Group_2__0");
					put(grammarAccess.getAlgorithmSectionAccess().getGroup(), "rule__AlgorithmSection__Group__0");
					put(grammarAccess.getAlgorithmSectionAccess().getGroup_2(), "rule__AlgorithmSection__Group_2__0");
					put(grammarAccess.getEquationAccess().getGroup(), "rule__Equation__Group__0");
					put(grammarAccess.getEquationAccess().getGroup_0_0(), "rule__Equation__Group_0_0__0");
					put(grammarAccess.getStatementAccess().getGroup(), "rule__Statement__Group__0");
					put(grammarAccess.getStatementAccess().getGroup_0_0(), "rule__Statement__Group_0_0__0");
					put(grammarAccess.getStatementAccess().getGroup_0_0_1(), "rule__Statement__Group_0_0_1__0");
					put(grammarAccess.getStatementAccess().getGroup_0_1(), "rule__Statement__Group_0_1__0");
					put(grammarAccess.getIfEquationAccess().getGroup(), "rule__IfEquation__Group__0");
					put(grammarAccess.getIfEquationAccess().getGroup_3(), "rule__IfEquation__Group_3__0");
					put(grammarAccess.getIfEquationAccess().getGroup_4(), "rule__IfEquation__Group_4__0");
					put(grammarAccess.getIfEquationAccess().getGroup_4_3(), "rule__IfEquation__Group_4_3__0");
					put(grammarAccess.getIfEquationAccess().getGroup_5(), "rule__IfEquation__Group_5__0");
					put(grammarAccess.getIfEquationAccess().getGroup_5_1(), "rule__IfEquation__Group_5_1__0");
					put(grammarAccess.getIfStatementAccess().getGroup(), "rule__IfStatement__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup_3(), "rule__IfStatement__Group_3__0");
					put(grammarAccess.getIfStatementAccess().getGroup_4(), "rule__IfStatement__Group_4__0");
					put(grammarAccess.getIfStatementAccess().getGroup_4_3(), "rule__IfStatement__Group_4_3__0");
					put(grammarAccess.getIfStatementAccess().getGroup_5(), "rule__IfStatement__Group_5__0");
					put(grammarAccess.getIfStatementAccess().getGroup_5_1(), "rule__IfStatement__Group_5_1__0");
					put(grammarAccess.getForEquationAccess().getGroup(), "rule__ForEquation__Group__0");
					put(grammarAccess.getForEquationAccess().getGroup_3(), "rule__ForEquation__Group_3__0");
					put(grammarAccess.getForStatementAccess().getGroup(), "rule__ForStatement__Group__0");
					put(grammarAccess.getForStatementAccess().getGroup_3(), "rule__ForStatement__Group_3__0");
					put(grammarAccess.getForIndicesAccess().getGroup(), "rule__ForIndices__Group__0");
					put(grammarAccess.getForIndicesAccess().getGroup_1(), "rule__ForIndices__Group_1__0");
					put(grammarAccess.getForIndexAccess().getGroup(), "rule__ForIndex__Group__0");
					put(grammarAccess.getForIndexAccess().getGroup_1(), "rule__ForIndex__Group_1__0");
					put(grammarAccess.getWhileStatementAccess().getGroup(), "rule__WhileStatement__Group__0");
					put(grammarAccess.getWhileStatementAccess().getGroup_3(), "rule__WhileStatement__Group_3__0");
					put(grammarAccess.getWhenEquationAccess().getGroup(), "rule__WhenEquation__Group__0");
					put(grammarAccess.getWhenEquationAccess().getGroup_3(), "rule__WhenEquation__Group_3__0");
					put(grammarAccess.getWhenEquationAccess().getGroup_4(), "rule__WhenEquation__Group_4__0");
					put(grammarAccess.getWhenEquationAccess().getGroup_4_3(), "rule__WhenEquation__Group_4_3__0");
					put(grammarAccess.getWhenStatementAccess().getGroup(), "rule__WhenStatement__Group__0");
					put(grammarAccess.getWhenStatementAccess().getGroup_3(), "rule__WhenStatement__Group_3__0");
					put(grammarAccess.getWhenStatementAccess().getGroup_4(), "rule__WhenStatement__Group_4__0");
					put(grammarAccess.getWhenStatementAccess().getGroup_4_3(), "rule__WhenStatement__Group_4_3__0");
					put(grammarAccess.getConnectClauseAccess().getGroup(), "rule__ConnectClause__Group__0");
					put(grammarAccess.getExpressionAccess().getGroup_1(), "rule__Expression__Group_1__0");
					put(grammarAccess.getExpressionAccess().getGroup_1_4(), "rule__Expression__Group_1_4__0");
					put(grammarAccess.getSimpleExpressionAccess().getGroup(), "rule__SimpleExpression__Group__0");
					put(grammarAccess.getSimpleExpressionAccess().getGroup_1(), "rule__SimpleExpression__Group_1__0");
					put(grammarAccess.getSimpleExpressionAccess().getGroup_1_3(), "rule__SimpleExpression__Group_1_3__0");
					put(grammarAccess.getLogicalExpressionAccess().getGroup(), "rule__LogicalExpression__Group__0");
					put(grammarAccess.getLogicalExpressionAccess().getGroup_1(), "rule__LogicalExpression__Group_1__0");
					put(grammarAccess.getLogicalTermAccess().getGroup(), "rule__LogicalTerm__Group__0");
					put(grammarAccess.getLogicalTermAccess().getGroup_1(), "rule__LogicalTerm__Group_1__0");
					put(grammarAccess.getLogicalFactorAccess().getGroup_1(), "rule__LogicalFactor__Group_1__0");
					put(grammarAccess.getRelationAccess().getGroup(), "rule__Relation__Group__0");
					put(grammarAccess.getRelationAccess().getGroup_1(), "rule__Relation__Group_1__0");
					put(grammarAccess.getArithmeticExpressionAccess().getGroup(), "rule__ArithmeticExpression__Group__0");
					put(grammarAccess.getArithmeticExpressionAccess().getGroup_1(), "rule__ArithmeticExpression__Group_1__0");
					put(grammarAccess.getNegationAccess().getGroup_1(), "rule__Negation__Group_1__0");
					put(grammarAccess.getTermAccess().getGroup(), "rule__Term__Group__0");
					put(grammarAccess.getTermAccess().getGroup_1(), "rule__Term__Group_1__0");
					put(grammarAccess.getFactorAccess().getGroup(), "rule__Factor__Group__0");
					put(grammarAccess.getFactorAccess().getGroup_1(), "rule__Factor__Group_1__0");
					put(grammarAccess.getPrimaryAccess().getGroup_5(), "rule__Primary__Group_5__0");
					put(grammarAccess.getPrimaryAccess().getGroup_5_2(), "rule__Primary__Group_5_2__0");
					put(grammarAccess.getPrimaryAccess().getGroup_6(), "rule__Primary__Group_6__0");
					put(grammarAccess.getFunctionCallAccess().getGroup(), "rule__FunctionCall__Group__0");
					put(grammarAccess.getNameAccess().getGroup(), "rule__Name__Group__0");
					put(grammarAccess.getNameAccess().getGroup_2(), "rule__Name__Group_2__0");
					put(grammarAccess.getComponentReferenceAccess().getGroup(), "rule__ComponentReference__Group__0");
					put(grammarAccess.getFunctionCallArgsAccess().getGroup(), "rule__FunctionCallArgs__Group__0");
					put(grammarAccess.getFunctionArgumentsAccess().getGroup_0(), "rule__FunctionArguments__Group_0__0");
					put(grammarAccess.getFunctionArgumentsAccess().getGroup_0_1_0(), "rule__FunctionArguments__Group_0_1_0__0");
					put(grammarAccess.getFunctionArgumentsAccess().getGroup_0_1_1(), "rule__FunctionArguments__Group_0_1_1__0");
					put(grammarAccess.getNamedArgumentsAccess().getGroup(), "rule__NamedArguments__Group__0");
					put(grammarAccess.getNamedArgumentsAccess().getGroup_1(), "rule__NamedArguments__Group_1__0");
					put(grammarAccess.getNamedArgumentAccess().getGroup(), "rule__NamedArgument__Group__0");
					put(grammarAccess.getOutputExpressionListAccess().getGroup(), "rule__OutputExpressionList__Group__0");
					put(grammarAccess.getOutputExpressionListAccess().getGroup_2(), "rule__OutputExpressionList__Group_2__0");
					put(grammarAccess.getExpressionListAccess().getGroup(), "rule__ExpressionList__Group__0");
					put(grammarAccess.getExpressionListAccess().getGroup_1(), "rule__ExpressionList__Group_1__0");
					put(grammarAccess.getArraySubscriptsAccess().getGroup(), "rule__ArraySubscripts__Group__0");
					put(grammarAccess.getArraySubscriptsAccess().getGroup_2(), "rule__ArraySubscripts__Group_2__0");
					put(grammarAccess.getCommentAccess().getGroup(), "rule__Comment__Group__0");
					put(grammarAccess.getStringCommentAccess().getGroup(), "rule__StringComment__Group__0");
					put(grammarAccess.getStringCommentAccess().getGroup_1(), "rule__StringComment__Group_1__0");
					put(grammarAccess.getAnnotationAccess().getGroup(), "rule__Annotation__Group__0");
					put(grammarAccess.getStoredDefinitionAccess().getWithinAssignment_0_1(), "rule__StoredDefinition__WithinAssignment_0_1");
					put(grammarAccess.getStoredDefinitionAccess().getClassesAssignment_1_0(), "rule__StoredDefinition__ClassesAssignment_1_0");
					put(grammarAccess.getClassDefinitionWithFinalAccess().getFinalAssignment_0(), "rule__ClassDefinitionWithFinal__FinalAssignment_0");
					put(grammarAccess.getClassDefinitionWithFinalAccess().getEncapsulatedAssignment_1(), "rule__ClassDefinitionWithFinal__EncapsulatedAssignment_1");
					put(grammarAccess.getClassDefinitionAccess().getEncapsulatedAssignment_0(), "rule__ClassDefinition__EncapsulatedAssignment_0");
					put(grammarAccess.getClassSpecifierAccess().getNameAssignment_0_0(), "rule__ClassSpecifier__NameAssignment_0_0");
					put(grammarAccess.getClassSpecifierAccess().getStr_commentAssignment_0_1(), "rule__ClassSpecifier__Str_commentAssignment_0_1");
					put(grammarAccess.getClassSpecifierAccess().getCompositionAssignment_0_2(), "rule__ClassSpecifier__CompositionAssignment_0_2");
					put(grammarAccess.getClassSpecifierAccess().getName_endAssignment_0_4(), "rule__ClassSpecifier__Name_endAssignment_0_4");
					put(grammarAccess.getClassSpecifierAccess().getNameAssignment_1_0(), "rule__ClassSpecifier__NameAssignment_1_0");
					put(grammarAccess.getClassSpecifierAccess().getPrefixAssignment_1_2(), "rule__ClassSpecifier__PrefixAssignment_1_2");
					put(grammarAccess.getClassSpecifierAccess().getName2Assignment_1_3(), "rule__ClassSpecifier__Name2Assignment_1_3");
					put(grammarAccess.getClassSpecifierAccess().getSubsAssignment_1_4(), "rule__ClassSpecifier__SubsAssignment_1_4");
					put(grammarAccess.getClassSpecifierAccess().getModAssignment_1_5(), "rule__ClassSpecifier__ModAssignment_1_5");
					put(grammarAccess.getEnumListAccess().getEnumsAssignment_0(), "rule__EnumList__EnumsAssignment_0");
					put(grammarAccess.getEnumListAccess().getEnumsAssignment_1_1(), "rule__EnumList__EnumsAssignment_1_1");
					put(grammarAccess.getEnumerationLiteralAccess().getIdAssignment_0(), "rule__EnumerationLiteral__IdAssignment_0");
					put(grammarAccess.getEnumerationLiteralAccess().getCommentAssignment_1(), "rule__EnumerationLiteral__CommentAssignment_1");
					put(grammarAccess.getCompositionAccess().getPriv_elistAssignment_0(), "rule__Composition__Priv_elistAssignment_0");
					put(grammarAccess.getCompositionAccess().getPub_elistAssignment_1_0_1(), "rule__Composition__Pub_elistAssignment_1_0_1");
					put(grammarAccess.getCompositionAccess().getProtected_elistAssignment_1_1_1(), "rule__Composition__Protected_elistAssignment_1_1_1");
					put(grammarAccess.getCompositionAccess().getEq_secsAssignment_1_2(), "rule__Composition__Eq_secsAssignment_1_2");
					put(grammarAccess.getCompositionAccess().getAlg_secsAssignment_1_3(), "rule__Composition__Alg_secsAssignment_1_3");
					put(grammarAccess.getCompositionAccess().getExt_lang_specAssignment_2_1(), "rule__Composition__Ext_lang_specAssignment_2_1");
					put(grammarAccess.getCompositionAccess().getExt_func_callAssignment_2_2(), "rule__Composition__Ext_func_callAssignment_2_2");
					put(grammarAccess.getCompositionAccess().getExt_annoAssignment_2_3(), "rule__Composition__Ext_annoAssignment_2_3");
					put(grammarAccess.getCompositionAccess().getAnnoAssignment_3_0(), "rule__Composition__AnnoAssignment_3_0");
					put(grammarAccess.getExternalFunctionCallAccess().getLhsAssignment_0_0(), "rule__ExternalFunctionCall__LhsAssignment_0_0");
					put(grammarAccess.getExternalFunctionCallAccess().getNameAssignment_1(), "rule__ExternalFunctionCall__NameAssignment_1");
					put(grammarAccess.getExternalFunctionCallAccess().getArgsAssignment_3(), "rule__ExternalFunctionCall__ArgsAssignment_3");
					put(grammarAccess.getElementListAccess().getElemAssignment_1_0(), "rule__ElementList__ElemAssignment_1_0");
					put(grammarAccess.getImportClauseAccess().getIdAssignment_1_0_0(), "rule__ImportClause__IdAssignment_1_0_0");
					put(grammarAccess.getImportClauseAccess().getNameAssignment_1_0_2(), "rule__ImportClause__NameAssignment_1_0_2");
					put(grammarAccess.getImportClauseAccess().getListAssignment_1_1_1_1_1_1(), "rule__ImportClause__ListAssignment_1_1_1_1_1_1");
					put(grammarAccess.getImportClauseAccess().getCommentAssignment_2(), "rule__ImportClause__CommentAssignment_2");
					put(grammarAccess.getImportListAccess().getIdAssignment_0(), "rule__ImportList__IdAssignment_0");
					put(grammarAccess.getImportListAccess().getListAssignment_1_1(), "rule__ImportList__ListAssignment_1_1");
					put(grammarAccess.getExtendsClauseAccess().getNameAssignment_1(), "rule__ExtendsClause__NameAssignment_1");
					put(grammarAccess.getExtendsClauseAccess().getModAssignment_2(), "rule__ExtendsClause__ModAssignment_2");
					put(grammarAccess.getExtendsClauseAccess().getAnnoAssignment_3(), "rule__ExtendsClause__AnnoAssignment_3");
					put(grammarAccess.getConstrainingClauseAccess().getNameAssignment_1(), "rule__ConstrainingClause__NameAssignment_1");
					put(grammarAccess.getConstrainingClauseAccess().getModAssignment_2(), "rule__ConstrainingClause__ModAssignment_2");
					put(grammarAccess.getComponentClauseAccess().getPrefixAssignment_0(), "rule__ComponentClause__PrefixAssignment_0");
					put(grammarAccess.getComponentClauseAccess().getTypeAssignment_1(), "rule__ComponentClause__TypeAssignment_1");
					put(grammarAccess.getComponentClauseAccess().getSubsAssignment_2(), "rule__ComponentClause__SubsAssignment_2");
					put(grammarAccess.getComponentClauseAccess().getCompsAssignment_3(), "rule__ComponentClause__CompsAssignment_3");
					put(grammarAccess.getTypeSpecifierAccess().getNameAssignment(), "rule__TypeSpecifier__NameAssignment");
					put(grammarAccess.getComponentListAccess().getCompsAssignment_0(), "rule__ComponentList__CompsAssignment_0");
					put(grammarAccess.getComponentListAccess().getCompsAssignment_1_1(), "rule__ComponentList__CompsAssignment_1_1");
					put(grammarAccess.getComponentDeclarationAccess().getDeclAssignment_0(), "rule__ComponentDeclaration__DeclAssignment_0");
					put(grammarAccess.getComponentDeclarationAccess().getCondAssignment_1(), "rule__ComponentDeclaration__CondAssignment_1");
					put(grammarAccess.getComponentDeclarationAccess().getCommentAssignment_2(), "rule__ComponentDeclaration__CommentAssignment_2");
					put(grammarAccess.getDeclarationAccess().getNameAssignment_0(), "rule__Declaration__NameAssignment_0");
					put(grammarAccess.getDeclarationAccess().getSubscriptsAssignment_1(), "rule__Declaration__SubscriptsAssignment_1");
					put(grammarAccess.getDeclarationAccess().getModAssignment_2(), "rule__Declaration__ModAssignment_2");
					put(grammarAccess.getModificationAccess().getModAssignment_0_0(), "rule__Modification__ModAssignment_0_0");
					put(grammarAccess.getModificationAccess().getExprAssignment_0_1_1(), "rule__Modification__ExprAssignment_0_1_1");
					put(grammarAccess.getModificationAccess().getExprAssignment_1_1(), "rule__Modification__ExprAssignment_1_1");
					put(grammarAccess.getModificationAccess().getExprAssignment_2_1(), "rule__Modification__ExprAssignment_2_1");
					put(grammarAccess.getClassModificationAccess().getArgsAssignment_2(), "rule__ClassModification__ArgsAssignment_2");
					put(grammarAccess.getArgumentListAccess().getArgsAssignment_0(), "rule__ArgumentList__ArgsAssignment_0");
					put(grammarAccess.getArgumentListAccess().getArgsAssignment_1_1(), "rule__ArgumentList__ArgsAssignment_1_1");
					put(grammarAccess.getElementModificationAccess().getNameAssignment_0(), "rule__ElementModification__NameAssignment_0");
					put(grammarAccess.getElementModificationAccess().getModAssignment_1(), "rule__ElementModification__ModAssignment_1");
					put(grammarAccess.getElementModificationAccess().getCommentAssignment_2(), "rule__ElementModification__CommentAssignment_2");
					put(grammarAccess.getElementReplaceableAccess().getConstAssignment_2(), "rule__ElementReplaceable__ConstAssignment_2");
					put(grammarAccess.getComponentClause1Access().getPrefixAssignment_0(), "rule__ComponentClause1__PrefixAssignment_0");
					put(grammarAccess.getComponentClause1Access().getTypeAssignment_1(), "rule__ComponentClause1__TypeAssignment_1");
					put(grammarAccess.getComponentClause1Access().getCompAssignment_2(), "rule__ComponentClause1__CompAssignment_2");
					put(grammarAccess.getComponentDeclaration1Access().getCommentAssignment_1(), "rule__ComponentDeclaration1__CommentAssignment_1");
					put(grammarAccess.getShortClassDefinitionAccess().getModeAssignment_3_0_3(), "rule__ShortClassDefinition__ModeAssignment_3_0_3");
					put(grammarAccess.getShortClassDefinitionAccess().getCommentAssignment_3_0_4(), "rule__ShortClassDefinition__CommentAssignment_3_0_4");
					put(grammarAccess.getShortClassDefinitionAccess().getListAssignment_3_1_2_0(), "rule__ShortClassDefinition__ListAssignment_3_1_2_0");
					put(grammarAccess.getShortClassDefinitionAccess().getCommentAssignment_3_1_4(), "rule__ShortClassDefinition__CommentAssignment_3_1_4");
					put(grammarAccess.getEquationSectionAccess().getInitialAssignment_0(), "rule__EquationSection__InitialAssignment_0");
					put(grammarAccess.getEquationSectionAccess().getEquationsAssignment_2_0(), "rule__EquationSection__EquationsAssignment_2_0");
					put(grammarAccess.getAlgorithmSectionAccess().getInitialAssignment_0(), "rule__AlgorithmSection__InitialAssignment_0");
					put(grammarAccess.getAlgorithmSectionAccess().getStatementsAssignment_2_0(), "rule__AlgorithmSection__StatementsAssignment_2_0");
					put(grammarAccess.getEquationAccess().getLeftAssignment_0_0_0(), "rule__Equation__LeftAssignment_0_0_0");
					put(grammarAccess.getEquationAccess().getRightAssignment_0_0_2(), "rule__Equation__RightAssignment_0_0_2");
					put(grammarAccess.getEquationAccess().getCommmentAssignment_1(), "rule__Equation__CommmentAssignment_1");
					put(grammarAccess.getStatementAccess().getLeftAssignment_0_0_0(), "rule__Statement__LeftAssignment_0_0_0");
					put(grammarAccess.getStatementAccess().getRightAssignment_0_0_1_1(), "rule__Statement__RightAssignment_0_0_1_1");
					put(grammarAccess.getStatementAccess().getLeftAssignment_0_1_1(), "rule__Statement__LeftAssignment_0_1_1");
					put(grammarAccess.getStatementAccess().getRefAssignment_0_1_4(), "rule__Statement__RefAssignment_0_1_4");
					put(grammarAccess.getStatementAccess().getRef_callAssignment_0_1_5(), "rule__Statement__Ref_callAssignment_0_1_5");
					put(grammarAccess.getStatementAccess().getCommentAssignment_1(), "rule__Statement__CommentAssignment_1");
					put(grammarAccess.getIfEquationAccess().getIf_exprAssignment_1(), "rule__IfEquation__If_exprAssignment_1");
					put(grammarAccess.getIfEquationAccess().getIf_eqsAssignment_3_0(), "rule__IfEquation__If_eqsAssignment_3_0");
					put(grammarAccess.getIfEquationAccess().getElsif_exprsAssignment_4_1(), "rule__IfEquation__Elsif_exprsAssignment_4_1");
					put(grammarAccess.getIfEquationAccess().getElseif_eqsAssignment_4_3_0(), "rule__IfEquation__Elseif_eqsAssignment_4_3_0");
					put(grammarAccess.getIfEquationAccess().getElse_eqsAssignment_5_1_0(), "rule__IfEquation__Else_eqsAssignment_5_1_0");
					put(grammarAccess.getIfStatementAccess().getIf_exprAssignment_1(), "rule__IfStatement__If_exprAssignment_1");
					put(grammarAccess.getIfStatementAccess().getIf_stmtsAssignment_3_0(), "rule__IfStatement__If_stmtsAssignment_3_0");
					put(grammarAccess.getIfStatementAccess().getElseif_exprsAssignment_4_1(), "rule__IfStatement__Elseif_exprsAssignment_4_1");
					put(grammarAccess.getIfStatementAccess().getElseif_stmtsAssignment_4_3_0(), "rule__IfStatement__Elseif_stmtsAssignment_4_3_0");
					put(grammarAccess.getIfStatementAccess().getElse_stmtsAssignment_5_1_0(), "rule__IfStatement__Else_stmtsAssignment_5_1_0");
					put(grammarAccess.getForEquationAccess().getIndicesAssignment_1(), "rule__ForEquation__IndicesAssignment_1");
					put(grammarAccess.getForEquationAccess().getEqsAssignment_3_0(), "rule__ForEquation__EqsAssignment_3_0");
					put(grammarAccess.getForStatementAccess().getIndicesAssignment_1(), "rule__ForStatement__IndicesAssignment_1");
					put(grammarAccess.getForStatementAccess().getStmtsAssignment_3_0(), "rule__ForStatement__StmtsAssignment_3_0");
					put(grammarAccess.getForIndicesAccess().getIndicesAssignment_0(), "rule__ForIndices__IndicesAssignment_0");
					put(grammarAccess.getForIndicesAccess().getIndicesAssignment_1_1(), "rule__ForIndices__IndicesAssignment_1_1");
					put(grammarAccess.getForIndexAccess().getIdAssignment_0(), "rule__ForIndex__IdAssignment_0");
					put(grammarAccess.getForIndexAccess().getExprAssignment_1_1(), "rule__ForIndex__ExprAssignment_1_1");
					put(grammarAccess.getWhileStatementAccess().getCondAssignment_1(), "rule__WhileStatement__CondAssignment_1");
					put(grammarAccess.getWhileStatementAccess().getStmtsAssignment_3_0(), "rule__WhileStatement__StmtsAssignment_3_0");
					put(grammarAccess.getWhenEquationAccess().getWhenAssignment_1(), "rule__WhenEquation__WhenAssignment_1");
					put(grammarAccess.getWhenEquationAccess().getWhen_eqsAssignment_3_0(), "rule__WhenEquation__When_eqsAssignment_3_0");
					put(grammarAccess.getWhenEquationAccess().getElsehwhenAssignment_4_1(), "rule__WhenEquation__ElsehwhenAssignment_4_1");
					put(grammarAccess.getWhenEquationAccess().getElsewhen_eqsAssignment_4_3_0(), "rule__WhenEquation__Elsewhen_eqsAssignment_4_3_0");
					put(grammarAccess.getWhenStatementAccess().getWhenAssignment_1(), "rule__WhenStatement__WhenAssignment_1");
					put(grammarAccess.getWhenStatementAccess().getWhen_stmtsAssignment_3_0(), "rule__WhenStatement__When_stmtsAssignment_3_0");
					put(grammarAccess.getWhenStatementAccess().getElsehwhenAssignment_4_1(), "rule__WhenStatement__ElsehwhenAssignment_4_1");
					put(grammarAccess.getWhenStatementAccess().getElsewhen_stmtsAssignment_4_3_0(), "rule__WhenStatement__Elsewhen_stmtsAssignment_4_3_0");
					put(grammarAccess.getConnectClauseAccess().getLeftAssignment_2(), "rule__ConnectClause__LeftAssignment_2");
					put(grammarAccess.getConnectClauseAccess().getRightAssignment_4(), "rule__ConnectClause__RightAssignment_4");
					put(grammarAccess.getExpressionAccess().getIfAssignment_1_1(), "rule__Expression__IfAssignment_1_1");
					put(grammarAccess.getExpressionAccess().getThenAssignment_1_3(), "rule__Expression__ThenAssignment_1_3");
					put(grammarAccess.getExpressionAccess().getElseifAssignment_1_4_1(), "rule__Expression__ElseifAssignment_1_4_1");
					put(grammarAccess.getExpressionAccess().getElseifthenAssignment_1_4_3(), "rule__Expression__ElseifthenAssignment_1_4_3");
					put(grammarAccess.getExpressionAccess().getElseAssignment_1_6(), "rule__Expression__ElseAssignment_1_6");
					put(grammarAccess.getSimpleExpressionAccess().getExprsAssignment_1_2(), "rule__SimpleExpression__ExprsAssignment_1_2");
					put(grammarAccess.getSimpleExpressionAccess().getExprsAssignment_1_3_1(), "rule__SimpleExpression__ExprsAssignment_1_3_1");
					put(grammarAccess.getLogicalExpressionAccess().getTermsAssignment_1_2(), "rule__LogicalExpression__TermsAssignment_1_2");
					put(grammarAccess.getLogicalTermAccess().getFactorsAssignment_1_2(), "rule__LogicalTerm__FactorsAssignment_1_2");
					put(grammarAccess.getLogicalFactorAccess().getNotAssignment_1_0(), "rule__LogicalFactor__NotAssignment_1_0");
					put(grammarAccess.getLogicalFactorAccess().getRelAssignment_1_1(), "rule__LogicalFactor__RelAssignment_1_1");
					put(grammarAccess.getRelationAccess().getRel_opAssignment_1_1(), "rule__Relation__Rel_opAssignment_1_1");
					put(grammarAccess.getRelationAccess().getRightAssignment_1_2(), "rule__Relation__RightAssignment_1_2");
					put(grammarAccess.getArithmeticExpressionAccess().getAdd_opAssignment_1_1(), "rule__ArithmeticExpression__Add_opAssignment_1_1");
					put(grammarAccess.getArithmeticExpressionAccess().getTermsAssignment_1_2(), "rule__ArithmeticExpression__TermsAssignment_1_2");
					put(grammarAccess.getNegationAccess().getNeg_opAssignment_1_0(), "rule__Negation__Neg_opAssignment_1_0");
					put(grammarAccess.getNegationAccess().getTermAssignment_1_1(), "rule__Negation__TermAssignment_1_1");
					put(grammarAccess.getTermAccess().getMul_opAssignment_1_1(), "rule__Term__Mul_opAssignment_1_1");
					put(grammarAccess.getTermAccess().getFactorsAssignment_1_2(), "rule__Term__FactorsAssignment_1_2");
					put(grammarAccess.getFactorAccess().getExpAssignment_1_2(), "rule__Factor__ExpAssignment_1_2");
					put(grammarAccess.getFloatPrimaryAccess().getValAssignment(), "rule__FloatPrimary__ValAssignment");
					put(grammarAccess.getStringPrimaryAccess().getValAssignment(), "rule__StringPrimary__ValAssignment");
					put(grammarAccess.getLogicalPrimaryAccess().getValAssignment(), "rule__LogicalPrimary__ValAssignment");
					put(grammarAccess.getEndAccess().getValAssignment(), "rule__End__ValAssignment");
					put(grammarAccess.getPrimaryAccess().getResAssignment_5_1(), "rule__Primary__ResAssignment_5_1");
					put(grammarAccess.getPrimaryAccess().getResAssignment_5_2_1(), "rule__Primary__ResAssignment_5_2_1");
					put(grammarAccess.getFunctionCallAccess().getComp_refAssignment_0_0(), "rule__FunctionCall__Comp_refAssignment_0_0");
					put(grammarAccess.getFunctionCallAccess().getArgsAssignment_1(), "rule__FunctionCall__ArgsAssignment_1");
					put(grammarAccess.getComponentReferenceAccess().getIdentsAssignment_1(), "rule__ComponentReference__IdentsAssignment_1");
					put(grammarAccess.getComponentReferenceAccess().getSubscriptsAssignment_2(), "rule__ComponentReference__SubscriptsAssignment_2");
					put(grammarAccess.getFunctionCallArgsAccess().getResAssignment_2(), "rule__FunctionCallArgs__ResAssignment_2");
					put(grammarAccess.getFunctionArgumentsAccess().getArgsAssignment_0_0(), "rule__FunctionArguments__ArgsAssignment_0_0");
					put(grammarAccess.getFunctionArgumentsAccess().getArgsAssignment_0_1_0_1(), "rule__FunctionArguments__ArgsAssignment_0_1_0_1");
					put(grammarAccess.getFunctionArgumentsAccess().getIndicesAssignment_0_1_1_1(), "rule__FunctionArguments__IndicesAssignment_0_1_1_1");
					put(grammarAccess.getNamedArgumentsAccess().getArgsAssignment_0(), "rule__NamedArguments__ArgsAssignment_0");
					put(grammarAccess.getNamedArgumentsAccess().getArgsAssignment_1_1(), "rule__NamedArguments__ArgsAssignment_1_1");
					put(grammarAccess.getNamedArgumentAccess().getIdAssignment_0(), "rule__NamedArgument__IdAssignment_0");
					put(grammarAccess.getNamedArgumentAccess().getFuncAssignment_2(), "rule__NamedArgument__FuncAssignment_2");
					put(grammarAccess.getOutputExpressionListAccess().getExprsAssignment_1(), "rule__OutputExpressionList__ExprsAssignment_1");
					put(grammarAccess.getOutputExpressionListAccess().getExprsAssignment_2_1(), "rule__OutputExpressionList__ExprsAssignment_2_1");
					put(grammarAccess.getExpressionListAccess().getExprsAssignment_0(), "rule__ExpressionList__ExprsAssignment_0");
					put(grammarAccess.getExpressionListAccess().getExprsAssignment_1_1(), "rule__ExpressionList__ExprsAssignment_1_1");
					put(grammarAccess.getArraySubscriptsAccess().getSubscriptsAssignment_1(), "rule__ArraySubscripts__SubscriptsAssignment_1");
					put(grammarAccess.getArraySubscriptsAccess().getSubscriptsAssignment_2_1(), "rule__ArraySubscripts__SubscriptsAssignment_2_1");
					put(grammarAccess.getSubscriptAccess().getAllAssignment_0(), "rule__Subscript__AllAssignment_0");
					put(grammarAccess.getCommentAccess().getCommentAssignment_0(), "rule__Comment__CommentAssignment_0");
					put(grammarAccess.getCommentAccess().getAnnotationAssignment_1(), "rule__Comment__AnnotationAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalModelicaParser typedParser = (InternalModelicaParser) parser;
			typedParser.entryRuleStoredDefinition();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ModelicaGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ModelicaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
